{
	"id": "b17dde0515cb4b6efff8ddb1ce3105fc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.8",
	"solcLongVersion": "0.8.8+commit.dddeac2f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/kiazen/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract KaiERC721 is ERC721A, Ownable {\r\n\r\n    \r\n     constructor(\r\n       \r\n       ) ERC721A(\"KaiGen\", \"KaGE\") {\r\n        _transferOwnership(msg.sender);\r\n        }    \r\n    function _baseURI() internal pure override returns (string memory) {\r\n        return 'https://boredapeyachtclub.com/api/mutants/';\r\n    }\r\n\r\n    function tokenURI(uint256 tokenId) public view  override returns (string memory) {\r\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\r\n    }\r\n\r\n    function mint(\r\n        address to,\r\n        uint256 quantity\r\n    ) public onlyOwner{\r\n       _mint(to, quantity);\r\n              \r\n    }\r\n    function burn(uint256 tokenId) public onlyOwner returns (string memory) {\r\n        _burn(tokenId);\r\n        return \"Token burned\";\r\n    }\r\n}\r\n   "
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector);\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Returns whether the ownership slot at `index` is initialized.\n     * An uninitialized slot does not necessarily mean that the slot has no owner.\n     */\n    function _ownershipIsInitialized(uint256 index) internal view virtual returns (bool) {\n        return _packedOwnerships[index] != 0;\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {\n        if (_startTokenId() <= tokenId) {\n            packed = _packedOwnerships[tokenId];\n            // If the data at the starting slot does not exist, start the scan.\n            if (packed == 0) {\n                if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector);\n                // Invariant:\n                // There will always be an initialized ownership slot\n                // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                // before an unintialized ownership slot\n                // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                // Hence, `tokenId` will not underflow.\n                //\n                // We can directly compare the packed value.\n                // If the address is zero, packed will be zero.\n                for (;;) {\n                    unchecked {\n                        packed = _packedOwnerships[--tokenId];\n                    }\n                    if (packed == 0) continue;\n                    if (packed & _BITMASK_BURNED == 0) return packed;\n                    // Otherwise, the token is burned, and we must revert.\n                    // This handles the case of batch burned tokens, where only the burned bit\n                    // of the starting slot is set, and remaining slots are left uninitialized.\n                    _revert(OwnerQueryForNonexistentToken.selector);\n                }\n            }\n            // Otherwise, the data exists and we can skip the scan.\n            // This is possible because we have already achieved the target condition.\n            // This saves 2143 gas on transfers of initialized tokens.\n            // If the token is not burned, return `packed`. Otherwise, revert.\n            if (packed & _BITMASK_BURNED == 0) return packed;\n        }\n        _revert(OwnerQueryForNonexistentToken.selector);\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        _approve(to, tokenId, true);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool result) {\n        if (_startTokenId() <= tokenId) {\n            if (tokenId < _currentIndex) {\n                uint256 packed;\n                while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId;\n                result = packed & _BITMASK_BURNED == 0;\n            }\n        }\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS));\n\n        if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector);\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n        assembly {\n            // Emit the `Transfer` event.\n            log4(\n                0, // Start of data (0, since no data).\n                0, // End of data (0, since no data).\n                _TRANSFER_EVENT_SIGNATURE, // Signature.\n                from, // `from`.\n                toMasked, // `to`.\n                tokenId // `tokenId`.\n            )\n        }\n        if (toMasked == 0) _revert(TransferToZeroAddress.selector);\n\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n            assembly {\n                revert(add(32, reason), mload(reason))\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            uint256 end = startTokenId + quantity;\n            uint256 tokenId = startTokenId;\n\n            do {\n                assembly {\n                    // Emit the `Transfer` event.\n                    log4(\n                        0, // Start of data (0, since no data).\n                        0, // End of data (0, since no data).\n                        _TRANSFER_EVENT_SIGNATURE, // Signature.\n                        0, // `address(0)`.\n                        toMasked, // `to`.\n                        tokenId // `tokenId`.\n                    )\n                }\n                // The `!=` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n            } while (++tokenId != end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) _revert(MintToZeroAddress.selector);\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) _revert(MintERC2309QuantityExceedsLimit.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        _revert(TransferToNonERC721ReceiverImplementer.selector);\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) _revert(bytes4(0));\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    // =============================================================\n    //                       APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_approve(to, tokenId, false)`.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _approve(to, tokenId, false);\n    }\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        bool approvalCheck\n    ) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        if (approvalCheck && _msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                _revert(ApprovalCallerNotOwnerNorApproved.selector);\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) _revert(OwnershipNotInitializedForExtraData.selector);\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n\n    /**\n     * @dev For more efficient reverts.\n     */\n    function _revert(bytes4 errorSelector) internal pure {\n        assembly {\n            mstore(0x00, errorSelector)\n            revert(0x00, 0x04)\n        }\n    }\n}\n"
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/kiazen/ERC721A.sol": {
				"KaiERC721": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/kiazen/ERC721A.sol\":197:1130  contract KaiERC721 is ERC721A, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/kiazen/ERC721A.sol\":252:363  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":4946:5100  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x4b616947656e0000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4b61474500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5020:5025  name_ */\n  dup2\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5012:5017  _name */\n  0x02\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5012:5025  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5045:5052  symbol_ */\n  dup1\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5035:5042  _symbol */\n  0x03\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5035:5052  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5078:5093  _startTokenId() */\n  tag_9\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5078:5091  _startTokenId */\n  shl(0x20, tag_10)\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5078:5093  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5062:5075  _currentIndex */\n  0x00\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5062:5093  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":4946:5100  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/kiazen/ERC721A.sol\":321:351  _transferOwnership(msg.sender) */\n  tag_17\n    /* \"contracts/kiazen/ERC721A.sol\":340:350  msg.sender */\n  caller\n    /* \"contracts/kiazen/ERC721A.sol\":321:339  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"contracts/kiazen/ERC721A.sol\":321:351  _transferOwnership(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"contracts/kiazen/ERC721A.sol\":197:1130  contract KaiERC721 is ERC721A, Ownable {... */\n  jump(tag_18)\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_10:\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5482:5489  uint256 */\n  0x00\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x08\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/kiazen/ERC721A.sol\":197:1130  contract KaiERC721 is ERC721A, Ownable {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_25\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_24)\ntag_25:\n  dup3\n  0x1f\n  lt\n  tag_26\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_24)\ntag_26:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_24\n  jumpi\n  swap2\n  dup3\n  add\ntag_27:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_28\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_27)\ntag_28:\ntag_24:\n  pop\n  swap1\n  pop\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  pop\n  swap1\n  jump\t// out\ntag_30:\ntag_31:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_32\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_31)\ntag_32:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:187   */\ntag_33:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x22\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"#utility.yul\":193:513   */\ntag_23:\n    /* \"#utility.yul\":237:243   */\n  0x00\n    /* \"#utility.yul\":274:275   */\n  0x02\n    /* \"#utility.yul\":268:272   */\n  dup3\n    /* \"#utility.yul\":264:276   */\n  div\n    /* \"#utility.yul\":254:276   */\n  swap1\n  pop\n    /* \"#utility.yul\":321:322   */\n  0x01\n    /* \"#utility.yul\":315:319   */\n  dup3\n    /* \"#utility.yul\":311:323   */\n  and\n    /* \"#utility.yul\":342:360   */\n  dup1\n    /* \"#utility.yul\":332:413   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":398:402   */\n  0x7f\n    /* \"#utility.yul\":390:396   */\n  dup3\n    /* \"#utility.yul\":386:403   */\n  and\n    /* \"#utility.yul\":376:403   */\n  swap2\n  pop\n    /* \"#utility.yul\":332:413   */\ntag_37:\n    /* \"#utility.yul\":460:462   */\n  0x20\n    /* \"#utility.yul\":452:458   */\n  dup3\n    /* \"#utility.yul\":449:463   */\n  lt\n    /* \"#utility.yul\":429:447   */\n  dup2\n    /* \"#utility.yul\":426:464   */\n  eq\n    /* \"#utility.yul\":423:507   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":479:497   */\n  tag_39\n  tag_33\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":423:507   */\ntag_38:\n    /* \"#utility.yul\":244:513   */\n  pop\n    /* \"#utility.yul\":193:513   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/kiazen/ERC721A.sol\":197:1130  contract KaiERC721 is ERC721A, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/kiazen/ERC721A.sol\":197:1130  contract KaiERC721 is ERC721A, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_22:\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x18160ddd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9164:9794  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10048:10146  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16911:17134  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16639:16761  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20546:23993  function transferFrom(... */\n    tag_7:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/kiazen/ERC721A.sol\":846:984  function mint(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24084:24271  function safeTransferFrom(... */\n    tag_9:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/kiazen/ERC721A.sol\":990:1127  function burn(uint256 tokenId) public onlyOwner returns (string memory) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11409:11559  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7045:7284  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10217:10319  function symbol() public view virtual override returns (string memory) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17461:17692  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24852:25257  function safeTransferFrom(... */\n    tag_17:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/kiazen/ERC721A.sol\":518:838  function tokenURI(uint256 tokenId) public view  override returns (string memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17842:18004  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      tag_108\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      stop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9164:9794  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_28:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9249:9253  bool */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9582:9592  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9567:9592  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9567:9578  interfaceId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9567:9592  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9567:9668  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_115\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9658:9668  0x80ac58cd */\n      0x80ac58cd\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9643:9668  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9643:9654  interfaceId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9643:9668  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9567:9668  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_115:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9567:9744  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_116\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9734:9744  0x5b5e139f */\n      0x5b5e139f\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9719:9744  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9719:9730  interfaceId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9719:9744  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9567:9744  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_116:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9548:9744  return... */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9164:9794  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10048:10146  function name() public view virtual override returns (string memory) {... */\n    tag_33:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10102:10115  string memory */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10134:10139  _name */\n      0x02\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10127:10139  return _name */\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_120\n      swap1\n      tag_119\n      jump\t// in\n    tag_120:\n      dup1\n      iszero\n      tag_121\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_122\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_121)\n    tag_122:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_123:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_123\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10048:10146  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16911:17134  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_40:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16987:16994  address */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17011:17027  _exists(tokenId) */\n      tag_125\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17019:17026  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17011:17018  _exists */\n      tag_126\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17011:17027  _exists(tokenId) */\n      jump\t// in\n    tag_125:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17006:17079  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_127\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17029:17079  _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_128\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17037:17078  ApprovalQueryForNonexistentToken.selector */\n      shl(0xe0, 0xcf4700e4)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17029:17036  _revert */\n      tag_129\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17029:17079  _revert(ApprovalQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_128:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17006:17079  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n    tag_127:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17097:17112  _tokenApprovals */\n      0x06\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17097:17121  _tokenApprovals[tokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17113:17120  tokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17097:17121  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17097:17127  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17090:17127  return _tokenApprovals[tokenId].value */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16911:17134  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16639:16761  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_46:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16727:16754  _approve(to, tokenId, true) */\n      tag_131\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16736:16738  to */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16740:16747  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16749:16753  true */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16727:16735  _approve */\n      tag_132\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16727:16754  _approve(to, tokenId, true) */\n      jump\t// in\n    tag_131:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16639:16761  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_49:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5955:5962  uint256 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6179:6194  _startTokenId() */\n      tag_134\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6179:6192  _startTokenId */\n      tag_135\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6179:6194  _startTokenId() */\n      jump\t// in\n    tag_134:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6164:6176  _burnCounter */\n      sload(0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6148:6161  _currentIndex */\n      sload(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6148:6176  _currentIndex - _burnCounter */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6148:6194  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6141:6194  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20546:23993  function transferFrom(... */\n    tag_55:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20683:20710  uint256 prevOwnershipPacked */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20713:20740  _packedOwnershipOf(tokenId) */\n      tag_137\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20732:20739  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20713:20731  _packedOwnershipOf */\n      tag_138\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20713:20740  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_137:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20683:20740  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2785:2799  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20881:20885  from */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20865:20887  uint256(uint160(from)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20865:20906  uint256(uint160(from)) & _BITMASK_ADDRESS */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20842:20908  from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS)) */\n      swap4\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20964:20968  from */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20923:20968  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20939:20958  prevOwnershipPacked */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20923:20968  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20919:21014  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n      tag_139\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20970:21014  _revert(TransferFromIncorrectOwner.selector) */\n      tag_140\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20978:21013  TransferFromIncorrectOwner.selector */\n      shl(0xe0, 0xa1148100)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20970:20977  _revert */\n      tag_129\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20970:21014  _revert(TransferFromIncorrectOwner.selector) */\n      jump\t// in\n    tag_140:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20919:21014  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n    tag_139:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21026:21053  uint256 approvedAddressSlot */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21055:21078  address approvedAddress */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21082:21117  _getApprovedSlotAndAddress(tokenId) */\n      tag_141\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21109:21116  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21082:21108  _getApprovedSlotAndAddress */\n      tag_142\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21082:21117  _getApprovedSlotAndAddress(tokenId) */\n      jump\t// in\n    tag_141:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21025:21117  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21214:21282  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_143\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21239:21254  approvedAddress */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21256:21260  from */\n      dup8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21262:21281  _msgSenderERC721A() */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21262:21279  _msgSenderERC721A */\n      tag_145\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21262:21281  _msgSenderERC721A() */\n      jump\t// in\n    tag_144:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21214:21238  _isSenderApprovedOrOwner */\n      tag_146\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21214:21282  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_143:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21209:21397  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_147\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21301:21344  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_148\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21318:21322  from */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21324:21343  _msgSenderERC721A() */\n      tag_149\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21324:21341  _msgSenderERC721A */\n      tag_145\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21324:21343  _msgSenderERC721A() */\n      jump\t// in\n    tag_149:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21301:21317  isApprovedForAll */\n      tag_108\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21301:21344  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_148:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21296:21397  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_150\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21346:21397  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_151\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21354:21396  TransferCallerNotOwnerNorApproved.selector */\n      shl(0xe0, 0x59c896be)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21346:21353  _revert */\n      tag_129\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21346:21397  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_151:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21296:21397  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n    tag_150:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21209:21397  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_147:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21408:21451  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_152\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21430:21434  from */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21436:21438  to */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21440:21447  tokenId */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21449:21450  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21408:21429  _beforeTokenTransfers */\n      tag_153\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21408:21451  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_152:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21540:21555  approvedAddress */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21537:21694  if approvedAddress {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21678:21679  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21657:21676  approvedAddressSlot */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21650:21680  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21537:21694  if approvedAddress {... */\n    tag_154:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22066:22084  _packedAddressData */\n      0x05\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22066:22090  _packedAddressData[from] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22085:22089  from */\n      dup8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22066:22090  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22064:22090  --_packedAddressData[from] */\n      dup2\n      sload\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22134:22152  _packedAddressData */\n      0x05\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22134:22156  _packedAddressData[to] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22153:22155  to */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22134:22156  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22132:22156  ++_packedAddressData[to] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22449:22592  _packOwnershipData(... */\n      tag_155\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22485:22487  to */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22533:22578  _nextExtraData(from, to, prevOwnershipPacked) */\n      tag_156\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22548:22552  from */\n      dup9\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22554:22556  to */\n      dup9\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22558:22577  prevOwnershipPacked */\n      dup8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22533:22547  _nextExtraData */\n      tag_157\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22533:22578  _nextExtraData(from, to, prevOwnershipPacked) */\n      jump\t// in\n    tag_156:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22505:22578  _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked) */\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22449:22467  _packOwnershipData */\n      tag_158\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22449:22592  _packOwnershipData(... */\n      jump\t// in\n    tag_155:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22420:22437  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22420:22446  _packedOwnerships[tokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22438:22445  tokenId */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22420:22446  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22420:22592  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22760:22761  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22709:22728  prevOwnershipPacked */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22709:22756  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22709:22761  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22705:23322  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22781:22800  uint256 nextTokenId */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22813:22814  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22803:22810  tokenId */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22803:22814  tokenId + 1 */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22781:22814  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22968:22969  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22934:22951  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22934:22964  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22952:22963  nextTokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22934:22964  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22934:22969  _packedOwnerships[nextTokenId] == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22930:23308  if (_packedOwnerships[nextTokenId] == 0) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23070:23083  _currentIndex */\n      sload(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23055:23066  nextTokenId */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23055:23083  nextTokenId != _currentIndex */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23051:23290  if (nextTokenId != _currentIndex) {... */\n      tag_161\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23248:23267  prevOwnershipPacked */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23215:23232  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23215:23245  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23233:23244  nextTokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23215:23245  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23215:23267  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23051:23290  if (nextTokenId != _currentIndex) {... */\n    tag_161:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22930:23308  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_160:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22763:23322  {... */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22705:23322  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_159:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23431:23447  uint256 toMasked */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2785:2799  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23466:23468  to */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23450:23470  uint256(uint160(to)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23450:23489  uint256(uint160(to)) & _BITMASK_ADDRESS */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23431:23489  uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23821:23828  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23786:23794  toMasked */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23753:23757  from */\n      dup9\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23696:23721  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23642:23643  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23586:23587  0 */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23564:23856  log4(... */\n      log4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23891:23892  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23879:23887  toMasked */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23879:23892  toMasked == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23875:23933  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n      iszero\n      tag_162\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23894:23933  _revert(TransferToZeroAddress.selector) */\n      tag_163\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23902:23932  TransferToZeroAddress.selector */\n      shl(0xe0, 0xea553b34)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23894:23901  _revert */\n      tag_129\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23894:23933  _revert(TransferToZeroAddress.selector) */\n      jump\t// in\n    tag_163:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23875:23933  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n    tag_162:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23944:23986  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_164\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23965:23969  from */\n      dup8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23971:23973  to */\n      dup8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23975:23982  tokenId */\n      dup8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23984:23985  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23944:23964  _afterTokenTransfers */\n      tag_165\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23944:23986  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_164:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20673:23993  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20546:23993  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/kiazen/ERC721A.sol\":846:984  function mint(... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_167:\n        /* \"contracts/kiazen/ERC721A.sol\":941:960  _mint(to, quantity) */\n      tag_170\n        /* \"contracts/kiazen/ERC721A.sol\":947:949  to */\n      dup3\n        /* \"contracts/kiazen/ERC721A.sol\":951:959  quantity */\n      dup3\n        /* \"contracts/kiazen/ERC721A.sol\":941:946  _mint */\n      tag_171\n        /* \"contracts/kiazen/ERC721A.sol\":941:960  _mint(to, quantity) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/kiazen/ERC721A.sol\":846:984  function mint(... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24084:24271  function safeTransferFrom(... */\n    tag_62:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24225:24264  safeTransferFrom(from, to, tokenId, '') */\n      tag_173\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24242:24246  from */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24248:24250  to */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24252:24259  tokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24225:24264  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24225:24241  safeTransferFrom */\n      tag_98\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24225:24264  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_173:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24084:24271  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/kiazen/ERC721A.sol\":990:1127  function burn(uint256 tokenId) public onlyOwner returns (string memory) {... */\n    tag_66:\n        /* \"contracts/kiazen/ERC721A.sol\":1047:1060  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/kiazen/ERC721A.sol\":1073:1087  _burn(tokenId) */\n      tag_177\n        /* \"contracts/kiazen/ERC721A.sol\":1079:1086  tokenId */\n      dup3\n        /* \"contracts/kiazen/ERC721A.sol\":1073:1078  _burn */\n      tag_178\n        /* \"contracts/kiazen/ERC721A.sol\":1073:1087  _burn(tokenId) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/kiazen/ERC721A.sol\":1098:1119  return \"Token burned\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      0x546f6b656e206275726e65640000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/kiazen/ERC721A.sol\":990:1127  function burn(uint256 tokenId) public onlyOwner returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11409:11559  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_71:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11481:11488  address */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11523:11550  _packedOwnershipOf(tokenId) */\n      tag_180\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11542:11549  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11523:11541  _packedOwnershipOf */\n      tag_138\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11523:11550  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_180:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11500:11552  return address(uint160(_packedOwnershipOf(tokenId))) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11409:11559  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7045:7284  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_77:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7117:7124  uint256 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7157:7158  0 */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7140:7159  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7140:7145  owner */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7140:7159  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7136:7205  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n      iszero\n      tag_182\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7161:7205  _revert(BalanceQueryForZeroAddress.selector) */\n      tag_183\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7169:7204  BalanceQueryForZeroAddress.selector */\n      shl(0xe0, 0x8f4eb604)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7161:7168  _revert */\n      tag_129\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7161:7205  _revert(BalanceQueryForZeroAddress.selector) */\n      jump\t// in\n    tag_183:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7136:7205  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n    tag_182:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":1360:1373  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7222:7240  _packedAddressData */\n      0x05\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7222:7247  _packedAddressData[owner] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7241:7246  owner */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7222:7247  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7222:7277  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7215:7277  return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7045:7284  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10217:10319  function symbol() public view virtual override returns (string memory) {... */\n    tag_88:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10273:10286  string memory */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10305:10312  _symbol */\n      0x03\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10298:10312  return _symbol */\n      dup1\n      sload\n      tag_191\n      swap1\n      tag_119\n      jump\t// in\n    tag_191:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_192\n      swap1\n      tag_119\n      jump\t// in\n    tag_192:\n      dup1\n      iszero\n      tag_193\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_194\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_193)\n    tag_194:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_195:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_195\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_193:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10217:10319  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17461:17692  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_94:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17607:17615  approved */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17555:17573  _operatorApprovals */\n      0x07\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17555:17594  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17574:17593  _msgSenderERC721A() */\n      tag_197\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17574:17591  _msgSenderERC721A */\n      tag_145\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17574:17593  _msgSenderERC721A() */\n      jump\t// in\n    tag_197:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17555:17594  _operatorApprovals[_msgSenderERC721A()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17555:17604  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17595:17603  operator */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17555:17604  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17555:17615  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17666:17674  operator */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17630:17685  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17645:17664  _msgSenderERC721A() */\n      tag_198\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17645:17662  _msgSenderERC721A */\n      tag_145\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17645:17664  _msgSenderERC721A() */\n      jump\t// in\n    tag_198:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17630:17685  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17676:17684  approved */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17630:17685  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      tag_199\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17461:17692  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24852:25257  function safeTransferFrom(... */\n    tag_98:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25021:25052  transferFrom(from, to, tokenId) */\n      tag_201\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25034:25038  from */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25040:25042  to */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25044:25051  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25021:25033  transferFrom */\n      tag_55\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25021:25052  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_201:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25084:25085  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25066:25068  to */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25066:25080  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25066:25085  to.code.length != 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25062:25251  if (to.code.length != 0)... */\n      tag_202\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25104:25160  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_203\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25135:25139  from */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25141:25143  to */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25145:25152  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25154:25159  _data */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25104:25134  _checkContractOnERC721Received */\n      tag_204\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25104:25160  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_203:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25099:25251  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_205\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25180:25236  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_206\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25188:25235  TransferToNonERC721ReceiverImplementer.selector */\n      shl(0xe0, 0xd1a57ed6)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25180:25187  _revert */\n      tag_129\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25180:25236  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_206:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25099:25251  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_205:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25062:25251  if (to.code.length != 0)... */\n    tag_202:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24852:25257  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/kiazen/ERC721A.sol\":518:838  function tokenURI(uint256 tokenId) public view  override returns (string memory) {... */\n    tag_102:\n        /* \"contracts/kiazen/ERC721A.sol\":584:597  string memory */\n      0x60\n        /* \"contracts/kiazen/ERC721A.sol\":615:631  _exists(tokenId) */\n      tag_208\n        /* \"contracts/kiazen/ERC721A.sol\":623:630  tokenId */\n      dup3\n        /* \"contracts/kiazen/ERC721A.sol\":615:622  _exists */\n      tag_126\n        /* \"contracts/kiazen/ERC721A.sol\":615:631  _exists(tokenId) */\n      jump\t// in\n    tag_208:\n        /* \"contracts/kiazen/ERC721A.sol\":610:678  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n      tag_209\n      jumpi\n        /* \"contracts/kiazen/ERC721A.sol\":633:678  _revert(URIQueryForNonexistentToken.selector) */\n      tag_210\n        /* \"contracts/kiazen/ERC721A.sol\":641:677  URIQueryForNonexistentToken.selector */\n      shl(0xe0, 0xa14c4b50)\n        /* \"contracts/kiazen/ERC721A.sol\":633:640  _revert */\n      tag_129\n        /* \"contracts/kiazen/ERC721A.sol\":633:678  _revert(URIQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/kiazen/ERC721A.sol\":610:678  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n    tag_209:\n        /* \"contracts/kiazen/ERC721A.sol\":691:712  string memory baseURI */\n      0x00\n        /* \"contracts/kiazen/ERC721A.sol\":715:725  _baseURI() */\n      tag_211\n        /* \"contracts/kiazen/ERC721A.sol\":715:723  _baseURI */\n      tag_212\n        /* \"contracts/kiazen/ERC721A.sol\":715:725  _baseURI() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/kiazen/ERC721A.sol\":691:725  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/kiazen/ERC721A.sol\":768:769  0 */\n      0x00\n        /* \"contracts/kiazen/ERC721A.sol\":749:756  baseURI */\n      dup2\n        /* \"contracts/kiazen/ERC721A.sol\":743:764  bytes(baseURI).length */\n      mload\n        /* \"contracts/kiazen/ERC721A.sol\":743:769  bytes(baseURI).length != 0 */\n      eq\n      iszero\n        /* \"contracts/kiazen/ERC721A.sol\":743:830  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_213\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_214)\n    tag_213:\n        /* \"contracts/kiazen/ERC721A.sol\":796:803  baseURI */\n      dup1\n        /* \"contracts/kiazen/ERC721A.sol\":805:823  _toString(tokenId) */\n      tag_215\n        /* \"contracts/kiazen/ERC721A.sol\":815:822  tokenId */\n      dup5\n        /* \"contracts/kiazen/ERC721A.sol\":805:814  _toString */\n      tag_216\n        /* \"contracts/kiazen/ERC721A.sol\":805:823  _toString(tokenId) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/kiazen/ERC721A.sol\":779:824  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_217\n      swap3\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/kiazen/ERC721A.sol\":743:830  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_214:\n        /* \"contracts/kiazen/ERC721A.sol\":736:830  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap2\n      pop\n      pop\n        /* \"contracts/kiazen/ERC721A.sol\":518:838  function tokenURI(uint256 tokenId) public view  override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17842:18004  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_108:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17939:17943  bool */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17962:17980  _operatorApprovals */\n      0x07\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17962:17987  _operatorApprovals[owner] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17981:17986  owner */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17962:17987  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17962:17997  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17988:17996  operator */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17962:17997  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17955:17997  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17842:18004  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_221\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18253:18613  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n    tag_126:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18318:18329  bool result */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18364:18371  tokenId */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18345:18360  _startTokenId() */\n      tag_228\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18345:18358  _startTokenId */\n      tag_135\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18345:18360  _startTokenId() */\n      jump\t// in\n    tag_228:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18345:18371  _startTokenId() <= tokenId */\n      gt\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18341:18607  if (_startTokenId() <= tokenId) {... */\n      tag_229\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18401:18414  _currentIndex */\n      sload(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18391:18398  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18391:18414  tokenId < _currentIndex */\n      lt\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18387:18597  if (tokenId < _currentIndex) {... */\n      iszero\n      tag_230\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18434:18448  uint256 packed */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18466:18526  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n    tag_231:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18514:18515  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18483:18500  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18483:18509  _packedOwnerships[tokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18501:18508  tokenId */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18483:18509  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18474:18509  packed = _packedOwnerships[tokenId] */\n      swap2\n      pop\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18473:18515  (packed = _packedOwnerships[tokenId]) == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18466:18526  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      iszero\n      tag_232\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18517:18526  --tokenId */\n      dup3\n      tag_233\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      swap3\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18466:18526  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      jump(tag_231)\n    tag_232:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18581:18582  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18553:18559  packed */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18553:18577  packed & _BITMASK_BURNED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18553:18582  packed & _BITMASK_BURNED == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18544:18582  result = packed & _BITMASK_BURNED == 0 */\n      swap2\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18416:18597  {... */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18387:18597  if (tokenId < _currentIndex) {... */\n    tag_230:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18341:18607  if (_startTokenId() <= tokenId) {... */\n    tag_229:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18253:18613  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43371:43531  function _revert(bytes4 errorSelector) internal pure {... */\n    tag_129:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43470:43483  errorSelector */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43464:43468  0x00 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43457:43484  mstore(0x00, errorSelector) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43510:43514  0x04 */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43504:43508  0x00 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43497:43515  revert(0x00, 0x04) */\n      revert\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35019:35479  function _approve(... */\n    tag_132:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35143:35156  address owner */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35159:35175  ownerOf(tokenId) */\n      tag_237\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35167:35174  tokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35159:35166  ownerOf */\n      tag_71\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35159:35175  ownerOf(tokenId) */\n      jump\t// in\n    tag_237:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35143:35175  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35190:35203  approvalCheck */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35190:35235  approvalCheck && _msgSenderERC721A() != owner */\n      dup1\n      iszero\n      tag_238\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35230:35235  owner */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35207:35235  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35207:35226  _msgSenderERC721A() */\n      tag_239\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35207:35224  _msgSenderERC721A */\n      tag_145\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35207:35226  _msgSenderERC721A() */\n      jump\t// in\n    tag_239:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35207:35235  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35190:35235  approvalCheck && _msgSenderERC721A() != owner */\n    tag_238:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35186:35384  if (approvalCheck && _msgSenderERC721A() != owner)... */\n      iszero\n      tag_240\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35254:35298  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_241\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35271:35276  owner */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35278:35297  _msgSenderERC721A() */\n      tag_242\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35278:35295  _msgSenderERC721A */\n      tag_145\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35278:35297  _msgSenderERC721A() */\n      jump\t// in\n    tag_242:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35254:35270  isApprovedForAll */\n      tag_108\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35254:35298  isApprovedForAll(owner, _msgSenderERC721A()) */\n      jump\t// in\n    tag_241:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35249:35384  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_243\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35318:35369  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      tag_244\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35326:35368  ApprovalCallerNotOwnerNorApproved.selector */\n      shl(0xe0, 0xcfb3b942)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35318:35325  _revert */\n      tag_129\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35318:35369  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_244:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35249:35384  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_243:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35186:35384  if (approvalCheck && _msgSenderERC721A() != owner)... */\n    tag_240:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35427:35429  to */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35394:35409  _tokenApprovals */\n      0x06\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35394:35418  _tokenApprovals[tokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35410:35417  tokenId */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35394:35418  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35394:35424  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35394:35429  _tokenApprovals[tokenId].value = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35464:35471  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35460:35462  to */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35444:35472  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35453:35458  owner */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35444:35472  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35133:35479  {... */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35019:35479  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_135:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5482:5489  uint256 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12850:14828  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_138:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12917:12931  uint256 packed */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12966:12973  tokenId */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12947:12962  _startTokenId() */\n      tag_247\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12947:12960  _startTokenId */\n      tag_135\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12947:12962  _startTokenId() */\n      jump\t// in\n    tag_247:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12947:12973  _startTokenId() <= tokenId */\n      gt\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12943:14765  if (_startTokenId() <= tokenId) {... */\n      tag_248\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12998:13015  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12998:13024  _packedOwnerships[tokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13016:13023  tokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12998:13024  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12989:13024  packed = _packedOwnerships[tokenId] */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13132:13133  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13122:13128  packed */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13122:13133  packed == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13118:14388  if (packed == 0) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13168:13181  _currentIndex */\n      sload(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13157:13164  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13157:13181  tokenId >= _currentIndex */\n      lt\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13153:13230  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_250\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13183:13230  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_251\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13191:13229  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13183:13190  _revert */\n      tag_129\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13183:13230  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_251:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13153:13230  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n    tag_250:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13777:14374  for (;;) {... */\n    tag_252:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13853:13870  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13853:13881  _packedOwnerships[--tokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13871:13880  --tokenId */\n      dup4\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13853:13881  _packedOwnerships[--tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13844:13881  packed = _packedOwnerships[--tokenId] */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13939:13940  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13929:13935  packed */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13929:13940  packed == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13925:13950  if (packed == 0) continue */\n      iszero\n      tag_255\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13942:13950  continue */\n      jump(tag_254)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13925:13950  if (packed == 0) continue */\n    tag_255:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14004:14005  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13976:13982  packed */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13976:14000  packed & _BITMASK_BURNED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13976:14005  packed & _BITMASK_BURNED == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13972:14020  if (packed & _BITMASK_BURNED == 0) return packed */\n      iszero\n      tag_256\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14007:14020  return packed */\n      jump(tag_246)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13972:14020  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_256:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14308:14355  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_257\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14316:14354  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14308:14315  _revert */\n      tag_129\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14308:14355  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_257:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13777:14374  for (;;) {... */\n    tag_254:\n      jump(tag_252)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13118:14388  if (packed == 0) {... */\n    tag_249:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14738:14739  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14710:14716  packed */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14710:14734  packed & _BITMASK_BURNED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14710:14739  packed & _BITMASK_BURNED == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14706:14754  if (packed & _BITMASK_BURNED == 0) return packed */\n      iszero\n      tag_258\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14741:14754  return packed */\n      jump(tag_246)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14706:14754  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_258:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12943:14765  if (_startTokenId() <= tokenId) {... */\n    tag_248:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14774:14821  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_259\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14782:14820  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14774:14781  _revert */\n      tag_129\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14774:14821  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_259:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12850:14828  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_246:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19471:19945  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n    tag_142:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19570:19597  uint256 approvedAddressSlot */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19599:19622  address approvedAddress */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19638:19676  TokenApprovalRef storage tokenApproval */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19679:19694  _tokenApprovals */\n      0x06\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19679:19703  _tokenApprovals[tokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19695:19702  tokenId */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19679:19703  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19638:19703  TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19853:19871  tokenApproval.slot */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19830:19871  approvedAddressSlot := tokenApproval.slot */\n      swap3\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19909:19928  approvedAddressSlot */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19903:19929  sload(approvedAddressSlot) */\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19884:19929  approvedAddress := sload(approvedAddressSlot) */\n      swap2\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19816:19939  {... */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19471:19945  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41401:41504  function _msgSenderERC721A() internal view virtual returns (address) {... */\n    tag_145:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41461:41468  address */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41487:41497  msg.sender */\n      caller\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41480:41497  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41401:41504  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18717:19363  function _isSenderApprovedOrOwner(... */\n    tag_146:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18862:18873  bool result */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19024:19040  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19017:19022  owner */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19013:19041  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19004:19041  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19182:19198  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19171:19180  msgSender */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19167:19199  and(msgSender, _BITMASK_ADDRESS) */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19154:19199  msgSender := and(msgSender, _BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19330:19345  approvedAddress */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19319:19328  msgSender */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19316:19346  eq(msgSender, approvedAddress) */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19308:19313  owner */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19297:19306  msgSender */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19294:19314  eq(msgSender, owner) */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19291:19347  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19281:19347  result := or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18717:19363  function _isSenderApprovedOrOwner(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25901:26055  function _beforeTokenTransfers(... */\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40728:41032  function _nextExtraData(... */\n    tag_157:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40859:40866  uint256 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40878:40894  uint24 extraData */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2513:2516  232 */\n      0xe8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40904:40923  prevOwnershipPacked */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40904:40945  prevOwnershipPacked >> _BITPOS_EXTRA_DATA */\n      swap1\n      shr\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40878:40946  uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2513:2516  232 */\n      0xe8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40971:41002  _extraData(from, to, extraData) */\n      tag_265\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40982:40986  from */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40988:40990  to */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40992:41001  extraData */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40971:40981  _extraData */\n      tag_266\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40971:41002  _extraData(from, to, extraData) */\n      jump\t// in\n    tag_265:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40963:41003  uint256(_extraData(from, to, extraData)) */\n      0xffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40963:41025  uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap1\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40956:41025  return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40728:41032  function _nextExtraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15361:15804  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n    tag_158:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15441:15455  uint256 result */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15606:15622  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15599:15604  owner */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15595:15623  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15586:15623  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15781:15786  flags */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15767:15778  timestamp() */\n      timestamp\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15742:15765  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15738:15779  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15735:15787  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15728:15733  owner */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15725:15788  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15715:15788  result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15361:15804  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26702:26855  function _afterTokenTransfers(... */\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_270\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_271\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_272\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_273:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28402:30653  function _mint(address to, uint256 quantity) internal virtual {... */\n    tag_171:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28474:28494  uint256 startTokenId */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28497:28510  _currentIndex */\n      dup1\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28474:28510  uint256 startTokenId = _currentIndex */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28536:28537  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28524:28532  quantity */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28524:28537  quantity == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28520:28573  if (quantity == 0) _revert(MintZeroQuantity.selector) */\n      iszero\n      tag_277\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28539:28573  _revert(MintZeroQuantity.selector) */\n      tag_278\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28547:28572  MintZeroQuantity.selector */\n      shl(0xe0, 0xb562e8dd)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28539:28546  _revert */\n      tag_129\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28539:28573  _revert(MintZeroQuantity.selector) */\n      jump\t// in\n    tag_278:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28520:28573  if (quantity == 0) _revert(MintZeroQuantity.selector) */\n    tag_277:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28584:28645  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_279\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28614:28615  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28618:28620  to */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28622:28634  startTokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28636:28644  quantity */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28584:28605  _beforeTokenTransfers */\n      tag_153\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28584:28645  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n      jump\t// in\n    tag_279:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29107:29243  _packOwnershipData(... */\n      tag_280\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29143:29145  to */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29196:29229  _nextExtraData(address(0), to, 0) */\n      tag_281\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29219:29220  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29223:29225  to */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29227:29228  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29196:29210  _nextExtraData */\n      tag_157\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29196:29229  _nextExtraData(address(0), to, 0) */\n      jump\t// in\n    tag_281:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29163:29193  _nextInitializedFlag(quantity) */\n      tag_282\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29184:29192  quantity */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29163:29183  _nextInitializedFlag */\n      tag_283\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29163:29193  _nextInitializedFlag(quantity) */\n      jump\t// in\n    tag_282:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29163:29229  _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0) */\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29107:29125  _packOwnershipData */\n      tag_158\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29107:29243  _packOwnershipData(... */\n      jump\t// in\n    tag_280:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29073:29090  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29073:29104  _packedOwnerships[startTokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29091:29103  startTokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29073:29104  _packedOwnerships[startTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29073:29243  _packedOwnerships[startTokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29523:29524  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":1495:1497  64 */\n      0x40\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29493:29494  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29493:29519  1 << _BITPOS_NUMBER_MINTED */\n      swap1\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29492:29524  (1 << _BITPOS_NUMBER_MINTED) | 1 */\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29480:29488  quantity */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29480:29525  quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      mul\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29454:29472  _packedAddressData */\n      0x05\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29454:29476  _packedAddressData[to] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29473:29475  to */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29454:29476  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29454:29525  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29633:29649  uint256 toMasked */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2785:2799  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29668:29670  to */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29652:29672  uint256(uint160(to)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29652:29691  uint256(uint160(to)) & _BITMASK_ADDRESS */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29633:29691  uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29722:29723  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29710:29718  toMasked */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29710:29723  toMasked == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29706:29760  if (toMasked == 0) _revert(MintToZeroAddress.selector) */\n      iszero\n      tag_284\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29725:29760  _revert(MintToZeroAddress.selector) */\n      tag_285\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29733:29759  MintToZeroAddress.selector */\n      shl(0xe0, 0x2e076300)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29725:29732  _revert */\n      tag_129\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29725:29760  _revert(MintToZeroAddress.selector) */\n      jump\t// in\n    tag_285:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29706:29760  if (toMasked == 0) _revert(MintToZeroAddress.selector) */\n    tag_284:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29775:29786  uint256 end */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29804:29812  quantity */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29789:29801  startTokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29789:29812  startTokenId + quantity */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29775:29812  uint256 end = startTokenId + quantity */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29826:29841  uint256 tokenId */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29844:29856  startTokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29826:29856  uint256 tokenId = startTokenId */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29871:30533  do {... */\n    tag_286:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30281:30288  tokenId */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30238:30246  toMasked */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30194:30195  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30129:30154  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30067:30068  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30003:30004  0 */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29973:30324  log4(... */\n      log4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30528:30531  end */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30515:30524  ++tokenId */\n      dup2\n      0x01\n      add\n      swap2\n      pop\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30515:30531  ++tokenId != end */\n      eq\n      iszero\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29871:30533  do {... */\n      tag_286\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30563:30566  end */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30547:30560  _currentIndex */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30547:30566  _currentIndex = end */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28828:30577  unchecked {... */\n      pop\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30586:30646  _afterTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_289\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30615:30616  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30619:30621  to */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30623:30635  startTokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30637:30645  quantity */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30586:30606  _afterTokenTransfers */\n      tag_165\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30586:30646  _afterTokenTransfers(address(0), to, startTokenId, quantity) */\n      jump\t// in\n    tag_289:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28464:30653  {... */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":28402:30653  function _mint(address to, uint256 quantity) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35737:35824  function _burn(uint256 tokenId) internal virtual {... */\n    tag_178:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35796:35817  _burn(tokenId, false) */\n      tag_291\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35802:35809  tokenId */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35811:35816  false */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35796:35801  _burn */\n      tag_292\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35796:35817  _burn(tokenId, false) */\n      jump\t// in\n    tag_291:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35737:35824  function _burn(uint256 tokenId) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x08\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27283:27956  function _checkContractOnERC721Received(... */\n    tag_204:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27441:27445  bool */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27486:27488  to */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27461:27506  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27507:27526  _msgSenderERC721A() */\n      tag_295\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27507:27524  _msgSenderERC721A */\n      tag_145\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27507:27526  _msgSenderERC721A() */\n      jump\t// in\n    tag_295:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27528:27532  from */\n      dup8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27534:27541  tokenId */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27543:27548  _data */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27461:27549  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_298\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_298:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_299\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_300\n      swap2\n      swap1\n      tag_301\n      jump\t// in\n    tag_300:\n      0x01\n    tag_299:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27457:27950  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_302\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_307\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_306)\n    tag_307:\n      0x60\n      swap2\n      pop\n    tag_306:\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27756:27757  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27739:27745  reason */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27739:27752  reason.length */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27739:27757  reason.length == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27735:27848  if (reason.length == 0) {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27777:27833  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_309\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27785:27832  TransferToNonERC721ReceiverImplementer.selector */\n      shl(0xe0, 0xd1a57ed6)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27777:27784  _revert */\n      tag_129\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27777:27833  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_309:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27735:27848  if (reason.length == 0) {... */\n    tag_308:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27918:27924  reason */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27912:27925  mload(reason) */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27903:27909  reason */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27899:27901  32 */\n      0x20\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27895:27910  add(32, reason) */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27888:27926  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27457:27950  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_302:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27627:27681  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27617:27681  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27617:27623  retval */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27617:27681  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27610:27681  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27283:27956  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/kiazen/ERC721A.sol\":373:510  function _baseURI() internal pure override returns (string memory) {... */\n    tag_212:\n        /* \"contracts/kiazen/ERC721A.sol\":425:438  string memory */\n      0x60\n        /* \"contracts/kiazen/ERC721A.sol\":451:502  return 'https://boredapeyachtclub.com/api/mutants/' */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_db1f2b0395f8af81a252e25f3b1514283a1767cf693ada85de200c6148eac63d\n      0x2a\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"contracts/kiazen/ERC721A.sol\":373:510  function _baseURI() internal pure override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41601:43309  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_216:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41666:41683  string memory str */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42094:42098  0xa0 */\n      0xa0\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42087:42091  0x40 */\n      0x40\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42081:42092  mload(0x40) */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42077:42099  add(mload(0x40), 0xa0) */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42184:42185  m */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42178:42182  0x40 */\n      0x40\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42171:42186  mstore(0x40, m) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42257:42261  0x20 */\n      0x20\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42254:42255  m */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42250:42262  sub(m, 0x20) */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42243:42262  str := sub(m, 0x20) */\n      swap2\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42337:42338  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42332:42335  str */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42325:42339  mstore(str, 0) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42438:42441  str */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42672:42677  value */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42654:43073  for { let temp := value } 1 {} {... */\n    tag_313:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42680:42681  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42654:43073  for { let temp := value } 1 {} {... */\n      iszero\n      tag_315\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42719:42720  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42714:42717  str */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42710:42721  sub(str, 1) */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42703:42721  str := sub(str, 1) */\n      swap4\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42887:42889  10 */\n      0x0a\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42881:42885  temp */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42877:42890  mod(temp, 10) */\n      mod\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42873:42875  48 */\n      0x30\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42869:42891  add(48, mod(temp, 10)) */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42864:42867  str */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42856:42892  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42979:42981  10 */\n      0x0a\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42973:42977  temp */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42969:42982  div(temp, 10) */\n      div\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42961:42982  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43044:43048  temp */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43034:43059  if iszero(temp) { break } */\n      tag_316\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43052:43057  break */\n      jump(tag_315)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43034:43059  if iszero(temp) { break } */\n    tag_316:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42654:43073  for { let temp := value } 1 {} {... */\n      jump(tag_313)\n    tag_315:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42658:42679  { let temp := value } */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43110:43113  str */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43105:43108  end */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43101:43114  sub(end, str) */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43223:43227  0x20 */\n      0x20\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43218:43221  str */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43214:43228  sub(str, 0x20) */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43207:43228  str := sub(str, 0x20) */\n      swap4\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43286:43292  length */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43281:43284  str */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43274:43293  mstore(str, length) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41704:43303  {... */\n      pop\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41601:43309  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40439:40582  function _extraData(... */\n    tag_266:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40572:40578  uint24 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40439:40582  function _extraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15901:16219  function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {... */\n    tag_283:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15971:15985  uint256 result */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16200:16201  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16190:16198  quantity */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16187:16202  eq(quantity, 1) */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16161:16185  _BITPOS_NEXT_INITIALIZED */\n      0xe1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16157:16203  shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16147:16203  result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15901:16219  function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36041:39065  function _burn(uint256 tokenId, bool approvalCheck) internal virtual {... */\n    tag_292:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36120:36147  uint256 prevOwnershipPacked */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36150:36177  _packedOwnershipOf(tokenId) */\n      tag_321\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36169:36176  tokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36150:36168  _packedOwnershipOf */\n      tag_138\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36150:36177  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_321:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36120:36177  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36188:36200  address from */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36219:36238  prevOwnershipPacked */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36188:36240  address from = address(uint160(prevOwnershipPacked)) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36252:36279  uint256 approvedAddressSlot */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36281:36304  address approvedAddress */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36308:36343  _getApprovedSlotAndAddress(tokenId) */\n      tag_322\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36335:36342  tokenId */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36308:36334  _getApprovedSlotAndAddress */\n      tag_142\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36308:36343  _getApprovedSlotAndAddress(tokenId) */\n      jump\t// in\n    tag_322:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36251:36343  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36358:36371  approvalCheck */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36354:36675  if (approvalCheck) {... */\n      iszero\n      tag_323\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36477:36545  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_324\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36502:36517  approvedAddress */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36519:36523  from */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36525:36544  _msgSenderERC721A() */\n      tag_325\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36525:36542  _msgSenderERC721A */\n      tag_145\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36525:36544  _msgSenderERC721A() */\n      jump\t// in\n    tag_325:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36477:36501  _isSenderApprovedOrOwner */\n      tag_146\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36477:36545  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_324:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36472:36664  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_326\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36568:36611  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_327\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36585:36589  from */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36591:36610  _msgSenderERC721A() */\n      tag_328\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36591:36608  _msgSenderERC721A */\n      tag_145\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36591:36610  _msgSenderERC721A() */\n      jump\t// in\n    tag_328:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36568:36584  isApprovedForAll */\n      tag_108\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36568:36611  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_327:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36563:36664  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_329\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36613:36664  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_330\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36621:36663  TransferCallerNotOwnerNorApproved.selector */\n      shl(0xe0, 0x59c896be)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36613:36620  _revert */\n      tag_129\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36613:36664  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_330:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36563:36664  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n    tag_329:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36472:36664  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_326:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36354:36675  if (approvalCheck) {... */\n    tag_323:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36685:36736  _beforeTokenTransfers(from, address(0), tokenId, 1) */\n      tag_331\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36707:36711  from */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36721:36722  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36725:36732  tokenId */\n      dup9\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36734:36735  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36685:36706  _beforeTokenTransfers */\n      tag_153\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36685:36736  _beforeTokenTransfers(from, address(0), tokenId, 1) */\n      jump\t// in\n    tag_331:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36825:36840  approvedAddress */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36822:36979  if approvedAddress {... */\n      iszero\n      tag_332\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36963:36964  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36942:36961  approvedAddressSlot */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36935:36965  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36822:36979  if approvedAddress {... */\n    tag_332:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37627:37628  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":1619:1622  128 */\n      0x80\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37597:37598  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37597:37623  1 << _BITPOS_NUMBER_BURNED */\n      swap1\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37596:37628  (1 << _BITPOS_NUMBER_BURNED) - 1 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37568:37586  _packedAddressData */\n      0x05\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37568:37592  _packedAddressData[from] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37587:37591  from */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37568:37592  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37568:37628  _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37888:38061  _packOwnershipData(... */\n      tag_333\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37924:37928  from */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37994:38047  _nextExtraData(from, address(0), prevOwnershipPacked) */\n      tag_334\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38009:38013  from */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38023:38024  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38027:38046  prevOwnershipPacked */\n      dup9\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37994:38008  _nextExtraData */\n      tag_157\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37994:38047  _nextExtraData(from, address(0), prevOwnershipPacked) */\n      jump\t// in\n    tag_334:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37947:37990  _BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED */\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37946:38047  (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked) */\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37888:37906  _packOwnershipData */\n      tag_158\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37888:38061  _packOwnershipData(... */\n      jump\t// in\n    tag_333:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37859:37876  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37859:37885  _packedOwnerships[tokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37877:37884  tokenId */\n      dup9\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37859:37885  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":37859:38061  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38229:38230  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38178:38197  prevOwnershipPacked */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38178:38225  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38178:38230  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38174:38791  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      iszero\n      tag_335\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38250:38269  uint256 nextTokenId */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38282:38283  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38272:38279  tokenId */\n      dup8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38272:38283  tokenId + 1 */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38250:38283  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38437:38438  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38403:38420  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38403:38433  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38421:38432  nextTokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38403:38433  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38403:38438  _packedOwnerships[nextTokenId] == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38399:38777  if (_packedOwnerships[nextTokenId] == 0) {... */\n      iszero\n      tag_336\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38539:38552  _currentIndex */\n      sload(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38524:38535  nextTokenId */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38524:38552  nextTokenId != _currentIndex */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38520:38759  if (nextTokenId != _currentIndex) {... */\n      tag_337\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38717:38736  prevOwnershipPacked */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38684:38701  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38684:38714  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38702:38713  nextTokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38684:38714  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38684:38736  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38520:38759  if (nextTokenId != _currentIndex) {... */\n    tag_337:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38399:38777  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_336:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38232:38791  {... */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38174:38791  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_335:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38843:38850  tokenId */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38839:38840  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38816:38851  Transfer(from, address(0), tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38825:38829  from */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38816:38851  Transfer(from, address(0), tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38861:38911  _afterTokenTransfers(from, address(0), tokenId, 1) */\n      tag_338\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38882:38886  from */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38896:38897  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38900:38907  tokenId */\n      dup9\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38909:38910  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38861:38881  _afterTokenTransfers */\n      tag_165\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":38861:38911  _afterTokenTransfers(from, address(0), tokenId, 1) */\n      jump\t// in\n    tag_338:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":39034:39046  _burnCounter */\n      0x01\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":39034:39048  _burnCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36110:39065  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36041:39065  function _burn(uint256 tokenId, bool approvalCheck) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_339:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_340:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_341:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_342:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_343:\n        /* \"#utility.yul\":561:584   */\n      tag_390\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_342\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_391\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_391:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_344:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_393\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_343\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_27:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_396\n      tag_340\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":833:952   */\n    tag_395:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_397\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_344\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_345:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_346:\n        /* \"#utility.yul\":1268:1289   */\n      tag_400\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_345\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_30:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_402\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_346\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_347:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_348:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2105   */\n    tag_349:\n        /* \"#utility.yul\":1866:1867   */\n      0x00\n        /* \"#utility.yul\":1876:1989   */\n    tag_406:\n        /* \"#utility.yul\":1890:1896   */\n      dup4\n        /* \"#utility.yul\":1887:1888   */\n      dup2\n        /* \"#utility.yul\":1884:1897   */\n      lt\n        /* \"#utility.yul\":1876:1989   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":1975:1976   */\n      dup1\n        /* \"#utility.yul\":1970:1973   */\n      dup3\n        /* \"#utility.yul\":1966:1977   */\n      add\n        /* \"#utility.yul\":1960:1978   */\n      mload\n        /* \"#utility.yul\":1956:1957   */\n      dup2\n        /* \"#utility.yul\":1951:1954   */\n      dup5\n        /* \"#utility.yul\":1947:1958   */\n      add\n        /* \"#utility.yul\":1940:1979   */\n      mstore\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1909:1910   */\n      dup2\n        /* \"#utility.yul\":1905:1915   */\n      add\n        /* \"#utility.yul\":1900:1915   */\n      swap1\n      pop\n        /* \"#utility.yul\":1876:1989   */\n      jump(tag_406)\n    tag_408:\n        /* \"#utility.yul\":2007:2013   */\n      dup4\n        /* \"#utility.yul\":2004:2005   */\n      dup2\n        /* \"#utility.yul\":2001:2014   */\n      gt\n        /* \"#utility.yul\":1998:2099   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2078:2084   */\n      dup5\n        /* \"#utility.yul\":2073:2076   */\n      dup5\n        /* \"#utility.yul\":2069:2085   */\n      add\n        /* \"#utility.yul\":2062:2089   */\n      mstore\n        /* \"#utility.yul\":1998:2099   */\n    tag_409:\n        /* \"#utility.yul\":1847:2105   */\n      pop\n        /* \"#utility.yul\":1798:2105   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2111:2213   */\n    tag_350:\n        /* \"#utility.yul\":2152:2158   */\n      0x00\n        /* \"#utility.yul\":2203:2205   */\n      0x1f\n        /* \"#utility.yul\":2199:2206   */\n      not\n        /* \"#utility.yul\":2194:2196   */\n      0x1f\n        /* \"#utility.yul\":2187:2192   */\n      dup4\n        /* \"#utility.yul\":2183:2197   */\n      add\n        /* \"#utility.yul\":2179:2207   */\n      and\n        /* \"#utility.yul\":2169:2207   */\n      swap1\n      pop\n        /* \"#utility.yul\":2111:2213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2583   */\n    tag_351:\n        /* \"#utility.yul\":2307:2310   */\n      0x00\n        /* \"#utility.yul\":2335:2374   */\n      tag_412\n        /* \"#utility.yul\":2368:2373   */\n      dup3\n        /* \"#utility.yul\":2335:2374   */\n      tag_347\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":2390:2461   */\n      tag_413\n        /* \"#utility.yul\":2454:2460   */\n      dup2\n        /* \"#utility.yul\":2449:2452   */\n      dup6\n        /* \"#utility.yul\":2390:2461   */\n      tag_348\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":2383:2461   */\n      swap4\n      pop\n        /* \"#utility.yul\":2470:2522   */\n      tag_414\n        /* \"#utility.yul\":2515:2521   */\n      dup2\n        /* \"#utility.yul\":2510:2513   */\n      dup6\n        /* \"#utility.yul\":2503:2507   */\n      0x20\n        /* \"#utility.yul\":2496:2501   */\n      dup7\n        /* \"#utility.yul\":2492:2508   */\n      add\n        /* \"#utility.yul\":2470:2522   */\n      tag_349\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":2547:2576   */\n      tag_415\n        /* \"#utility.yul\":2569:2575   */\n      dup2\n        /* \"#utility.yul\":2547:2576   */\n      tag_350\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":2542:2545   */\n      dup5\n        /* \"#utility.yul\":2538:2577   */\n      add\n        /* \"#utility.yul\":2531:2577   */\n      swap2\n      pop\n        /* \"#utility.yul\":2311:2583   */\n      pop\n        /* \"#utility.yul\":2219:2583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2589:2902   */\n    tag_35:\n        /* \"#utility.yul\":2702:2706   */\n      0x00\n        /* \"#utility.yul\":2740:2742   */\n      0x20\n        /* \"#utility.yul\":2729:2738   */\n      dup3\n        /* \"#utility.yul\":2725:2743   */\n      add\n        /* \"#utility.yul\":2717:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2789:2798   */\n      dup2\n        /* \"#utility.yul\":2783:2787   */\n      dup2\n        /* \"#utility.yul\":2779:2799   */\n      sub\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2753:2800   */\n      mstore\n        /* \"#utility.yul\":2817:2895   */\n      tag_417\n        /* \"#utility.yul\":2890:2894   */\n      dup2\n        /* \"#utility.yul\":2881:2887   */\n      dup5\n        /* \"#utility.yul\":2817:2895   */\n      tag_351\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":2809:2895   */\n      swap1\n      pop\n        /* \"#utility.yul\":2589:2902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2908:2985   */\n    tag_352:\n        /* \"#utility.yul\":2945:2952   */\n      0x00\n        /* \"#utility.yul\":2974:2979   */\n      dup2\n        /* \"#utility.yul\":2963:2979   */\n      swap1\n      pop\n        /* \"#utility.yul\":2908:2985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2991:3113   */\n    tag_353:\n        /* \"#utility.yul\":3064:3088   */\n      tag_420\n        /* \"#utility.yul\":3082:3087   */\n      dup2\n        /* \"#utility.yul\":3064:3088   */\n      tag_352\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":3057:3062   */\n      dup2\n        /* \"#utility.yul\":3054:3089   */\n      eq\n        /* \"#utility.yul\":3044:3107   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":3103:3104   */\n      0x00\n        /* \"#utility.yul\":3100:3101   */\n      dup1\n        /* \"#utility.yul\":3093:3105   */\n      revert\n        /* \"#utility.yul\":3044:3107   */\n    tag_421:\n        /* \"#utility.yul\":2991:3113   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3258   */\n    tag_354:\n        /* \"#utility.yul\":3165:3170   */\n      0x00\n        /* \"#utility.yul\":3203:3209   */\n      dup2\n        /* \"#utility.yul\":3190:3210   */\n      calldataload\n        /* \"#utility.yul\":3181:3210   */\n      swap1\n      pop\n        /* \"#utility.yul\":3219:3252   */\n      tag_423\n        /* \"#utility.yul\":3246:3251   */\n      dup2\n        /* \"#utility.yul\":3219:3252   */\n      tag_353\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":3119:3258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3593   */\n    tag_39:\n        /* \"#utility.yul\":3323:3329   */\n      0x00\n        /* \"#utility.yul\":3372:3374   */\n      0x20\n        /* \"#utility.yul\":3360:3369   */\n      dup3\n        /* \"#utility.yul\":3351:3358   */\n      dup5\n        /* \"#utility.yul\":3347:3370   */\n      sub\n        /* \"#utility.yul\":3343:3375   */\n      slt\n        /* \"#utility.yul\":3340:3459   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":3378:3457   */\n      tag_426\n      tag_340\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3340:3459   */\n    tag_425:\n        /* \"#utility.yul\":3498:3499   */\n      0x00\n        /* \"#utility.yul\":3523:3576   */\n      tag_427\n        /* \"#utility.yul\":3568:3575   */\n      dup5\n        /* \"#utility.yul\":3559:3565   */\n      dup3\n        /* \"#utility.yul\":3548:3557   */\n      dup6\n        /* \"#utility.yul\":3544:3566   */\n      add\n        /* \"#utility.yul\":3523:3576   */\n      tag_354\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3513:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3469:3586   */\n      pop\n        /* \"#utility.yul\":3264:3593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3599:3725   */\n    tag_355:\n        /* \"#utility.yul\":3636:3643   */\n      0x00\n        /* \"#utility.yul\":3676:3718   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3669:3674   */\n      dup3\n        /* \"#utility.yul\":3665:3719   */\n      and\n        /* \"#utility.yul\":3654:3719   */\n      swap1\n      pop\n        /* \"#utility.yul\":3599:3725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3731:3827   */\n    tag_356:\n        /* \"#utility.yul\":3768:3775   */\n      0x00\n        /* \"#utility.yul\":3797:3821   */\n      tag_430\n        /* \"#utility.yul\":3815:3820   */\n      dup3\n        /* \"#utility.yul\":3797:3821   */\n      tag_355\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":3786:3821   */\n      swap1\n      pop\n        /* \"#utility.yul\":3731:3827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3833:3951   */\n    tag_357:\n        /* \"#utility.yul\":3920:3944   */\n      tag_432\n        /* \"#utility.yul\":3938:3943   */\n      dup2\n        /* \"#utility.yul\":3920:3944   */\n      tag_356\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3915:3918   */\n      dup3\n        /* \"#utility.yul\":3908:3945   */\n      mstore\n        /* \"#utility.yul\":3833:3951   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3957:4179   */\n    tag_42:\n        /* \"#utility.yul\":4050:4054   */\n      0x00\n        /* \"#utility.yul\":4088:4090   */\n      0x20\n        /* \"#utility.yul\":4077:4086   */\n      dup3\n        /* \"#utility.yul\":4073:4091   */\n      add\n        /* \"#utility.yul\":4065:4091   */\n      swap1\n      pop\n        /* \"#utility.yul\":4101:4172   */\n      tag_434\n        /* \"#utility.yul\":4169:4170   */\n      0x00\n        /* \"#utility.yul\":4158:4167   */\n      dup4\n        /* \"#utility.yul\":4154:4171   */\n      add\n        /* \"#utility.yul\":4145:4151   */\n      dup5\n        /* \"#utility.yul\":4101:4172   */\n      tag_357\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":3957:4179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4185:4307   */\n    tag_358:\n        /* \"#utility.yul\":4258:4282   */\n      tag_436\n        /* \"#utility.yul\":4276:4281   */\n      dup2\n        /* \"#utility.yul\":4258:4282   */\n      tag_356\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":4251:4256   */\n      dup2\n        /* \"#utility.yul\":4248:4283   */\n      eq\n        /* \"#utility.yul\":4238:4301   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":4297:4298   */\n      0x00\n        /* \"#utility.yul\":4294:4295   */\n      dup1\n        /* \"#utility.yul\":4287:4299   */\n      revert\n        /* \"#utility.yul\":4238:4301   */\n    tag_437:\n        /* \"#utility.yul\":4185:4307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4313:4452   */\n    tag_359:\n        /* \"#utility.yul\":4359:4364   */\n      0x00\n        /* \"#utility.yul\":4397:4403   */\n      dup2\n        /* \"#utility.yul\":4384:4404   */\n      calldataload\n        /* \"#utility.yul\":4375:4404   */\n      swap1\n      pop\n        /* \"#utility.yul\":4413:4446   */\n      tag_439\n        /* \"#utility.yul\":4440:4445   */\n      dup2\n        /* \"#utility.yul\":4413:4446   */\n      tag_358\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4313:4452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4458:4932   */\n    tag_45:\n        /* \"#utility.yul\":4526:4532   */\n      0x00\n        /* \"#utility.yul\":4534:4540   */\n      dup1\n        /* \"#utility.yul\":4583:4585   */\n      0x40\n        /* \"#utility.yul\":4571:4580   */\n      dup4\n        /* \"#utility.yul\":4562:4569   */\n      dup6\n        /* \"#utility.yul\":4558:4581   */\n      sub\n        /* \"#utility.yul\":4554:4586   */\n      slt\n        /* \"#utility.yul\":4551:4670   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":4589:4668   */\n      tag_442\n      tag_340\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4551:4670   */\n    tag_441:\n        /* \"#utility.yul\":4709:4710   */\n      0x00\n        /* \"#utility.yul\":4734:4787   */\n      tag_443\n        /* \"#utility.yul\":4779:4786   */\n      dup6\n        /* \"#utility.yul\":4770:4776   */\n      dup3\n        /* \"#utility.yul\":4759:4768   */\n      dup7\n        /* \"#utility.yul\":4755:4777   */\n      add\n        /* \"#utility.yul\":4734:4787   */\n      tag_359\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":4724:4787   */\n      swap3\n      pop\n        /* \"#utility.yul\":4680:4797   */\n      pop\n        /* \"#utility.yul\":4836:4838   */\n      0x20\n        /* \"#utility.yul\":4862:4915   */\n      tag_444\n        /* \"#utility.yul\":4907:4914   */\n      dup6\n        /* \"#utility.yul\":4898:4904   */\n      dup3\n        /* \"#utility.yul\":4887:4896   */\n      dup7\n        /* \"#utility.yul\":4883:4905   */\n      add\n        /* \"#utility.yul\":4862:4915   */\n      tag_354\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":4852:4915   */\n      swap2\n      pop\n        /* \"#utility.yul\":4807:4925   */\n      pop\n        /* \"#utility.yul\":4458:4932   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4938:5056   */\n    tag_360:\n        /* \"#utility.yul\":5025:5049   */\n      tag_446\n        /* \"#utility.yul\":5043:5048   */\n      dup2\n        /* \"#utility.yul\":5025:5049   */\n      tag_352\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":5020:5023   */\n      dup3\n        /* \"#utility.yul\":5013:5050   */\n      mstore\n        /* \"#utility.yul\":4938:5056   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5062:5284   */\n    tag_51:\n        /* \"#utility.yul\":5155:5159   */\n      0x00\n        /* \"#utility.yul\":5193:5195   */\n      0x20\n        /* \"#utility.yul\":5182:5191   */\n      dup3\n        /* \"#utility.yul\":5178:5196   */\n      add\n        /* \"#utility.yul\":5170:5196   */\n      swap1\n      pop\n        /* \"#utility.yul\":5206:5277   */\n      tag_448\n        /* \"#utility.yul\":5274:5275   */\n      0x00\n        /* \"#utility.yul\":5263:5272   */\n      dup4\n        /* \"#utility.yul\":5259:5276   */\n      add\n        /* \"#utility.yul\":5250:5256   */\n      dup5\n        /* \"#utility.yul\":5206:5277   */\n      tag_360\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5062:5284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5290:5909   */\n    tag_54:\n        /* \"#utility.yul\":5367:5373   */\n      0x00\n        /* \"#utility.yul\":5375:5381   */\n      dup1\n        /* \"#utility.yul\":5383:5389   */\n      0x00\n        /* \"#utility.yul\":5432:5434   */\n      0x60\n        /* \"#utility.yul\":5420:5429   */\n      dup5\n        /* \"#utility.yul\":5411:5418   */\n      dup7\n        /* \"#utility.yul\":5407:5430   */\n      sub\n        /* \"#utility.yul\":5403:5435   */\n      slt\n        /* \"#utility.yul\":5400:5519   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":5438:5517   */\n      tag_451\n      tag_340\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":5400:5519   */\n    tag_450:\n        /* \"#utility.yul\":5558:5559   */\n      0x00\n        /* \"#utility.yul\":5583:5636   */\n      tag_452\n        /* \"#utility.yul\":5628:5635   */\n      dup7\n        /* \"#utility.yul\":5619:5625   */\n      dup3\n        /* \"#utility.yul\":5608:5617   */\n      dup8\n        /* \"#utility.yul\":5604:5626   */\n      add\n        /* \"#utility.yul\":5583:5636   */\n      tag_359\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":5573:5636   */\n      swap4\n      pop\n        /* \"#utility.yul\":5529:5646   */\n      pop\n        /* \"#utility.yul\":5685:5687   */\n      0x20\n        /* \"#utility.yul\":5711:5764   */\n      tag_453\n        /* \"#utility.yul\":5756:5763   */\n      dup7\n        /* \"#utility.yul\":5747:5753   */\n      dup3\n        /* \"#utility.yul\":5736:5745   */\n      dup8\n        /* \"#utility.yul\":5732:5754   */\n      add\n        /* \"#utility.yul\":5711:5764   */\n      tag_359\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":5701:5764   */\n      swap3\n      pop\n        /* \"#utility.yul\":5656:5774   */\n      pop\n        /* \"#utility.yul\":5813:5815   */\n      0x40\n        /* \"#utility.yul\":5839:5892   */\n      tag_454\n        /* \"#utility.yul\":5884:5891   */\n      dup7\n        /* \"#utility.yul\":5875:5881   */\n      dup3\n        /* \"#utility.yul\":5864:5873   */\n      dup8\n        /* \"#utility.yul\":5860:5882   */\n      add\n        /* \"#utility.yul\":5839:5892   */\n      tag_354\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":5829:5892   */\n      swap2\n      pop\n        /* \"#utility.yul\":5784:5902   */\n      pop\n        /* \"#utility.yul\":5290:5909   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5915:6244   */\n    tag_76:\n        /* \"#utility.yul\":5974:5980   */\n      0x00\n        /* \"#utility.yul\":6023:6025   */\n      0x20\n        /* \"#utility.yul\":6011:6020   */\n      dup3\n        /* \"#utility.yul\":6002:6009   */\n      dup5\n        /* \"#utility.yul\":5998:6021   */\n      sub\n        /* \"#utility.yul\":5994:6026   */\n      slt\n        /* \"#utility.yul\":5991:6110   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":6029:6108   */\n      tag_457\n      tag_340\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":5991:6110   */\n    tag_456:\n        /* \"#utility.yul\":6149:6150   */\n      0x00\n        /* \"#utility.yul\":6174:6227   */\n      tag_458\n        /* \"#utility.yul\":6219:6226   */\n      dup5\n        /* \"#utility.yul\":6210:6216   */\n      dup3\n        /* \"#utility.yul\":6199:6208   */\n      dup6\n        /* \"#utility.yul\":6195:6217   */\n      add\n        /* \"#utility.yul\":6174:6227   */\n      tag_359\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":6164:6227   */\n      swap2\n      pop\n        /* \"#utility.yul\":6120:6237   */\n      pop\n        /* \"#utility.yul\":5915:6244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6250:6366   */\n    tag_361:\n        /* \"#utility.yul\":6320:6341   */\n      tag_460\n        /* \"#utility.yul\":6335:6340   */\n      dup2\n        /* \"#utility.yul\":6320:6341   */\n      tag_345\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":6313:6318   */\n      dup2\n        /* \"#utility.yul\":6310:6342   */\n      eq\n        /* \"#utility.yul\":6300:6360   */\n      tag_461\n      jumpi\n        /* \"#utility.yul\":6356:6357   */\n      0x00\n        /* \"#utility.yul\":6353:6354   */\n      dup1\n        /* \"#utility.yul\":6346:6358   */\n      revert\n        /* \"#utility.yul\":6300:6360   */\n    tag_461:\n        /* \"#utility.yul\":6250:6366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6372:6505   */\n    tag_362:\n        /* \"#utility.yul\":6415:6420   */\n      0x00\n        /* \"#utility.yul\":6453:6459   */\n      dup2\n        /* \"#utility.yul\":6440:6460   */\n      calldataload\n        /* \"#utility.yul\":6431:6460   */\n      swap1\n      pop\n        /* \"#utility.yul\":6469:6499   */\n      tag_463\n        /* \"#utility.yul\":6493:6498   */\n      dup2\n        /* \"#utility.yul\":6469:6499   */\n      tag_361\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":6372:6505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6511:6979   */\n    tag_93:\n        /* \"#utility.yul\":6576:6582   */\n      0x00\n        /* \"#utility.yul\":6584:6590   */\n      dup1\n        /* \"#utility.yul\":6633:6635   */\n      0x40\n        /* \"#utility.yul\":6621:6630   */\n      dup4\n        /* \"#utility.yul\":6612:6619   */\n      dup6\n        /* \"#utility.yul\":6608:6631   */\n      sub\n        /* \"#utility.yul\":6604:6636   */\n      slt\n        /* \"#utility.yul\":6601:6720   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":6639:6718   */\n      tag_466\n      tag_340\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":6601:6720   */\n    tag_465:\n        /* \"#utility.yul\":6759:6760   */\n      0x00\n        /* \"#utility.yul\":6784:6837   */\n      tag_467\n        /* \"#utility.yul\":6829:6836   */\n      dup6\n        /* \"#utility.yul\":6820:6826   */\n      dup3\n        /* \"#utility.yul\":6809:6818   */\n      dup7\n        /* \"#utility.yul\":6805:6827   */\n      add\n        /* \"#utility.yul\":6784:6837   */\n      tag_359\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":6774:6837   */\n      swap3\n      pop\n        /* \"#utility.yul\":6730:6847   */\n      pop\n        /* \"#utility.yul\":6886:6888   */\n      0x20\n        /* \"#utility.yul\":6912:6962   */\n      tag_468\n        /* \"#utility.yul\":6954:6961   */\n      dup6\n        /* \"#utility.yul\":6945:6951   */\n      dup3\n        /* \"#utility.yul\":6934:6943   */\n      dup7\n        /* \"#utility.yul\":6930:6952   */\n      add\n        /* \"#utility.yul\":6912:6962   */\n      tag_362\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":6902:6962   */\n      swap2\n      pop\n        /* \"#utility.yul\":6857:6972   */\n      pop\n        /* \"#utility.yul\":6511:6979   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6985:7102   */\n    tag_363:\n        /* \"#utility.yul\":7094:7095   */\n      0x00\n        /* \"#utility.yul\":7091:7092   */\n      dup1\n        /* \"#utility.yul\":7084:7096   */\n      revert\n        /* \"#utility.yul\":7108:7225   */\n    tag_364:\n        /* \"#utility.yul\":7217:7218   */\n      0x00\n        /* \"#utility.yul\":7214:7215   */\n      dup1\n        /* \"#utility.yul\":7207:7219   */\n      revert\n        /* \"#utility.yul\":7231:7411   */\n    tag_365:\n        /* \"#utility.yul\":7279:7356   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7269:7357   */\n      mstore\n        /* \"#utility.yul\":7376:7380   */\n      0x41\n        /* \"#utility.yul\":7373:7374   */\n      0x04\n        /* \"#utility.yul\":7366:7381   */\n      mstore\n        /* \"#utility.yul\":7400:7404   */\n      0x24\n        /* \"#utility.yul\":7397:7398   */\n      0x00\n        /* \"#utility.yul\":7390:7405   */\n      revert\n        /* \"#utility.yul\":7417:7698   */\n    tag_366:\n        /* \"#utility.yul\":7500:7527   */\n      tag_473\n        /* \"#utility.yul\":7522:7526   */\n      dup3\n        /* \"#utility.yul\":7500:7527   */\n      tag_350\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":7492:7498   */\n      dup2\n        /* \"#utility.yul\":7488:7528   */\n      add\n        /* \"#utility.yul\":7630:7636   */\n      dup2\n        /* \"#utility.yul\":7618:7628   */\n      dup2\n        /* \"#utility.yul\":7615:7637   */\n      lt\n        /* \"#utility.yul\":7594:7612   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7582:7592   */\n      dup3\n        /* \"#utility.yul\":7579:7613   */\n      gt\n        /* \"#utility.yul\":7576:7638   */\n      or\n        /* \"#utility.yul\":7573:7661   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":7641:7659   */\n      tag_475\n      tag_365\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7573:7661   */\n    tag_474:\n        /* \"#utility.yul\":7681:7691   */\n      dup1\n        /* \"#utility.yul\":7677:7679   */\n      0x40\n        /* \"#utility.yul\":7670:7692   */\n      mstore\n        /* \"#utility.yul\":7460:7698   */\n      pop\n        /* \"#utility.yul\":7417:7698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7704:7833   */\n    tag_367:\n        /* \"#utility.yul\":7738:7744   */\n      0x00\n        /* \"#utility.yul\":7765:7785   */\n      tag_477\n      tag_339\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":7755:7785   */\n      swap1\n      pop\n        /* \"#utility.yul\":7794:7827   */\n      tag_478\n        /* \"#utility.yul\":7822:7826   */\n      dup3\n        /* \"#utility.yul\":7814:7820   */\n      dup3\n        /* \"#utility.yul\":7794:7827   */\n      tag_366\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7704:7833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7839:8146   */\n    tag_368:\n        /* \"#utility.yul\":7900:7904   */\n      0x00\n        /* \"#utility.yul\":7990:8008   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7982:7988   */\n      dup3\n        /* \"#utility.yul\":7979:8009   */\n      gt\n        /* \"#utility.yul\":7976:8032   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":8012:8030   */\n      tag_481\n      tag_365\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":7976:8032   */\n    tag_480:\n        /* \"#utility.yul\":8050:8079   */\n      tag_482\n        /* \"#utility.yul\":8072:8078   */\n      dup3\n        /* \"#utility.yul\":8050:8079   */\n      tag_350\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":8042:8079   */\n      swap1\n      pop\n        /* \"#utility.yul\":8134:8138   */\n      0x20\n        /* \"#utility.yul\":8128:8132   */\n      dup2\n        /* \"#utility.yul\":8124:8139   */\n      add\n        /* \"#utility.yul\":8116:8139   */\n      swap1\n      pop\n        /* \"#utility.yul\":7839:8146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8152:8306   */\n    tag_369:\n        /* \"#utility.yul\":8236:8242   */\n      dup3\n        /* \"#utility.yul\":8231:8234   */\n      dup2\n        /* \"#utility.yul\":8226:8229   */\n      dup4\n        /* \"#utility.yul\":8213:8243   */\n      calldatacopy\n        /* \"#utility.yul\":8298:8299   */\n      0x00\n        /* \"#utility.yul\":8289:8295   */\n      dup4\n        /* \"#utility.yul\":8284:8287   */\n      dup4\n        /* \"#utility.yul\":8280:8296   */\n      add\n        /* \"#utility.yul\":8273:8300   */\n      mstore\n        /* \"#utility.yul\":8152:8306   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8312:8722   */\n    tag_370:\n        /* \"#utility.yul\":8389:8394   */\n      0x00\n        /* \"#utility.yul\":8414:8479   */\n      tag_485\n        /* \"#utility.yul\":8430:8478   */\n      tag_486\n        /* \"#utility.yul\":8471:8477   */\n      dup5\n        /* \"#utility.yul\":8430:8478   */\n      tag_368\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":8414:8479   */\n      tag_367\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":8405:8479   */\n      swap1\n      pop\n        /* \"#utility.yul\":8502:8508   */\n      dup3\n        /* \"#utility.yul\":8495:8500   */\n      dup2\n        /* \"#utility.yul\":8488:8509   */\n      mstore\n        /* \"#utility.yul\":8540:8544   */\n      0x20\n        /* \"#utility.yul\":8533:8538   */\n      dup2\n        /* \"#utility.yul\":8529:8545   */\n      add\n        /* \"#utility.yul\":8578:8581   */\n      dup5\n        /* \"#utility.yul\":8569:8575   */\n      dup5\n        /* \"#utility.yul\":8564:8567   */\n      dup5\n        /* \"#utility.yul\":8560:8576   */\n      add\n        /* \"#utility.yul\":8557:8582   */\n      gt\n        /* \"#utility.yul\":8554:8666   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":8585:8664   */\n      tag_488\n      tag_364\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":8554:8666   */\n    tag_487:\n        /* \"#utility.yul\":8675:8716   */\n      tag_489\n        /* \"#utility.yul\":8709:8715   */\n      dup5\n        /* \"#utility.yul\":8704:8707   */\n      dup3\n        /* \"#utility.yul\":8699:8702   */\n      dup6\n        /* \"#utility.yul\":8675:8716   */\n      tag_369\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":8395:8722   */\n      pop\n        /* \"#utility.yul\":8312:8722   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8741:9079   */\n    tag_371:\n        /* \"#utility.yul\":8796:8801   */\n      0x00\n        /* \"#utility.yul\":8845:8848   */\n      dup3\n        /* \"#utility.yul\":8838:8842   */\n      0x1f\n        /* \"#utility.yul\":8830:8836   */\n      dup4\n        /* \"#utility.yul\":8826:8843   */\n      add\n        /* \"#utility.yul\":8822:8849   */\n      slt\n        /* \"#utility.yul\":8812:8934   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":8853:8932   */\n      tag_492\n      tag_363\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":8812:8934   */\n    tag_491:\n        /* \"#utility.yul\":8970:8976   */\n      dup2\n        /* \"#utility.yul\":8957:8977   */\n      calldataload\n        /* \"#utility.yul\":8995:9073   */\n      tag_493\n        /* \"#utility.yul\":9069:9072   */\n      dup5\n        /* \"#utility.yul\":9061:9067   */\n      dup3\n        /* \"#utility.yul\":9054:9058   */\n      0x20\n        /* \"#utility.yul\":9046:9052   */\n      dup7\n        /* \"#utility.yul\":9042:9059   */\n      add\n        /* \"#utility.yul\":8995:9073   */\n      tag_370\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":8986:9073   */\n      swap2\n      pop\n        /* \"#utility.yul\":8802:9079   */\n      pop\n        /* \"#utility.yul\":8741:9079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9085:10028   */\n    tag_97:\n        /* \"#utility.yul\":9180:9186   */\n      0x00\n        /* \"#utility.yul\":9188:9194   */\n      dup1\n        /* \"#utility.yul\":9196:9202   */\n      0x00\n        /* \"#utility.yul\":9204:9210   */\n      dup1\n        /* \"#utility.yul\":9253:9256   */\n      0x80\n        /* \"#utility.yul\":9241:9250   */\n      dup6\n        /* \"#utility.yul\":9232:9239   */\n      dup8\n        /* \"#utility.yul\":9228:9251   */\n      sub\n        /* \"#utility.yul\":9224:9257   */\n      slt\n        /* \"#utility.yul\":9221:9341   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":9260:9339   */\n      tag_496\n      tag_340\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":9221:9341   */\n    tag_495:\n        /* \"#utility.yul\":9380:9381   */\n      0x00\n        /* \"#utility.yul\":9405:9458   */\n      tag_497\n        /* \"#utility.yul\":9450:9457   */\n      dup8\n        /* \"#utility.yul\":9441:9447   */\n      dup3\n        /* \"#utility.yul\":9430:9439   */\n      dup9\n        /* \"#utility.yul\":9426:9448   */\n      add\n        /* \"#utility.yul\":9405:9458   */\n      tag_359\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":9395:9458   */\n      swap5\n      pop\n        /* \"#utility.yul\":9351:9468   */\n      pop\n        /* \"#utility.yul\":9507:9509   */\n      0x20\n        /* \"#utility.yul\":9533:9586   */\n      tag_498\n        /* \"#utility.yul\":9578:9585   */\n      dup8\n        /* \"#utility.yul\":9569:9575   */\n      dup3\n        /* \"#utility.yul\":9558:9567   */\n      dup9\n        /* \"#utility.yul\":9554:9576   */\n      add\n        /* \"#utility.yul\":9533:9586   */\n      tag_359\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9523:9586   */\n      swap4\n      pop\n        /* \"#utility.yul\":9478:9596   */\n      pop\n        /* \"#utility.yul\":9635:9637   */\n      0x40\n        /* \"#utility.yul\":9661:9714   */\n      tag_499\n        /* \"#utility.yul\":9706:9713   */\n      dup8\n        /* \"#utility.yul\":9697:9703   */\n      dup3\n        /* \"#utility.yul\":9686:9695   */\n      dup9\n        /* \"#utility.yul\":9682:9704   */\n      add\n        /* \"#utility.yul\":9661:9714   */\n      tag_354\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":9651:9714   */\n      swap3\n      pop\n        /* \"#utility.yul\":9606:9724   */\n      pop\n        /* \"#utility.yul\":9791:9793   */\n      0x60\n        /* \"#utility.yul\":9780:9789   */\n      dup6\n        /* \"#utility.yul\":9776:9794   */\n      add\n        /* \"#utility.yul\":9763:9795   */\n      calldataload\n        /* \"#utility.yul\":9822:9840   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9814:9820   */\n      dup2\n        /* \"#utility.yul\":9811:9841   */\n      gt\n        /* \"#utility.yul\":9808:9925   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":9844:9923   */\n      tag_501\n      tag_341\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":9808:9925   */\n    tag_500:\n        /* \"#utility.yul\":9949:10011   */\n      tag_502\n        /* \"#utility.yul\":10003:10010   */\n      dup8\n        /* \"#utility.yul\":9994:10000   */\n      dup3\n        /* \"#utility.yul\":9983:9992   */\n      dup9\n        /* \"#utility.yul\":9979:10001   */\n      add\n        /* \"#utility.yul\":9949:10011   */\n      tag_371\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":9939:10011   */\n      swap2\n      pop\n        /* \"#utility.yul\":9734:10021   */\n      pop\n        /* \"#utility.yul\":9085:10028   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10034:10508   */\n    tag_107:\n        /* \"#utility.yul\":10102:10108   */\n      0x00\n        /* \"#utility.yul\":10110:10116   */\n      dup1\n        /* \"#utility.yul\":10159:10161   */\n      0x40\n        /* \"#utility.yul\":10147:10156   */\n      dup4\n        /* \"#utility.yul\":10138:10145   */\n      dup6\n        /* \"#utility.yul\":10134:10157   */\n      sub\n        /* \"#utility.yul\":10130:10162   */\n      slt\n        /* \"#utility.yul\":10127:10246   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":10165:10244   */\n      tag_505\n      tag_340\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":10127:10246   */\n    tag_504:\n        /* \"#utility.yul\":10285:10286   */\n      0x00\n        /* \"#utility.yul\":10310:10363   */\n      tag_506\n        /* \"#utility.yul\":10355:10362   */\n      dup6\n        /* \"#utility.yul\":10346:10352   */\n      dup3\n        /* \"#utility.yul\":10335:10344   */\n      dup7\n        /* \"#utility.yul\":10331:10353   */\n      add\n        /* \"#utility.yul\":10310:10363   */\n      tag_359\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":10300:10363   */\n      swap3\n      pop\n        /* \"#utility.yul\":10256:10373   */\n      pop\n        /* \"#utility.yul\":10412:10414   */\n      0x20\n        /* \"#utility.yul\":10438:10491   */\n      tag_507\n        /* \"#utility.yul\":10483:10490   */\n      dup6\n        /* \"#utility.yul\":10474:10480   */\n      dup3\n        /* \"#utility.yul\":10463:10472   */\n      dup7\n        /* \"#utility.yul\":10459:10481   */\n      add\n        /* \"#utility.yul\":10438:10491   */\n      tag_359\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":10428:10491   */\n      swap2\n      pop\n        /* \"#utility.yul\":10383:10501   */\n      pop\n        /* \"#utility.yul\":10034:10508   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10514:10694   */\n    tag_372:\n        /* \"#utility.yul\":10562:10639   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10559:10560   */\n      0x00\n        /* \"#utility.yul\":10552:10640   */\n      mstore\n        /* \"#utility.yul\":10659:10663   */\n      0x22\n        /* \"#utility.yul\":10656:10657   */\n      0x04\n        /* \"#utility.yul\":10649:10664   */\n      mstore\n        /* \"#utility.yul\":10683:10687   */\n      0x24\n        /* \"#utility.yul\":10680:10681   */\n      0x00\n        /* \"#utility.yul\":10673:10688   */\n      revert\n        /* \"#utility.yul\":10700:11020   */\n    tag_119:\n        /* \"#utility.yul\":10744:10750   */\n      0x00\n        /* \"#utility.yul\":10781:10782   */\n      0x02\n        /* \"#utility.yul\":10775:10779   */\n      dup3\n        /* \"#utility.yul\":10771:10783   */\n      div\n        /* \"#utility.yul\":10761:10783   */\n      swap1\n      pop\n        /* \"#utility.yul\":10828:10829   */\n      0x01\n        /* \"#utility.yul\":10822:10826   */\n      dup3\n        /* \"#utility.yul\":10818:10830   */\n      and\n        /* \"#utility.yul\":10849:10867   */\n      dup1\n        /* \"#utility.yul\":10839:10920   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":10905:10909   */\n      0x7f\n        /* \"#utility.yul\":10897:10903   */\n      dup3\n        /* \"#utility.yul\":10893:10910   */\n      and\n        /* \"#utility.yul\":10883:10910   */\n      swap2\n      pop\n        /* \"#utility.yul\":10839:10920   */\n    tag_510:\n        /* \"#utility.yul\":10967:10969   */\n      0x20\n        /* \"#utility.yul\":10959:10965   */\n      dup3\n        /* \"#utility.yul\":10956:10970   */\n      lt\n        /* \"#utility.yul\":10936:10954   */\n      dup2\n        /* \"#utility.yul\":10933:10971   */\n      eq\n        /* \"#utility.yul\":10930:11014   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":10986:11004   */\n      tag_512\n      tag_372\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10930:11014   */\n    tag_511:\n        /* \"#utility.yul\":10751:11020   */\n      pop\n        /* \"#utility.yul\":10700:11020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11026:11174   */\n    tag_373:\n        /* \"#utility.yul\":11128:11139   */\n      0x00\n        /* \"#utility.yul\":11165:11168   */\n      dup2\n        /* \"#utility.yul\":11150:11168   */\n      swap1\n      pop\n        /* \"#utility.yul\":11026:11174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11180:11557   */\n    tag_374:\n        /* \"#utility.yul\":11286:11289   */\n      0x00\n        /* \"#utility.yul\":11314:11353   */\n      tag_515\n        /* \"#utility.yul\":11347:11352   */\n      dup3\n        /* \"#utility.yul\":11314:11353   */\n      tag_347\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":11369:11458   */\n      tag_516\n        /* \"#utility.yul\":11451:11457   */\n      dup2\n        /* \"#utility.yul\":11446:11449   */\n      dup6\n        /* \"#utility.yul\":11369:11458   */\n      tag_373\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":11362:11458   */\n      swap4\n      pop\n        /* \"#utility.yul\":11467:11519   */\n      tag_517\n        /* \"#utility.yul\":11512:11518   */\n      dup2\n        /* \"#utility.yul\":11507:11510   */\n      dup6\n        /* \"#utility.yul\":11500:11504   */\n      0x20\n        /* \"#utility.yul\":11493:11498   */\n      dup7\n        /* \"#utility.yul\":11489:11505   */\n      add\n        /* \"#utility.yul\":11467:11519   */\n      tag_349\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":11544:11550   */\n      dup1\n        /* \"#utility.yul\":11539:11542   */\n      dup5\n        /* \"#utility.yul\":11535:11551   */\n      add\n        /* \"#utility.yul\":11528:11551   */\n      swap2\n      pop\n        /* \"#utility.yul\":11290:11557   */\n      pop\n        /* \"#utility.yul\":11180:11557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11563:11998   */\n    tag_218:\n        /* \"#utility.yul\":11743:11746   */\n      0x00\n        /* \"#utility.yul\":11765:11860   */\n      tag_519\n        /* \"#utility.yul\":11856:11859   */\n      dup3\n        /* \"#utility.yul\":11847:11853   */\n      dup6\n        /* \"#utility.yul\":11765:11860   */\n      tag_374\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":11758:11860   */\n      swap2\n      pop\n        /* \"#utility.yul\":11877:11972   */\n      tag_520\n        /* \"#utility.yul\":11968:11971   */\n      dup3\n        /* \"#utility.yul\":11959:11965   */\n      dup5\n        /* \"#utility.yul\":11877:11972   */\n      tag_374\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":11870:11972   */\n      swap2\n      pop\n        /* \"#utility.yul\":11989:11992   */\n      dup2\n        /* \"#utility.yul\":11982:11992   */\n      swap1\n      pop\n        /* \"#utility.yul\":11563:11998   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12004:12229   */\n    tag_375:\n        /* \"#utility.yul\":12144:12178   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12140:12141   */\n      0x00\n        /* \"#utility.yul\":12132:12138   */\n      dup3\n        /* \"#utility.yul\":12128:12142   */\n      add\n        /* \"#utility.yul\":12121:12179   */\n      mstore\n        /* \"#utility.yul\":12213:12221   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12208:12210   */\n      0x20\n        /* \"#utility.yul\":12200:12206   */\n      dup3\n        /* \"#utility.yul\":12196:12211   */\n      add\n        /* \"#utility.yul\":12189:12222   */\n      mstore\n        /* \"#utility.yul\":12004:12229   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12235:12601   */\n    tag_376:\n        /* \"#utility.yul\":12377:12380   */\n      0x00\n        /* \"#utility.yul\":12398:12465   */\n      tag_523\n        /* \"#utility.yul\":12462:12464   */\n      0x26\n        /* \"#utility.yul\":12457:12460   */\n      dup4\n        /* \"#utility.yul\":12398:12465   */\n      tag_348\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":12391:12465   */\n      swap2\n      pop\n        /* \"#utility.yul\":12474:12567   */\n      tag_524\n        /* \"#utility.yul\":12563:12566   */\n      dup3\n        /* \"#utility.yul\":12474:12567   */\n      tag_375\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":12592:12594   */\n      0x40\n        /* \"#utility.yul\":12587:12590   */\n      dup3\n        /* \"#utility.yul\":12583:12595   */\n      add\n        /* \"#utility.yul\":12576:12595   */\n      swap1\n      pop\n        /* \"#utility.yul\":12235:12601   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12607:13026   */\n    tag_225:\n        /* \"#utility.yul\":12773:12777   */\n      0x00\n        /* \"#utility.yul\":12811:12813   */\n      0x20\n        /* \"#utility.yul\":12800:12809   */\n      dup3\n        /* \"#utility.yul\":12796:12814   */\n      add\n        /* \"#utility.yul\":12788:12814   */\n      swap1\n      pop\n        /* \"#utility.yul\":12860:12869   */\n      dup2\n        /* \"#utility.yul\":12854:12858   */\n      dup2\n        /* \"#utility.yul\":12850:12870   */\n      sub\n        /* \"#utility.yul\":12846:12847   */\n      0x00\n        /* \"#utility.yul\":12835:12844   */\n      dup4\n        /* \"#utility.yul\":12831:12848   */\n      add\n        /* \"#utility.yul\":12824:12871   */\n      mstore\n        /* \"#utility.yul\":12888:13019   */\n      tag_526\n        /* \"#utility.yul\":13014:13018   */\n      dup2\n        /* \"#utility.yul\":12888:13019   */\n      tag_376\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":12880:13019   */\n      swap1\n      pop\n        /* \"#utility.yul\":12607:13026   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13032:13212   */\n    tag_377:\n        /* \"#utility.yul\":13080:13157   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13077:13078   */\n      0x00\n        /* \"#utility.yul\":13070:13158   */\n      mstore\n        /* \"#utility.yul\":13177:13181   */\n      0x11\n        /* \"#utility.yul\":13174:13175   */\n      0x04\n        /* \"#utility.yul\":13167:13182   */\n      mstore\n        /* \"#utility.yul\":13201:13205   */\n      0x24\n        /* \"#utility.yul\":13198:13199   */\n      0x00\n        /* \"#utility.yul\":13191:13206   */\n      revert\n        /* \"#utility.yul\":13218:13389   */\n    tag_234:\n        /* \"#utility.yul\":13257:13260   */\n      0x00\n        /* \"#utility.yul\":13280:13304   */\n      tag_529\n        /* \"#utility.yul\":13298:13303   */\n      dup3\n        /* \"#utility.yul\":13280:13304   */\n      tag_352\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":13271:13304   */\n      swap2\n      pop\n        /* \"#utility.yul\":13326:13330   */\n      0x00\n        /* \"#utility.yul\":13319:13324   */\n      dup3\n        /* \"#utility.yul\":13316:13331   */\n      eq\n        /* \"#utility.yul\":13313:13354   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":13334:13352   */\n      tag_531\n      tag_377\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":13313:13354   */\n    tag_530:\n        /* \"#utility.yul\":13381:13382   */\n      0x01\n        /* \"#utility.yul\":13374:13379   */\n      dup3\n        /* \"#utility.yul\":13370:13383   */\n      sub\n        /* \"#utility.yul\":13363:13383   */\n      swap1\n      pop\n        /* \"#utility.yul\":13218:13389   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13395:13577   */\n    tag_378:\n        /* \"#utility.yul\":13535:13569   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13531:13532   */\n      0x00\n        /* \"#utility.yul\":13523:13529   */\n      dup3\n        /* \"#utility.yul\":13519:13533   */\n      add\n        /* \"#utility.yul\":13512:13570   */\n      mstore\n        /* \"#utility.yul\":13395:13577   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13583:13949   */\n    tag_379:\n        /* \"#utility.yul\":13725:13728   */\n      0x00\n        /* \"#utility.yul\":13746:13813   */\n      tag_534\n        /* \"#utility.yul\":13810:13812   */\n      0x20\n        /* \"#utility.yul\":13805:13808   */\n      dup4\n        /* \"#utility.yul\":13746:13813   */\n      tag_348\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":13739:13813   */\n      swap2\n      pop\n        /* \"#utility.yul\":13822:13915   */\n      tag_535\n        /* \"#utility.yul\":13911:13914   */\n      dup3\n        /* \"#utility.yul\":13822:13915   */\n      tag_378\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":13940:13942   */\n      0x20\n        /* \"#utility.yul\":13935:13938   */\n      dup3\n        /* \"#utility.yul\":13931:13943   */\n      add\n        /* \"#utility.yul\":13924:13943   */\n      swap1\n      pop\n        /* \"#utility.yul\":13583:13949   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13955:14374   */\n    tag_275:\n        /* \"#utility.yul\":14121:14125   */\n      0x00\n        /* \"#utility.yul\":14159:14161   */\n      0x20\n        /* \"#utility.yul\":14148:14157   */\n      dup3\n        /* \"#utility.yul\":14144:14162   */\n      add\n        /* \"#utility.yul\":14136:14162   */\n      swap1\n      pop\n        /* \"#utility.yul\":14208:14217   */\n      dup2\n        /* \"#utility.yul\":14202:14206   */\n      dup2\n        /* \"#utility.yul\":14198:14218   */\n      sub\n        /* \"#utility.yul\":14194:14195   */\n      0x00\n        /* \"#utility.yul\":14183:14192   */\n      dup4\n        /* \"#utility.yul\":14179:14196   */\n      add\n        /* \"#utility.yul\":14172:14219   */\n      mstore\n        /* \"#utility.yul\":14236:14367   */\n      tag_537\n        /* \"#utility.yul\":14362:14366   */\n      dup2\n        /* \"#utility.yul\":14236:14367   */\n      tag_379\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":14228:14367   */\n      swap1\n      pop\n        /* \"#utility.yul\":13955:14374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14380:14478   */\n    tag_380:\n        /* \"#utility.yul\":14431:14437   */\n      0x00\n        /* \"#utility.yul\":14465:14470   */\n      dup2\n        /* \"#utility.yul\":14459:14471   */\n      mload\n        /* \"#utility.yul\":14449:14471   */\n      swap1\n      pop\n        /* \"#utility.yul\":14380:14478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14484:14652   */\n    tag_381:\n        /* \"#utility.yul\":14567:14578   */\n      0x00\n        /* \"#utility.yul\":14601:14607   */\n      dup3\n        /* \"#utility.yul\":14596:14599   */\n      dup3\n        /* \"#utility.yul\":14589:14608   */\n      mstore\n        /* \"#utility.yul\":14641:14645   */\n      0x20\n        /* \"#utility.yul\":14636:14639   */\n      dup3\n        /* \"#utility.yul\":14632:14646   */\n      add\n        /* \"#utility.yul\":14617:14646   */\n      swap1\n      pop\n        /* \"#utility.yul\":14484:14652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14658:15018   */\n    tag_382:\n        /* \"#utility.yul\":14744:14747   */\n      0x00\n        /* \"#utility.yul\":14772:14810   */\n      tag_541\n        /* \"#utility.yul\":14804:14809   */\n      dup3\n        /* \"#utility.yul\":14772:14810   */\n      tag_380\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":14826:14896   */\n      tag_542\n        /* \"#utility.yul\":14889:14895   */\n      dup2\n        /* \"#utility.yul\":14884:14887   */\n      dup6\n        /* \"#utility.yul\":14826:14896   */\n      tag_381\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":14819:14896   */\n      swap4\n      pop\n        /* \"#utility.yul\":14905:14957   */\n      tag_543\n        /* \"#utility.yul\":14950:14956   */\n      dup2\n        /* \"#utility.yul\":14945:14948   */\n      dup6\n        /* \"#utility.yul\":14938:14942   */\n      0x20\n        /* \"#utility.yul\":14931:14936   */\n      dup7\n        /* \"#utility.yul\":14927:14943   */\n      add\n        /* \"#utility.yul\":14905:14957   */\n      tag_349\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":14982:15011   */\n      tag_544\n        /* \"#utility.yul\":15004:15010   */\n      dup2\n        /* \"#utility.yul\":14982:15011   */\n      tag_350\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":14977:14980   */\n      dup5\n        /* \"#utility.yul\":14973:15012   */\n      add\n        /* \"#utility.yul\":14966:15012   */\n      swap2\n      pop\n        /* \"#utility.yul\":14748:15018   */\n      pop\n        /* \"#utility.yul\":14658:15018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15024:15664   */\n    tag_297:\n        /* \"#utility.yul\":15219:15223   */\n      0x00\n        /* \"#utility.yul\":15257:15260   */\n      0x80\n        /* \"#utility.yul\":15246:15255   */\n      dup3\n        /* \"#utility.yul\":15242:15261   */\n      add\n        /* \"#utility.yul\":15234:15261   */\n      swap1\n      pop\n        /* \"#utility.yul\":15271:15342   */\n      tag_546\n        /* \"#utility.yul\":15339:15340   */\n      0x00\n        /* \"#utility.yul\":15328:15337   */\n      dup4\n        /* \"#utility.yul\":15324:15341   */\n      add\n        /* \"#utility.yul\":15315:15321   */\n      dup8\n        /* \"#utility.yul\":15271:15342   */\n      tag_357\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":15352:15424   */\n      tag_547\n        /* \"#utility.yul\":15420:15422   */\n      0x20\n        /* \"#utility.yul\":15409:15418   */\n      dup4\n        /* \"#utility.yul\":15405:15423   */\n      add\n        /* \"#utility.yul\":15396:15402   */\n      dup7\n        /* \"#utility.yul\":15352:15424   */\n      tag_357\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":15434:15506   */\n      tag_548\n        /* \"#utility.yul\":15502:15504   */\n      0x40\n        /* \"#utility.yul\":15491:15500   */\n      dup4\n        /* \"#utility.yul\":15487:15505   */\n      add\n        /* \"#utility.yul\":15478:15484   */\n      dup6\n        /* \"#utility.yul\":15434:15506   */\n      tag_360\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":15553:15562   */\n      dup2\n        /* \"#utility.yul\":15547:15551   */\n      dup2\n        /* \"#utility.yul\":15543:15563   */\n      sub\n        /* \"#utility.yul\":15538:15540   */\n      0x60\n        /* \"#utility.yul\":15527:15536   */\n      dup4\n        /* \"#utility.yul\":15523:15541   */\n      add\n        /* \"#utility.yul\":15516:15564   */\n      mstore\n        /* \"#utility.yul\":15581:15657   */\n      tag_549\n        /* \"#utility.yul\":15652:15656   */\n      dup2\n        /* \"#utility.yul\":15643:15649   */\n      dup5\n        /* \"#utility.yul\":15581:15657   */\n      tag_382\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":15573:15657   */\n      swap1\n      pop\n        /* \"#utility.yul\":15024:15664   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15670:15811   */\n    tag_383:\n        /* \"#utility.yul\":15726:15731   */\n      0x00\n        /* \"#utility.yul\":15757:15763   */\n      dup2\n        /* \"#utility.yul\":15751:15764   */\n      mload\n        /* \"#utility.yul\":15742:15764   */\n      swap1\n      pop\n        /* \"#utility.yul\":15773:15805   */\n      tag_551\n        /* \"#utility.yul\":15799:15804   */\n      dup2\n        /* \"#utility.yul\":15773:15805   */\n      tag_343\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":15670:15811   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15817:16166   */\n    tag_301:\n        /* \"#utility.yul\":15886:15892   */\n      0x00\n        /* \"#utility.yul\":15935:15937   */\n      0x20\n        /* \"#utility.yul\":15923:15932   */\n      dup3\n        /* \"#utility.yul\":15914:15921   */\n      dup5\n        /* \"#utility.yul\":15910:15933   */\n      sub\n        /* \"#utility.yul\":15906:15938   */\n      slt\n        /* \"#utility.yul\":15903:16022   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":15941:16020   */\n      tag_554\n      tag_340\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":15903:16022   */\n    tag_553:\n        /* \"#utility.yul\":16061:16062   */\n      0x00\n        /* \"#utility.yul\":16086:16149   */\n      tag_555\n        /* \"#utility.yul\":16141:16148   */\n      dup5\n        /* \"#utility.yul\":16132:16138   */\n      dup3\n        /* \"#utility.yul\":16121:16130   */\n      dup6\n        /* \"#utility.yul\":16117:16139   */\n      add\n        /* \"#utility.yul\":16086:16149   */\n      tag_383\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":16076:16149   */\n      swap2\n      pop\n        /* \"#utility.yul\":16032:16159   */\n      pop\n        /* \"#utility.yul\":15817:16166   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_db1f2b0395f8af81a252e25f3b1514283a1767cf693ada85de200c6148eac63d 68747470733a2f2f626f7265646170657961636874636c75622e636f6d2f6170692f6d7574616e74732f\n\n    auxdata: 0xa264697066735822122014222ed7d63bf1b72668e74affd735624c555782de96434a19362b0257df25f364736f6c63430008080033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_155": {
									"entryPoint": null,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_378": {
									"entryPoint": null,
									"id": 378,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 260,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_startTokenId_387": {
									"entryPoint": 255,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 268,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:516:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "244:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "254:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "268:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "274:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "264:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "264:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "254:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "285:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "315:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "311:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "311:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "289:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "362:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "376:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "390:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "398:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "386:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "386:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "376:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "342:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "335:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:26:5"
															},
															"nodeType": "YulIf",
															"src": "332:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "465:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "479:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "479:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "479:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "429:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "452:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "460:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "449:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "449:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "426:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "426:38:5"
															},
															"nodeType": "YulIf",
															"src": "423:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "228:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "237:6:5",
														"type": ""
													}
												],
												"src": "193:320:5"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600681526020017f4b616947656e00000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4b61474500000000000000000000000000000000000000000000000000000000815250816002908051906020019062000096929190620001d2565b508060039080519060200190620000af929190620001d2565b50620000c0620000ff60201b60201c565b6000819055505050620000e8620000dc6200010460201b60201c565b6200010c60201b60201c565b620000f9336200010c60201b60201c565b620002e7565b600090565b600033905090565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001e090620002b1565b90600052602060002090601f01602090048101928262000204576000855562000250565b82601f106200021f57805160ff191683800117855562000250565b8280016001018555821562000250579182015b828111156200024f57825182559160200191906001019062000232565b5b5090506200025f919062000263565b5090565b5b808211156200027e57600081600090555060010162000264565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ca57607f821691505b60208210811415620002e157620002e062000282565b5b50919050565b61213a80620002f76000396000f3fe6080604052600436106101145760003560e01c80636352211e116100a0578063a22cb46511610064578063a22cb4651461038a578063b88d4fde146103b3578063c87b56dd146103cf578063e985e9c51461040c578063f2fde38b1461044957610114565b80636352211e146102a357806370a08231146102e0578063715018a61461031d5780638da5cb5b1461033457806395d89b411461035f57610114565b806318160ddd116100e757806318160ddd146101da57806323b872dd1461020557806340c10f191461022157806342842e0e1461024a57806342966c681461026657610114565b806301ffc9a71461011957806306fdde0314610156578063081812fc14610181578063095ea7b3146101be575b600080fd5b34801561012557600080fd5b50610140600480360381019061013b9190611888565b610472565b60405161014d91906118d0565b60405180910390f35b34801561016257600080fd5b5061016b610504565b6040516101789190611984565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a391906119dc565b610596565b6040516101b59190611a4a565b60405180910390f35b6101d860048036038101906101d39190611a91565b6105f4565b005b3480156101e657600080fd5b506101ef610604565b6040516101fc9190611ae0565b60405180910390f35b61021f600480360381019061021a9190611afb565b61061b565b005b34801561022d57600080fd5b5061024860048036038101906102439190611a91565b6108df565b005b610264600480360381019061025f9190611afb565b6108f5565b005b34801561027257600080fd5b5061028d600480360381019061028891906119dc565b610915565b60405161029a9190611984565b60405180910390f35b3480156102af57600080fd5b506102ca60048036038101906102c591906119dc565b610965565b6040516102d79190611a4a565b60405180910390f35b3480156102ec57600080fd5b5061030760048036038101906103029190611b4e565b610977565b6040516103149190611ae0565b60405180910390f35b34801561032957600080fd5b50610332610a0f565b005b34801561034057600080fd5b50610349610a23565b6040516103569190611a4a565b60405180910390f35b34801561036b57600080fd5b50610374610a4d565b6040516103819190611984565b60405180910390f35b34801561039657600080fd5b506103b160048036038101906103ac9190611ba7565b610adf565b005b6103cd60048036038101906103c89190611d1c565b610bea565b005b3480156103db57600080fd5b506103f660048036038101906103f191906119dc565b610c3c565b6040516104039190611984565b60405180910390f35b34801561041857600080fd5b50610433600480360381019061042e9190611d9f565b610cba565b60405161044091906118d0565b60405180910390f35b34801561045557600080fd5b50610470600480360381019061046b9190611b4e565b610d4e565b005b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104cd57506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104fd5750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461051390611e0e565b80601f016020809104026020016040519081016040528092919081815260200182805461053f90611e0e565b801561058c5780601f106105615761010080835404028352916020019161058c565b820191906000526020600020905b81548152906001019060200180831161056f57829003601f168201915b5050505050905090565b60006105a182610dd2565b6105b6576105b563cf4700e460e01b610e4c565b5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61060082826001610e56565b5050565b600061060e610f85565b6001546000540303905090565b600061062682610f8a565b905073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff161693508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461069b5761069a63a114810060e01b610e4c565b5b6000806106a784611086565b915091506106bd81876106b86110ad565b6110b5565b6106e8576106d2866106cd6110ad565b610cba565b6106e7576106e66359c896be60e01b610e4c565b5b5b6106f586868660016110f9565b801561070057600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506107ce856107aa8888876110ff565b7c020000000000000000000000000000000000000000000000000000000017611127565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084161415610856576000600185019050600060046000838152602001908152602001600020541415610854576000548114610853578360046000838152602001908152602001600020819055505b5b505b600073ffffffffffffffffffffffffffffffffffffffff8673ffffffffffffffffffffffffffffffffffffffff161690508481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a460008114156108c9576108c863ea553b3460e01b610e4c565b5b6108d68787876001611152565b50505050505050565b6108e7611158565b6108f182826111d6565b5050565b61091083838360405180602001604052806000815250610bea565b505050565b606061091f611158565b6109288261133c565b6040518060400160405280600c81526020017f546f6b656e206275726e656400000000000000000000000000000000000000008152509050919050565b600061097082610f8a565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109be576109bd638f4eb60460e01b610e4c565b5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b610a17611158565b610a21600061134a565b565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060038054610a5c90611e0e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8890611e0e565b8015610ad55780601f10610aaa57610100808354040283529160200191610ad5565b820191906000526020600020905b815481529060010190602001808311610ab857829003601f168201915b5050505050905090565b8060076000610aec6110ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610b996110ad565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bde91906118d0565b60405180910390a35050565b610bf584848461061b565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610c3657610c2084848484611410565b610c3557610c3463d1a57ed660e01b610e4c565b5b5b50505050565b6060610c4782610dd2565b610c5c57610c5b63a14c4b5060e01b610e4c565b5b6000610c6661154f565b9050600081511415610c875760405180602001604052806000815250610cb2565b80610c918461156f565b604051602001610ca2929190611e7c565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610d56611158565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610dc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbd90611f12565b60405180910390fd5b610dcf8161134a565b50565b600081610ddd610f85565b11610e4757600054821015610e465760005b600060046000858152602001908152602001600020549150811415610e1f5782610e1890611f61565b9250610def565b60007c01000000000000000000000000000000000000000000000000000000008216149150505b5b919050565b8060005260046000fd5b6000610e6183610965565b9050818015610ea357508073ffffffffffffffffffffffffffffffffffffffff16610e8a6110ad565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610ecf57610eb981610eb46110ad565b610cba565b610ece57610ecd63cfb3b94260e01b610e4c565b5b5b836006600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a450505050565b600090565b600081610f95610f85565b1161107057600460008381526020019081526020016000205490506000811415611042576000548210610fd357610fd263df2d9b4260e01b610e4c565b5b5b60046000836001900393508381526020019081526020016000205490506000811415610fff5761103d565b60007c01000000000000000000000000000000000000000000000000000000008216141561102c57611081565b61103c63df2d9b4260e01b610e4c565b5b610fd4565b60007c01000000000000000000000000000000000000000000000000000000008216141561106f57611081565b5b61108063df2d9b4260e01b610e4c565b5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e86111168686846115c8565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b6111606115d1565b73ffffffffffffffffffffffffffffffffffffffff1661117e610a23565b73ffffffffffffffffffffffffffffffffffffffff16146111d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111cb90611fd7565b60405180910390fd5b565b60008054905060008214156111f6576111f563b562e8dd60e01b610e4c565b5b61120360008483856110f9565b6112238361121460008660006110ff565b61121d856115d9565b17611127565b6004600083815260200190815260200160002081905550600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff1616905060008114156112dc576112db632e07630060e01b610e4c565b5b6000838301905060008390505b808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4818160010191508114156112e957816000819055505050506113376000848385611152565b505050565b6113478160006115e9565b50565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026114366110ad565b8786866040518563ffffffff1660e01b8152600401611458949392919061204c565b602060405180830381600087803b15801561147257600080fd5b505af19250505080156114a357506040513d601f19601f820116820180604052508101906114a091906120ad565b60015b6114fc573d80600081146114d3576040519150601f19603f3d011682016040523d82523d6000602084013e6114d8565b606091505b506000815114156114f4576114f363d1a57ed660e01b610e4c565b5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b60606040518060600160405280602a81526020016120db602a9139905090565b606060a060405101806040526020810391506000825281835b6001156115b357600184039350600a81066030018453600a81049050806115ae576115b3565b611588565b50828103602084039350808452505050919050565b60009392505050565b600033905090565b60006001821460e11b9050919050565b60006115f483610f8a565b9050600081905060008061160786611086565b91509150841561164f57611623818461161e6110ad565b6110b5565b61164e57611638836116336110ad565b610cba565b61164d5761164c6359c896be60e01b610e4c565b5b5b5b61165d8360008860016110f9565b801561166857600082555b600160806001901b03600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550611710836116cd856000886110ff565b7c02000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000001717611127565b600460008881526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000085161415611798576000600187019050600060046000838152602001908152602001600020541415611796576000548114611795578460046000838152602001908152602001600020819055505b5b505b85600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611802836000886001611152565b600160008154809291906001019190505550505050505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61186581611830565b811461187057600080fd5b50565b6000813590506118828161185c565b92915050565b60006020828403121561189e5761189d611826565b5b60006118ac84828501611873565b91505092915050565b60008115159050919050565b6118ca816118b5565b82525050565b60006020820190506118e560008301846118c1565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561192557808201518184015260208101905061190a565b83811115611934576000848401525b50505050565b6000601f19601f8301169050919050565b6000611956826118eb565b61196081856118f6565b9350611970818560208601611907565b6119798161193a565b840191505092915050565b6000602082019050818103600083015261199e818461194b565b905092915050565b6000819050919050565b6119b9816119a6565b81146119c457600080fd5b50565b6000813590506119d6816119b0565b92915050565b6000602082840312156119f2576119f1611826565b5b6000611a00848285016119c7565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a3482611a09565b9050919050565b611a4481611a29565b82525050565b6000602082019050611a5f6000830184611a3b565b92915050565b611a6e81611a29565b8114611a7957600080fd5b50565b600081359050611a8b81611a65565b92915050565b60008060408385031215611aa857611aa7611826565b5b6000611ab685828601611a7c565b9250506020611ac7858286016119c7565b9150509250929050565b611ada816119a6565b82525050565b6000602082019050611af56000830184611ad1565b92915050565b600080600060608486031215611b1457611b13611826565b5b6000611b2286828701611a7c565b9350506020611b3386828701611a7c565b9250506040611b44868287016119c7565b9150509250925092565b600060208284031215611b6457611b63611826565b5b6000611b7284828501611a7c565b91505092915050565b611b84816118b5565b8114611b8f57600080fd5b50565b600081359050611ba181611b7b565b92915050565b60008060408385031215611bbe57611bbd611826565b5b6000611bcc85828601611a7c565b9250506020611bdd85828601611b92565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c298261193a565b810181811067ffffffffffffffff82111715611c4857611c47611bf1565b5b80604052505050565b6000611c5b61181c565b9050611c678282611c20565b919050565b600067ffffffffffffffff821115611c8757611c86611bf1565b5b611c908261193a565b9050602081019050919050565b82818337600083830152505050565b6000611cbf611cba84611c6c565b611c51565b905082815260208101848484011115611cdb57611cda611bec565b5b611ce6848285611c9d565b509392505050565b600082601f830112611d0357611d02611be7565b5b8135611d13848260208601611cac565b91505092915050565b60008060008060808587031215611d3657611d35611826565b5b6000611d4487828801611a7c565b9450506020611d5587828801611a7c565b9350506040611d66878288016119c7565b925050606085013567ffffffffffffffff811115611d8757611d8661182b565b5b611d9387828801611cee565b91505092959194509250565b60008060408385031215611db657611db5611826565b5b6000611dc485828601611a7c565b9250506020611dd585828601611a7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e2657607f821691505b60208210811415611e3a57611e39611ddf565b5b50919050565b600081905092915050565b6000611e56826118eb565b611e608185611e40565b9350611e70818560208601611907565b80840191505092915050565b6000611e888285611e4b565b9150611e948284611e4b565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611efc6026836118f6565b9150611f0782611ea0565b604082019050919050565b60006020820190508181036000830152611f2b81611eef565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f6c826119a6565b91506000821415611f8057611f7f611f32565b5b600182039050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611fc16020836118f6565b9150611fcc82611f8b565b602082019050919050565b60006020820190508181036000830152611ff081611fb4565b9050919050565b600081519050919050565b600082825260208201905092915050565b600061201e82611ff7565b6120288185612002565b9350612038818560208601611907565b6120418161193a565b840191505092915050565b60006080820190506120616000830187611a3b565b61206e6020830186611a3b565b61207b6040830185611ad1565b818103606083015261208d8184612013565b905095945050505050565b6000815190506120a78161185c565b92915050565b6000602082840312156120c3576120c2611826565b5b60006120d184828501612098565b9150509291505056fe68747470733a2f2f626f7265646170657961636874636c75622e636f6d2f6170692f6d7574616e74732fa264697066735822122014222ed7d63bf1b72668e74affd735624c555782de96434a19362b0257df25f364736f6c63430008080033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B616947656E0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B61474500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0x1D2 JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0x1D2 JUMP JUMPDEST POP PUSH3 0xC0 PUSH3 0xFF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0xE8 PUSH3 0xDC PUSH3 0x104 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x10C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xF9 CALLER PUSH3 0x10C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2E7 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1E0 SWAP1 PUSH3 0x2B1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x204 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x250 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x21F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x250 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x250 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x24F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x232 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x25F SWAP2 SWAP1 PUSH3 0x263 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x27E JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x264 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2E1 JUMPI PUSH3 0x2E0 PUSH3 0x282 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x213A DUP1 PUSH3 0x2F7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x449 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x35F JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x266 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x965 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH2 0xA0F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x349 PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x1BA7 JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x470 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH2 0xD4E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4CD JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4FD JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x513 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x53F SWAP1 PUSH2 0x1E0E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x58C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x561 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x58C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x56F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A1 DUP3 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0x5B6 JUMPI PUSH2 0x5B5 PUSH4 0xCF4700E4 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x600 DUP3 DUP3 PUSH1 0x1 PUSH2 0xE56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60E PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x626 DUP3 PUSH2 0xF8A JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP4 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x69B JUMPI PUSH2 0x69A PUSH4 0xA1148100 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6A7 DUP5 PUSH2 0x1086 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x6BD DUP2 DUP8 PUSH2 0x6B8 PUSH2 0x10AD JUMP JUMPDEST PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x6E8 JUMPI PUSH2 0x6D2 DUP7 PUSH2 0x6CD PUSH2 0x10AD JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x6E7 JUMPI PUSH2 0x6E6 PUSH4 0x59C896BE PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x6F5 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x10F9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x700 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x7CE DUP6 PUSH2 0x7AA DUP9 DUP9 DUP8 PUSH2 0x10FF JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0x1127 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND EQ ISZERO PUSH2 0x856 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x854 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x853 JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP1 POP DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x8C9 JUMPI PUSH2 0x8C8 PUSH4 0xEA553B34 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH2 0x8D6 DUP8 DUP8 DUP8 PUSH1 0x1 PUSH2 0x1152 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8E7 PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x8F1 DUP3 DUP3 PUSH2 0x11D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x910 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x91F PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x928 DUP3 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F6B656E206275726E65640000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x970 DUP3 PUSH2 0xF8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9BE JUMPI PUSH2 0x9BD PUSH4 0x8F4EB604 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA17 PUSH2 0x1158 JUMP JUMPDEST PUSH2 0xA21 PUSH1 0x0 PUSH2 0x134A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA5C SWAP1 PUSH2 0x1E0E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA88 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAAA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xAEC PUSH2 0x10AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB99 PUSH2 0x10AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBDE SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBF5 DUP5 DUP5 DUP5 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xC36 JUMPI PUSH2 0xC20 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0xC35 JUMPI PUSH2 0xC34 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC47 DUP3 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xC5C JUMPI PUSH2 0xC5B PUSH4 0xA14C4B50 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC66 PUSH2 0x154F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xC87 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCB2 JUMP JUMPDEST DUP1 PUSH2 0xC91 DUP5 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCA2 SWAP3 SWAP2 SWAP1 PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD56 PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBD SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDCF DUP2 PUSH2 0x134A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xDDD PUSH2 0xF85 JUMP JUMPDEST GT PUSH2 0xE47 JUMPI PUSH1 0x0 SLOAD DUP3 LT ISZERO PUSH2 0xE46 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP DUP2 EQ ISZERO PUSH2 0xE1F JUMPI DUP3 PUSH2 0xE18 SWAP1 PUSH2 0x1F61 JUMP JUMPDEST SWAP3 POP PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ SWAP2 POP POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE61 DUP4 PUSH2 0x965 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0xEA3 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE8A PUSH2 0x10AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xECF JUMPI PUSH2 0xEB9 DUP2 PUSH2 0xEB4 PUSH2 0x10AD JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH2 0xECE JUMPI PUSH2 0xECD PUSH4 0xCFB3B942 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST JUMPDEST DUP4 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xF95 PUSH2 0xF85 JUMP JUMPDEST GT PUSH2 0x1070 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1042 JUMPI PUSH1 0x0 SLOAD DUP3 LT PUSH2 0xFD3 JUMPI PUSH2 0xFD2 PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xFFF JUMPI PUSH2 0x103D JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0x102C JUMPI PUSH2 0x1081 JUMP JUMPDEST PUSH2 0x103C PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0x106F JUMPI PUSH2 0x1081 JUMP JUMPDEST JUMPDEST PUSH2 0x1080 PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0x1116 DUP7 DUP7 DUP5 PUSH2 0x15C8 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1160 PUSH2 0x15D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x117E PUSH2 0xA23 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CB SWAP1 PUSH2 0x1FD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x11F6 JUMPI PUSH2 0x11F5 PUSH4 0xB562E8DD PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH2 0x1203 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x10F9 JUMP JUMPDEST PUSH2 0x1223 DUP4 PUSH2 0x1214 PUSH1 0x0 DUP7 PUSH1 0x0 PUSH2 0x10FF JUMP JUMPDEST PUSH2 0x121D DUP6 PUSH2 0x15D9 JUMP JUMPDEST OR PUSH2 0x1127 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x40 PUSH1 0x1 SWAP1 SHL OR DUP3 MUL PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x12DC JUMPI PUSH2 0x12DB PUSH4 0x2E076300 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 DUP4 ADD SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP2 DUP2 PUSH1 0x1 ADD SWAP2 POP DUP2 EQ ISZERO PUSH2 0x12E9 JUMPI DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x1337 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x1152 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1347 DUP2 PUSH1 0x0 PUSH2 0x15E9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1436 PUSH2 0x10AD JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1458 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x204C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14A3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14A0 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14FC JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14D3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x14F4 JUMPI PUSH2 0x14F3 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20DB PUSH1 0x2A SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x15B3 JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x15AE JUMPI PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x1588 JUMP JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH1 0xE1 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F4 DUP4 PUSH2 0xF8A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1607 DUP7 PUSH2 0x1086 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 ISZERO PUSH2 0x164F JUMPI PUSH2 0x1623 DUP2 DUP5 PUSH2 0x161E PUSH2 0x10AD JUMP JUMPDEST PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x164E JUMPI PUSH2 0x1638 DUP4 PUSH2 0x1633 PUSH2 0x10AD JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x164D JUMPI PUSH2 0x164C PUSH4 0x59C896BE PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH2 0x165D DUP4 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH2 0x10F9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1668 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x80 PUSH1 0x1 SWAP1 SHL SUB PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1710 DUP4 PUSH2 0x16CD DUP6 PUSH1 0x0 DUP9 PUSH2 0x10FF JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 OR OR PUSH2 0x1127 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP6 AND EQ ISZERO PUSH2 0x1798 JUMPI PUSH1 0x0 PUSH1 0x1 DUP8 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x1796 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x1795 JUMPI DUP5 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP6 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1802 DUP4 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1865 DUP2 PUSH2 0x1830 JUMP JUMPDEST DUP2 EQ PUSH2 0x1870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1882 DUP2 PUSH2 0x185C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189E JUMPI PUSH2 0x189D PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18AC DUP5 DUP3 DUP6 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18CA DUP2 PUSH2 0x18B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1925 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x190A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1934 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1956 DUP3 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x1960 DUP2 DUP6 PUSH2 0x18F6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1970 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x1979 DUP2 PUSH2 0x193A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x199E DUP2 DUP5 PUSH2 0x194B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B9 DUP2 PUSH2 0x19A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x19C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19D6 DUP2 PUSH2 0x19B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F2 JUMPI PUSH2 0x19F1 PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A00 DUP5 DUP3 DUP6 ADD PUSH2 0x19C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A34 DUP3 PUSH2 0x1A09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A44 DUP2 PUSH2 0x1A29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6E DUP2 PUSH2 0x1A29 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A8B DUP2 PUSH2 0x1A65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA8 JUMPI PUSH2 0x1AA7 PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AB6 DUP6 DUP3 DUP7 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AC7 DUP6 DUP3 DUP7 ADD PUSH2 0x19C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADA DUP2 PUSH2 0x19A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B14 JUMPI PUSH2 0x1B13 PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B22 DUP7 DUP3 DUP8 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B33 DUP7 DUP3 DUP8 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B44 DUP7 DUP3 DUP8 ADD PUSH2 0x19C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B64 JUMPI PUSH2 0x1B63 PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B72 DUP5 DUP3 DUP6 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B84 DUP2 PUSH2 0x18B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BA1 DUP2 PUSH2 0x1B7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BBE JUMPI PUSH2 0x1BBD PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BCC DUP6 DUP3 DUP7 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BDD DUP6 DUP3 DUP7 ADD PUSH2 0x1B92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1C29 DUP3 PUSH2 0x193A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1C48 JUMPI PUSH2 0x1C47 PUSH2 0x1BF1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5B PUSH2 0x181C JUMP JUMPDEST SWAP1 POP PUSH2 0x1C67 DUP3 DUP3 PUSH2 0x1C20 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C87 JUMPI PUSH2 0x1C86 PUSH2 0x1BF1 JUMP JUMPDEST JUMPDEST PUSH2 0x1C90 DUP3 PUSH2 0x193A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CBF PUSH2 0x1CBA DUP5 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x1C51 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1CDB JUMPI PUSH2 0x1CDA PUSH2 0x1BEC JUMP JUMPDEST JUMPDEST PUSH2 0x1CE6 DUP5 DUP3 DUP6 PUSH2 0x1C9D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D03 JUMPI PUSH2 0x1D02 PUSH2 0x1BE7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D13 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D36 JUMPI PUSH2 0x1D35 PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D44 DUP8 DUP3 DUP9 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D55 DUP8 DUP3 DUP9 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D66 DUP8 DUP3 DUP9 ADD PUSH2 0x19C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D87 JUMPI PUSH2 0x1D86 PUSH2 0x182B JUMP JUMPDEST JUMPDEST PUSH2 0x1D93 DUP8 DUP3 DUP9 ADD PUSH2 0x1CEE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB6 JUMPI PUSH2 0x1DB5 PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DC4 DUP6 DUP3 DUP7 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DD5 DUP6 DUP3 DUP7 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E26 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1E3A JUMPI PUSH2 0x1E39 PUSH2 0x1DDF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E56 DUP3 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x1E60 DUP2 DUP6 PUSH2 0x1E40 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E70 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1907 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E88 DUP3 DUP6 PUSH2 0x1E4B JUMP JUMPDEST SWAP2 POP PUSH2 0x1E94 DUP3 DUP5 PUSH2 0x1E4B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFC PUSH1 0x26 DUP4 PUSH2 0x18F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F07 DUP3 PUSH2 0x1EA0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F2B DUP2 PUSH2 0x1EEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F6C DUP3 PUSH2 0x19A6 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1F80 JUMPI PUSH2 0x1F7F PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC1 PUSH1 0x20 DUP4 PUSH2 0x18F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FCC DUP3 PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FF0 DUP2 PUSH2 0x1FB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201E DUP3 PUSH2 0x1FF7 JUMP JUMPDEST PUSH2 0x2028 DUP2 DUP6 PUSH2 0x2002 JUMP JUMPDEST SWAP4 POP PUSH2 0x2038 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x2041 DUP2 PUSH2 0x193A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2061 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0x206E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0x207B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AD1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x208D DUP2 DUP5 PUSH2 0x2013 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20A7 DUP2 PUSH2 0x185C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C3 JUMPI PUSH2 0x20C2 PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20D1 DUP5 DUP3 DUP6 ADD PUSH2 0x2098 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID PUSH9 0x747470733A2F2F626F PUSH19 0x65646170657961636874636C75622E636F6D2F PUSH2 0x7069 0x2F PUSH14 0x7574616E74732FA2646970667358 0x22 SLT KECCAK256 EQ 0x22 0x2E 0xD7 0xD6 EXTCODESIZE CALL 0xB7 0x26 PUSH9 0xE74AFFD735624C5557 DUP3 0xDE SWAP7 NUMBER 0x4A NOT CALLDATASIZE 0x2B MUL JUMPI 0xDF 0x25 RETURN PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ",
							"sourceMap": "197:933:2:-:0;;;252:111;;;;;;;;;;4946:154:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5020:5;5012;:13;;;;;;;;;;;;:::i;:::-;;5045:7;5035;:17;;;;;;;;;;;;:::i;:::-;;5078:15;:13;;;:15;;:::i;:::-;5062:13;:31;;;;4946:154;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;321:30:2::1;340:10;321:18;;;:30;;:::i;:::-;197:933:::0;;5426:90:3;5482:7;5426:90;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;197:933:2:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:5:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:320;237:6;274:1;268:4;264:12;254:22;;321:1;315:4;311:12;342:18;332:81;;398:4;390:6;386:17;376:27;;332:81;460:2;452:6;449:14;429:18;426:38;423:84;;;479:18;;:::i;:::-;423:84;244:269;193:320;;;:::o;197:933:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1309": {
									"entryPoint": 4434,
									"id": 1309,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1750": {
									"entryPoint": 3670,
									"id": 1750,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_164": {
									"entryPoint": 5455,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1296": {
									"entryPoint": 4345,
									"id": 1296,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1762": {
									"entryPoint": 4924,
									"id": 1762,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_1916": {
									"entryPoint": 5609,
									"id": 1916,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1365": {
									"entryPoint": 5136,
									"id": 1365,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkOwner_54": {
									"entryPoint": 4440,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_exists_1018": {
									"entryPoint": 3538,
									"id": 1018,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1975": {
									"entryPoint": 5576,
									"id": 1975,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_1051": {
									"entryPoint": 4230,
									"id": 1051,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_1032": {
									"entryPoint": 4277,
									"id": 1032,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1484": {
									"entryPoint": 4566,
									"id": 1484,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSenderERC721A_2018": {
									"entryPoint": 4269,
									"id": 2018,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_124": {
									"entryPoint": 5585,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2008": {
									"entryPoint": 4351,
									"id": 2008,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_nextInitializedFlag_890": {
									"entryPoint": 5593,
									"id": 890,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packOwnershipData_880": {
									"entryPoint": 4391,
									"id": 880,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_814": {
									"entryPoint": 3978,
									"id": 814,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revert_2036": {
									"entryPoint": 3660,
									"id": 2036,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_startTokenId_387": {
									"entryPoint": 3973,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_2028": {
									"entryPoint": 5487,
									"id": 2028,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 4938,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approve_906": {
									"entryPoint": 1524,
									"id": 906,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_462": {
									"entryPoint": 2423,
									"id": 462,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_239": {
									"entryPoint": 2325,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_931": {
									"entryPoint": 1430,
									"id": 931,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_975": {
									"entryPoint": 3258,
									"id": 975,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_223": {
									"entryPoint": 2271,
									"id": 223,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_585": {
									"entryPoint": 1284,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_669": {
									"entryPoint": 2405,
									"id": 669,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 2595,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 2575,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1243": {
									"entryPoint": 2293,
									"id": 1243,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1283": {
									"entryPoint": 3050,
									"id": 1283,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_957": {
									"entryPoint": 2783,
									"id": 957,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_575": {
									"entryPoint": 1138,
									"id": 575,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_595": {
									"entryPoint": 2637,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_208": {
									"entryPoint": 3132,
									"id": 208,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_412": {
									"entryPoint": 1540,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1224": {
									"entryPoint": 1563,
									"id": 1224,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 3406,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7340,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7804,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8268,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6172,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 7325,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 6407,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 8033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 7986,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7647,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7148,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6187,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 7840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 8075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16169:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:5",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:5",
														"type": ""
													}
												],
												"src": "334:149:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:5"
															},
															"nodeType": "YulIf",
															"src": "541:62:5"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:5",
														"type": ""
													}
												],
												"src": "489:120:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:5"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:5",
														"type": ""
													}
												],
												"src": "615:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:5"
															},
															"nodeType": "YulIf",
															"src": "833:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:5",
														"type": ""
													}
												],
												"src": "758:327:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:5",
														"type": ""
													}
												],
												"src": "1091:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:5",
														"type": ""
													}
												],
												"src": "1187:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:5",
														"type": ""
													}
												],
												"src": "1302:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:5",
														"type": ""
													}
												],
												"src": "1518:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:5",
														"type": ""
													}
												],
												"src": "1623:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1847:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1857:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1866:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1861:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1926:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1951:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1956:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1947:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1947:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1970:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1975:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1966:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1966:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1960:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1940:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1940:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1887:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1884:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1884:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1898:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1900:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1909:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1905:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1905:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1900:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1880:3:5",
																"statements": []
															},
															"src": "1876:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2023:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2073:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2078:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2069:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2069:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2087:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2062:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2062:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2062:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2004:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2007:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2001:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:13:5"
															},
															"nodeType": "YulIf",
															"src": "1998:101:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1829:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1834:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1839:6:5",
														"type": ""
													}
												],
												"src": "1798:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2159:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2169:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2187:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2194:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2199:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2199:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2169:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2142:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2152:6:5",
														"type": ""
													}
												],
												"src": "2111:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2311:272:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2321:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2368:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2335:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2325:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2383:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2449:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2454:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2390:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2496:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2503:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2492:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2492:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2510:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2515:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2470:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2470:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2531:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2569:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2547:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2547:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2538:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2292:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2299:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2307:3:5",
														"type": ""
													}
												],
												"src": "2219:364:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:195:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2717:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2729:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2740:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2725:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2717:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2783:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2789:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2779:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2753:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2753:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2809:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2881:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2890:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2817:63:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2809:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2679:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2691:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2702:4:5",
														"type": ""
													}
												],
												"src": "2589:313:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2974:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2963:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2935:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2945:7:5",
														"type": ""
													}
												],
												"src": "2908:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3091:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3100:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3103:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3093:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3093:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3093:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3057:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3082:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3064:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3064:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3054:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:43:5"
															},
															"nodeType": "YulIf",
															"src": "3044:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3027:5:5",
														"type": ""
													}
												],
												"src": "2991:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3171:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3181:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3203:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3190:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3181:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3246:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3219:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3219:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3149:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3157:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3165:5:5",
														"type": ""
													}
												],
												"src": "3119:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3330:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3376:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3378:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3378:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3378:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3351:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3360:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3347:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3347:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3372:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3343:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:32:5"
															},
															"nodeType": "YulIf",
															"src": "3340:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3469:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3484:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3498:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3488:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3513:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3559:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3544:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3523:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3523:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3513:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3300:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3311:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3323:6:5",
														"type": ""
													}
												],
												"src": "3264:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3644:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3654:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3669:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3676:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3665:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3665:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3654:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3626:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3636:7:5",
														"type": ""
													}
												],
												"src": "3599:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3776:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3786:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3815:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3797:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3786:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3758:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3768:7:5",
														"type": ""
													}
												],
												"src": "3731:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3915:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3938:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3920:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3920:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3908:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3908:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3908:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3886:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3893:3:5",
														"type": ""
													}
												],
												"src": "3833:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4055:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4065:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4077:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4088:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4073:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4065:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4145:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4158:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4169:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4154:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4154:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4101:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4101:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4101:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4027:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4039:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4050:4:5",
														"type": ""
													}
												],
												"src": "3957:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4228:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4285:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4294:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4297:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4287:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4287:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4287:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4251:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4276:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4258:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4258:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4248:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4248:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:43:5"
															},
															"nodeType": "YulIf",
															"src": "4238:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4221:5:5",
														"type": ""
													}
												],
												"src": "4185:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4365:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4375:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4397:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4384:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4384:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4375:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4440:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4413:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4413:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4343:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4351:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4359:5:5",
														"type": ""
													}
												],
												"src": "4313:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4541:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4587:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4589:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4589:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4589:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4562:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4571:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4558:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4558:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4583:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4554:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4554:32:5"
															},
															"nodeType": "YulIf",
															"src": "4551:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "4680:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4695:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4699:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4724:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4759:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4770:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4755:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4755:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4779:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4734:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4734:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4724:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4807:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4822:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4836:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4826:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4852:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4887:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4898:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4883:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4883:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4907:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4862:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4862:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4852:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4503:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4514:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4526:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4534:6:5",
														"type": ""
													}
												],
												"src": "4458:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5003:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5020:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5043:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5025:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5025:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5013:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5013:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5013:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4991:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4998:3:5",
														"type": ""
													}
												],
												"src": "4938:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5160:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5170:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5182:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5193:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5178:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5178:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5170:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5250:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5263:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5274:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5259:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5259:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5206:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5206:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5206:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5132:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5144:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5155:4:5",
														"type": ""
													}
												],
												"src": "5062:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5390:519:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5436:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5438:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5438:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5438:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5411:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5420:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5407:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5407:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5432:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5403:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5403:32:5"
															},
															"nodeType": "YulIf",
															"src": "5400:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "5529:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5544:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5558:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5548:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5573:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5608:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5619:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5604:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5604:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5628:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5583:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5583:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5573:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5656:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5671:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5685:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5675:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5701:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5736:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5747:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5732:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5732:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5756:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5711:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5711:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5701:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5784:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5799:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5803:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5829:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5864:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5875:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5860:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5860:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5884:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5839:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5839:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5829:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5344:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5355:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5367:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5375:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5383:6:5",
														"type": ""
													}
												],
												"src": "5290:619:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5981:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6027:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6029:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6029:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6029:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6002:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6011:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5998:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5998:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6023:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5994:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:32:5"
															},
															"nodeType": "YulIf",
															"src": "5991:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "6120:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6135:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6149:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6139:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6164:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6199:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6210:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6195:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6195:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6219:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6174:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6174:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6164:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5951:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5962:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5974:6:5",
														"type": ""
													}
												],
												"src": "5915:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6290:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6344:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6353:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6356:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6346:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6346:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6346:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6313:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6335:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6320:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6320:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6310:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6310:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6303:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:40:5"
															},
															"nodeType": "YulIf",
															"src": "6300:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6283:5:5",
														"type": ""
													}
												],
												"src": "6250:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6421:84:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6431:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6453:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6440:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6431:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6493:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6469:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6469:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6469:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6399:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6407:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6415:5:5",
														"type": ""
													}
												],
												"src": "6372:133:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6591:388:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6637:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6639:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6639:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6639:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6612:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6621:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6608:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6633:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6604:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6604:32:5"
															},
															"nodeType": "YulIf",
															"src": "6601:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "6730:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6745:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6759:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6749:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6774:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6809:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6820:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6805:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6805:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6829:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6784:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6784:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6774:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6857:115:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6872:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6886:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6876:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6902:60:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6934:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6945:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6930:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6930:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6954:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6912:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6912:50:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6902:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6553:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6564:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6576:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6584:6:5",
														"type": ""
													}
												],
												"src": "6511:468:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7074:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7091:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7094:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7084:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6985:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7197:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7214:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7217:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7207:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7207:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7108:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7259:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7276:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7279:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7269:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7269:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7269:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7373:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7376:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7366:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7397:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7400:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7390:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7231:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7460:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7470:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7492:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7522:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7500:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7500:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7488:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7474:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7641:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7641:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7594:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7579:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7579:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7618:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7630:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7615:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7576:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7576:62:5"
															},
															"nodeType": "YulIf",
															"src": "7573:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7677:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7681:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7670:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7670:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7446:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7454:4:5",
														"type": ""
													}
												],
												"src": "7417:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7745:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7755:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7765:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7765:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7755:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7814:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7822:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7794:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7794:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7729:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7738:6:5",
														"type": ""
													}
												],
												"src": "7704:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7905:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8010:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8012:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8012:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8012:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7982:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7990:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7979:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7979:30:5"
															},
															"nodeType": "YulIf",
															"src": "7976:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8072:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8050:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8050:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8042:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8116:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8128:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8134:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8124:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8116:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7889:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7900:4:5",
														"type": ""
													}
												],
												"src": "7839:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8203:103:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8226:3:5"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8231:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8236:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8213:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8213:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8213:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8284:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8289:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8280:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8280:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8298:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8273:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8273:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8273:27:5"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8185:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8190:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8195:6:5",
														"type": ""
													}
												],
												"src": "8152:154:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8395:327:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8405:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8471:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8430:40:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8430:48:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8414:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:65:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8405:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8495:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8502:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8488:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8488:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8488:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8518:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8533:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8540:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8529:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8529:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8522:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8583:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8585:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8585:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8585:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8564:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8569:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8560:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8560:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8578:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8557:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8557:25:5"
															},
															"nodeType": "YulIf",
															"src": "8554:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8699:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8704:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8709:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8675:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8675:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8675:41:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8368:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8373:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8381:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8389:5:5",
														"type": ""
													}
												],
												"src": "8312:410:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8802:277:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8851:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8853:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8853:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8853:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8830:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8838:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8826:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8826:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8845:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8822:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8822:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8815:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8815:35:5"
															},
															"nodeType": "YulIf",
															"src": "8812:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8943:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8970:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8957:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8957:20:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8947:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8986:87:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9046:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9054:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9042:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9042:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9061:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9069:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8995:46:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8995:78:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8986:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8780:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8788:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8796:5:5",
														"type": ""
													}
												],
												"src": "8741:338:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9211:817:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9258:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9260:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9260:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9260:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9232:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9241:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9228:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9228:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9253:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9224:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:33:5"
															},
															"nodeType": "YulIf",
															"src": "9221:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "9351:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9366:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9380:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9370:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9395:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9430:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9441:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9426:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9426:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9450:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9405:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9405:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9395:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9478:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9493:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9507:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9497:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9523:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9558:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9569:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9554:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9554:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9578:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9533:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9533:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9523:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9606:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9621:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9635:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9625:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9651:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9686:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9697:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9682:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9682:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9706:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9661:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9661:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9651:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9734:287:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9749:46:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9780:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9791:2:5",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9776:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9776:18:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9763:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9763:32:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9753:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9842:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9844:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9844:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9844:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9814:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9822:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9811:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9811:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "9808:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9939:72:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9983:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9994:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9979:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9979:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10003:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9949:29:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9949:62:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9939:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9157:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9168:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9180:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9188:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9196:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9204:6:5",
														"type": ""
													}
												],
												"src": "9085:943:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10117:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10163:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10165:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10165:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10165:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10138:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10147:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10134:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10134:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10159:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10130:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10130:32:5"
															},
															"nodeType": "YulIf",
															"src": "10127:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "10256:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10271:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10285:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10275:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10300:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10335:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10346:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10331:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10331:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10355:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10310:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10310:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10300:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10383:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10398:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10412:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10402:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10428:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10463:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10474:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10459:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10459:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10483:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10438:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10438:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10428:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10079:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10090:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10102:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10110:6:5",
														"type": ""
													}
												],
												"src": "10034:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10542:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10559:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10562:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10552:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10552:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10552:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10656:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10659:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10649:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10683:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10673:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10673:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10673:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10514:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10751:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10761:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10775:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10781:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10771:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10771:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10761:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10792:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10822:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10828:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10818:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10818:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10796:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10869:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10883:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10897:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10905:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10893:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10893:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10883:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10849:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10842:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10842:26:5"
															},
															"nodeType": "YulIf",
															"src": "10839:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10972:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10986:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10986:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10986:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10936:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10959:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10967:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10956:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10956:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10933:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10933:38:5"
															},
															"nodeType": "YulIf",
															"src": "10930:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10735:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10744:6:5",
														"type": ""
													}
												],
												"src": "10700:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11140:34:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11150:18:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11165:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11150:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11112:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11117:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11128:11:5",
														"type": ""
													}
												],
												"src": "11026:148:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11290:267:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11300:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11347:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11314:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11314:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11304:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11362:96:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11446:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11451:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11369:76:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11369:89:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11362:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11493:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11500:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11489:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11489:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11507:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11512:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11467:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11467:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11467:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11528:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11539:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11544:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11535:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11535:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11528:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11271:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11278:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11286:3:5",
														"type": ""
													}
												],
												"src": "11180:377:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11747:251:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11758:102:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11847:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11856:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11765:81:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11765:95:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11758:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11870:102:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11959:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11968:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11877:81:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11877:95:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11870:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11982:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11989:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11982:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11718:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11724:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11732:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11743:3:5",
														"type": ""
													}
												],
												"src": "11563:435:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12110:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12132:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12140:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12128:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12128:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12144:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12121:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12121:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12121:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12200:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12208:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12196:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12196:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12213:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12189:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12189:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12189:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12102:6:5",
														"type": ""
													}
												],
												"src": "12004:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12381:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12391:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12457:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12462:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12398:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12398:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12391:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12563:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "12474:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12474:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12474:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12576:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12587:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12592:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12583:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12583:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12576:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12369:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12377:3:5",
														"type": ""
													}
												],
												"src": "12235:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12778:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12788:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12800:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12811:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12796:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12796:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12788:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12835:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12846:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12831:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12831:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12854:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12860:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12850:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12850:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12824:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12824:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12824:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12880:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13014:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12888:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12888:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12880:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12758:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12773:4:5",
														"type": ""
													}
												],
												"src": "12607:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13060:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13077:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13080:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13070:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13070:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13070:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13174:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13177:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13167:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13167:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13167:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13198:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13201:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13191:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13191:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13191:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13032:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13261:128:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13271:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13298:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13280:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13280:24:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13271:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13332:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13334:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13334:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13334:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13319:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13326:4:5",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13316:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13316:15:5"
															},
															"nodeType": "YulIf",
															"src": "13313:41:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13363:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13374:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13381:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13370:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13370:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13363:3:5"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13247:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13257:3:5",
														"type": ""
													}
												],
												"src": "13218:171:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13501:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13523:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13531:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13519:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13519:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13535:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13512:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13512:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13512:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13493:6:5",
														"type": ""
													}
												],
												"src": "13395:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13729:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13739:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13805:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13810:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13746:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13746:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13739:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13911:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "13822:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13822:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13822:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13924:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13935:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13940:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13931:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13931:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13924:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13717:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13725:3:5",
														"type": ""
													}
												],
												"src": "13583:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14126:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14136:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14148:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14159:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14144:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14144:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14136:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14183:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14194:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14179:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14179:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14202:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14208:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14198:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14198:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14172:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14172:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14172:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14228:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14362:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14236:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14236:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14228:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14106:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14121:4:5",
														"type": ""
													}
												],
												"src": "13955:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14438:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14449:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14465:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14459:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14459:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14449:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14421:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14431:6:5",
														"type": ""
													}
												],
												"src": "14380:98:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14579:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14596:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14601:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14589:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14589:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14589:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14617:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14636:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14641:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14632:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14632:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14617:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14551:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14556:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14567:11:5",
														"type": ""
													}
												],
												"src": "14484:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14748:270:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14758:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14804:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14772:31:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14772:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14762:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14819:77:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14884:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14889:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14826:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14826:70:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14819:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14931:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14938:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14927:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14927:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14945:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14950:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "14905:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14905:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14905:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14966:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14977:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15004:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "14982:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14982:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14973:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14973:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14966:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14729:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14736:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14744:3:5",
														"type": ""
													}
												],
												"src": "14658:360:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15224:440:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15234:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15246:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15257:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15242:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15242:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15234:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15315:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15328:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15339:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15324:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15324:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15271:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15271:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15271:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15396:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15409:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15420:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15405:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15405:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15352:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15352:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15352:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15478:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15491:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15502:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15487:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15487:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15434:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15434:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15434:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15527:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15538:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15523:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15523:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15547:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15553:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15543:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15543:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15516:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15516:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15516:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15573:84:5",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15643:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15652:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15581:61:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15581:76:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15573:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15172:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15184:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15192:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15200:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15208:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15219:4:5",
														"type": ""
													}
												],
												"src": "15024:640:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15732:79:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15742:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15757:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15751:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15751:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15742:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15799:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "15773:25:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15773:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15773:32:5"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "15710:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15718:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15726:5:5",
														"type": ""
													}
												],
												"src": "15670:141:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15893:273:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15939:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15941:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15941:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15941:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15914:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15923:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15910:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15910:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15935:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15906:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15906:32:5"
															},
															"nodeType": "YulIf",
															"src": "15903:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "16032:127:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16047:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16061:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16051:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16076:73:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16121:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16132:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16117:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16117:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16141:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "16086:30:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16086:63:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16076:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15863:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15874:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15886:6:5",
														"type": ""
													}
												],
												"src": "15817:349:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101145760003560e01c80636352211e116100a0578063a22cb46511610064578063a22cb4651461038a578063b88d4fde146103b3578063c87b56dd146103cf578063e985e9c51461040c578063f2fde38b1461044957610114565b80636352211e146102a357806370a08231146102e0578063715018a61461031d5780638da5cb5b1461033457806395d89b411461035f57610114565b806318160ddd116100e757806318160ddd146101da57806323b872dd1461020557806340c10f191461022157806342842e0e1461024a57806342966c681461026657610114565b806301ffc9a71461011957806306fdde0314610156578063081812fc14610181578063095ea7b3146101be575b600080fd5b34801561012557600080fd5b50610140600480360381019061013b9190611888565b610472565b60405161014d91906118d0565b60405180910390f35b34801561016257600080fd5b5061016b610504565b6040516101789190611984565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a391906119dc565b610596565b6040516101b59190611a4a565b60405180910390f35b6101d860048036038101906101d39190611a91565b6105f4565b005b3480156101e657600080fd5b506101ef610604565b6040516101fc9190611ae0565b60405180910390f35b61021f600480360381019061021a9190611afb565b61061b565b005b34801561022d57600080fd5b5061024860048036038101906102439190611a91565b6108df565b005b610264600480360381019061025f9190611afb565b6108f5565b005b34801561027257600080fd5b5061028d600480360381019061028891906119dc565b610915565b60405161029a9190611984565b60405180910390f35b3480156102af57600080fd5b506102ca60048036038101906102c591906119dc565b610965565b6040516102d79190611a4a565b60405180910390f35b3480156102ec57600080fd5b5061030760048036038101906103029190611b4e565b610977565b6040516103149190611ae0565b60405180910390f35b34801561032957600080fd5b50610332610a0f565b005b34801561034057600080fd5b50610349610a23565b6040516103569190611a4a565b60405180910390f35b34801561036b57600080fd5b50610374610a4d565b6040516103819190611984565b60405180910390f35b34801561039657600080fd5b506103b160048036038101906103ac9190611ba7565b610adf565b005b6103cd60048036038101906103c89190611d1c565b610bea565b005b3480156103db57600080fd5b506103f660048036038101906103f191906119dc565b610c3c565b6040516104039190611984565b60405180910390f35b34801561041857600080fd5b50610433600480360381019061042e9190611d9f565b610cba565b60405161044091906118d0565b60405180910390f35b34801561045557600080fd5b50610470600480360381019061046b9190611b4e565b610d4e565b005b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104cd57506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104fd5750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461051390611e0e565b80601f016020809104026020016040519081016040528092919081815260200182805461053f90611e0e565b801561058c5780601f106105615761010080835404028352916020019161058c565b820191906000526020600020905b81548152906001019060200180831161056f57829003601f168201915b5050505050905090565b60006105a182610dd2565b6105b6576105b563cf4700e460e01b610e4c565b5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61060082826001610e56565b5050565b600061060e610f85565b6001546000540303905090565b600061062682610f8a565b905073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff161693508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461069b5761069a63a114810060e01b610e4c565b5b6000806106a784611086565b915091506106bd81876106b86110ad565b6110b5565b6106e8576106d2866106cd6110ad565b610cba565b6106e7576106e66359c896be60e01b610e4c565b5b5b6106f586868660016110f9565b801561070057600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506107ce856107aa8888876110ff565b7c020000000000000000000000000000000000000000000000000000000017611127565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084161415610856576000600185019050600060046000838152602001908152602001600020541415610854576000548114610853578360046000838152602001908152602001600020819055505b5b505b600073ffffffffffffffffffffffffffffffffffffffff8673ffffffffffffffffffffffffffffffffffffffff161690508481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a460008114156108c9576108c863ea553b3460e01b610e4c565b5b6108d68787876001611152565b50505050505050565b6108e7611158565b6108f182826111d6565b5050565b61091083838360405180602001604052806000815250610bea565b505050565b606061091f611158565b6109288261133c565b6040518060400160405280600c81526020017f546f6b656e206275726e656400000000000000000000000000000000000000008152509050919050565b600061097082610f8a565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109be576109bd638f4eb60460e01b610e4c565b5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b610a17611158565b610a21600061134a565b565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060038054610a5c90611e0e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8890611e0e565b8015610ad55780601f10610aaa57610100808354040283529160200191610ad5565b820191906000526020600020905b815481529060010190602001808311610ab857829003601f168201915b5050505050905090565b8060076000610aec6110ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610b996110ad565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bde91906118d0565b60405180910390a35050565b610bf584848461061b565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610c3657610c2084848484611410565b610c3557610c3463d1a57ed660e01b610e4c565b5b5b50505050565b6060610c4782610dd2565b610c5c57610c5b63a14c4b5060e01b610e4c565b5b6000610c6661154f565b9050600081511415610c875760405180602001604052806000815250610cb2565b80610c918461156f565b604051602001610ca2929190611e7c565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610d56611158565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610dc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbd90611f12565b60405180910390fd5b610dcf8161134a565b50565b600081610ddd610f85565b11610e4757600054821015610e465760005b600060046000858152602001908152602001600020549150811415610e1f5782610e1890611f61565b9250610def565b60007c01000000000000000000000000000000000000000000000000000000008216149150505b5b919050565b8060005260046000fd5b6000610e6183610965565b9050818015610ea357508073ffffffffffffffffffffffffffffffffffffffff16610e8a6110ad565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610ecf57610eb981610eb46110ad565b610cba565b610ece57610ecd63cfb3b94260e01b610e4c565b5b5b836006600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a450505050565b600090565b600081610f95610f85565b1161107057600460008381526020019081526020016000205490506000811415611042576000548210610fd357610fd263df2d9b4260e01b610e4c565b5b5b60046000836001900393508381526020019081526020016000205490506000811415610fff5761103d565b60007c01000000000000000000000000000000000000000000000000000000008216141561102c57611081565b61103c63df2d9b4260e01b610e4c565b5b610fd4565b60007c01000000000000000000000000000000000000000000000000000000008216141561106f57611081565b5b61108063df2d9b4260e01b610e4c565b5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e86111168686846115c8565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b6111606115d1565b73ffffffffffffffffffffffffffffffffffffffff1661117e610a23565b73ffffffffffffffffffffffffffffffffffffffff16146111d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111cb90611fd7565b60405180910390fd5b565b60008054905060008214156111f6576111f563b562e8dd60e01b610e4c565b5b61120360008483856110f9565b6112238361121460008660006110ff565b61121d856115d9565b17611127565b6004600083815260200190815260200160002081905550600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff1616905060008114156112dc576112db632e07630060e01b610e4c565b5b6000838301905060008390505b808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4818160010191508114156112e957816000819055505050506113376000848385611152565b505050565b6113478160006115e9565b50565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026114366110ad565b8786866040518563ffffffff1660e01b8152600401611458949392919061204c565b602060405180830381600087803b15801561147257600080fd5b505af19250505080156114a357506040513d601f19601f820116820180604052508101906114a091906120ad565b60015b6114fc573d80600081146114d3576040519150601f19603f3d011682016040523d82523d6000602084013e6114d8565b606091505b506000815114156114f4576114f363d1a57ed660e01b610e4c565b5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b60606040518060600160405280602a81526020016120db602a9139905090565b606060a060405101806040526020810391506000825281835b6001156115b357600184039350600a81066030018453600a81049050806115ae576115b3565b611588565b50828103602084039350808452505050919050565b60009392505050565b600033905090565b60006001821460e11b9050919050565b60006115f483610f8a565b9050600081905060008061160786611086565b91509150841561164f57611623818461161e6110ad565b6110b5565b61164e57611638836116336110ad565b610cba565b61164d5761164c6359c896be60e01b610e4c565b5b5b5b61165d8360008860016110f9565b801561166857600082555b600160806001901b03600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550611710836116cd856000886110ff565b7c02000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000001717611127565b600460008881526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000085161415611798576000600187019050600060046000838152602001908152602001600020541415611796576000548114611795578460046000838152602001908152602001600020819055505b5b505b85600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611802836000886001611152565b600160008154809291906001019190505550505050505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61186581611830565b811461187057600080fd5b50565b6000813590506118828161185c565b92915050565b60006020828403121561189e5761189d611826565b5b60006118ac84828501611873565b91505092915050565b60008115159050919050565b6118ca816118b5565b82525050565b60006020820190506118e560008301846118c1565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561192557808201518184015260208101905061190a565b83811115611934576000848401525b50505050565b6000601f19601f8301169050919050565b6000611956826118eb565b61196081856118f6565b9350611970818560208601611907565b6119798161193a565b840191505092915050565b6000602082019050818103600083015261199e818461194b565b905092915050565b6000819050919050565b6119b9816119a6565b81146119c457600080fd5b50565b6000813590506119d6816119b0565b92915050565b6000602082840312156119f2576119f1611826565b5b6000611a00848285016119c7565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a3482611a09565b9050919050565b611a4481611a29565b82525050565b6000602082019050611a5f6000830184611a3b565b92915050565b611a6e81611a29565b8114611a7957600080fd5b50565b600081359050611a8b81611a65565b92915050565b60008060408385031215611aa857611aa7611826565b5b6000611ab685828601611a7c565b9250506020611ac7858286016119c7565b9150509250929050565b611ada816119a6565b82525050565b6000602082019050611af56000830184611ad1565b92915050565b600080600060608486031215611b1457611b13611826565b5b6000611b2286828701611a7c565b9350506020611b3386828701611a7c565b9250506040611b44868287016119c7565b9150509250925092565b600060208284031215611b6457611b63611826565b5b6000611b7284828501611a7c565b91505092915050565b611b84816118b5565b8114611b8f57600080fd5b50565b600081359050611ba181611b7b565b92915050565b60008060408385031215611bbe57611bbd611826565b5b6000611bcc85828601611a7c565b9250506020611bdd85828601611b92565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c298261193a565b810181811067ffffffffffffffff82111715611c4857611c47611bf1565b5b80604052505050565b6000611c5b61181c565b9050611c678282611c20565b919050565b600067ffffffffffffffff821115611c8757611c86611bf1565b5b611c908261193a565b9050602081019050919050565b82818337600083830152505050565b6000611cbf611cba84611c6c565b611c51565b905082815260208101848484011115611cdb57611cda611bec565b5b611ce6848285611c9d565b509392505050565b600082601f830112611d0357611d02611be7565b5b8135611d13848260208601611cac565b91505092915050565b60008060008060808587031215611d3657611d35611826565b5b6000611d4487828801611a7c565b9450506020611d5587828801611a7c565b9350506040611d66878288016119c7565b925050606085013567ffffffffffffffff811115611d8757611d8661182b565b5b611d9387828801611cee565b91505092959194509250565b60008060408385031215611db657611db5611826565b5b6000611dc485828601611a7c565b9250506020611dd585828601611a7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e2657607f821691505b60208210811415611e3a57611e39611ddf565b5b50919050565b600081905092915050565b6000611e56826118eb565b611e608185611e40565b9350611e70818560208601611907565b80840191505092915050565b6000611e888285611e4b565b9150611e948284611e4b565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611efc6026836118f6565b9150611f0782611ea0565b604082019050919050565b60006020820190508181036000830152611f2b81611eef565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f6c826119a6565b91506000821415611f8057611f7f611f32565b5b600182039050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611fc16020836118f6565b9150611fcc82611f8b565b602082019050919050565b60006020820190508181036000830152611ff081611fb4565b9050919050565b600081519050919050565b600082825260208201905092915050565b600061201e82611ff7565b6120288185612002565b9350612038818560208601611907565b6120418161193a565b840191505092915050565b60006080820190506120616000830187611a3b565b61206e6020830186611a3b565b61207b6040830185611ad1565b818103606083015261208d8184612013565b905095945050505050565b6000815190506120a78161185c565b92915050565b6000602082840312156120c3576120c2611826565b5b60006120d184828501612098565b9150509291505056fe68747470733a2f2f626f7265646170657961636874636c75622e636f6d2f6170692f6d7574616e74732fa264697066735822122014222ed7d63bf1b72668e74affd735624c555782de96434a19362b0257df25f364736f6c63430008080033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x449 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x35F JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x266 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x965 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x332 PUSH2 0xA0F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x349 PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x1BA7 JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1D9F JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x470 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH2 0xD4E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4CD JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4FD JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x513 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x53F SWAP1 PUSH2 0x1E0E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x58C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x561 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x58C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x56F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A1 DUP3 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0x5B6 JUMPI PUSH2 0x5B5 PUSH4 0xCF4700E4 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x600 DUP3 DUP3 PUSH1 0x1 PUSH2 0xE56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60E PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x626 DUP3 PUSH2 0xF8A JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP4 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x69B JUMPI PUSH2 0x69A PUSH4 0xA1148100 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6A7 DUP5 PUSH2 0x1086 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x6BD DUP2 DUP8 PUSH2 0x6B8 PUSH2 0x10AD JUMP JUMPDEST PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x6E8 JUMPI PUSH2 0x6D2 DUP7 PUSH2 0x6CD PUSH2 0x10AD JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x6E7 JUMPI PUSH2 0x6E6 PUSH4 0x59C896BE PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x6F5 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x10F9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x700 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x7CE DUP6 PUSH2 0x7AA DUP9 DUP9 DUP8 PUSH2 0x10FF JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0x1127 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND EQ ISZERO PUSH2 0x856 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x854 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x853 JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP1 POP DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x8C9 JUMPI PUSH2 0x8C8 PUSH4 0xEA553B34 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH2 0x8D6 DUP8 DUP8 DUP8 PUSH1 0x1 PUSH2 0x1152 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8E7 PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x8F1 DUP3 DUP3 PUSH2 0x11D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x910 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x91F PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x928 DUP3 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F6B656E206275726E65640000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x970 DUP3 PUSH2 0xF8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9BE JUMPI PUSH2 0x9BD PUSH4 0x8F4EB604 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA17 PUSH2 0x1158 JUMP JUMPDEST PUSH2 0xA21 PUSH1 0x0 PUSH2 0x134A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA5C SWAP1 PUSH2 0x1E0E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA88 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAAA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xAEC PUSH2 0x10AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB99 PUSH2 0x10AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBDE SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBF5 DUP5 DUP5 DUP5 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xC36 JUMPI PUSH2 0xC20 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0xC35 JUMPI PUSH2 0xC34 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC47 DUP3 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xC5C JUMPI PUSH2 0xC5B PUSH4 0xA14C4B50 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC66 PUSH2 0x154F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xC87 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCB2 JUMP JUMPDEST DUP1 PUSH2 0xC91 DUP5 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCA2 SWAP3 SWAP2 SWAP1 PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD56 PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBD SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDCF DUP2 PUSH2 0x134A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xDDD PUSH2 0xF85 JUMP JUMPDEST GT PUSH2 0xE47 JUMPI PUSH1 0x0 SLOAD DUP3 LT ISZERO PUSH2 0xE46 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP DUP2 EQ ISZERO PUSH2 0xE1F JUMPI DUP3 PUSH2 0xE18 SWAP1 PUSH2 0x1F61 JUMP JUMPDEST SWAP3 POP PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ SWAP2 POP POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE61 DUP4 PUSH2 0x965 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0xEA3 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE8A PUSH2 0x10AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xECF JUMPI PUSH2 0xEB9 DUP2 PUSH2 0xEB4 PUSH2 0x10AD JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH2 0xECE JUMPI PUSH2 0xECD PUSH4 0xCFB3B942 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST JUMPDEST DUP4 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xF95 PUSH2 0xF85 JUMP JUMPDEST GT PUSH2 0x1070 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1042 JUMPI PUSH1 0x0 SLOAD DUP3 LT PUSH2 0xFD3 JUMPI PUSH2 0xFD2 PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xFFF JUMPI PUSH2 0x103D JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0x102C JUMPI PUSH2 0x1081 JUMP JUMPDEST PUSH2 0x103C PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0x106F JUMPI PUSH2 0x1081 JUMP JUMPDEST JUMPDEST PUSH2 0x1080 PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0x1116 DUP7 DUP7 DUP5 PUSH2 0x15C8 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1160 PUSH2 0x15D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x117E PUSH2 0xA23 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CB SWAP1 PUSH2 0x1FD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x11F6 JUMPI PUSH2 0x11F5 PUSH4 0xB562E8DD PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH2 0x1203 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x10F9 JUMP JUMPDEST PUSH2 0x1223 DUP4 PUSH2 0x1214 PUSH1 0x0 DUP7 PUSH1 0x0 PUSH2 0x10FF JUMP JUMPDEST PUSH2 0x121D DUP6 PUSH2 0x15D9 JUMP JUMPDEST OR PUSH2 0x1127 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x40 PUSH1 0x1 SWAP1 SHL OR DUP3 MUL PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x12DC JUMPI PUSH2 0x12DB PUSH4 0x2E076300 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 DUP4 ADD SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP2 DUP2 PUSH1 0x1 ADD SWAP2 POP DUP2 EQ ISZERO PUSH2 0x12E9 JUMPI DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x1337 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x1152 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1347 DUP2 PUSH1 0x0 PUSH2 0x15E9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1436 PUSH2 0x10AD JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1458 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x204C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x14A3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14A0 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14FC JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14D3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x14F4 JUMPI PUSH2 0x14F3 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20DB PUSH1 0x2A SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x15B3 JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x15AE JUMPI PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x1588 JUMP JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH1 0xE1 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F4 DUP4 PUSH2 0xF8A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1607 DUP7 PUSH2 0x1086 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 ISZERO PUSH2 0x164F JUMPI PUSH2 0x1623 DUP2 DUP5 PUSH2 0x161E PUSH2 0x10AD JUMP JUMPDEST PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x164E JUMPI PUSH2 0x1638 DUP4 PUSH2 0x1633 PUSH2 0x10AD JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x164D JUMPI PUSH2 0x164C PUSH4 0x59C896BE PUSH1 0xE0 SHL PUSH2 0xE4C JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH2 0x165D DUP4 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH2 0x10F9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1668 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x80 PUSH1 0x1 SWAP1 SHL SUB PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1710 DUP4 PUSH2 0x16CD DUP6 PUSH1 0x0 DUP9 PUSH2 0x10FF JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 OR OR PUSH2 0x1127 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP6 AND EQ ISZERO PUSH2 0x1798 JUMPI PUSH1 0x0 PUSH1 0x1 DUP8 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x1796 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x1795 JUMPI DUP5 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP6 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1802 DUP4 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1865 DUP2 PUSH2 0x1830 JUMP JUMPDEST DUP2 EQ PUSH2 0x1870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1882 DUP2 PUSH2 0x185C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189E JUMPI PUSH2 0x189D PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18AC DUP5 DUP3 DUP6 ADD PUSH2 0x1873 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18CA DUP2 PUSH2 0x18B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1925 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x190A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1934 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1956 DUP3 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x1960 DUP2 DUP6 PUSH2 0x18F6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1970 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x1979 DUP2 PUSH2 0x193A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x199E DUP2 DUP5 PUSH2 0x194B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B9 DUP2 PUSH2 0x19A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x19C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19D6 DUP2 PUSH2 0x19B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F2 JUMPI PUSH2 0x19F1 PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A00 DUP5 DUP3 DUP6 ADD PUSH2 0x19C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A34 DUP3 PUSH2 0x1A09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A44 DUP2 PUSH2 0x1A29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6E DUP2 PUSH2 0x1A29 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A8B DUP2 PUSH2 0x1A65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA8 JUMPI PUSH2 0x1AA7 PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AB6 DUP6 DUP3 DUP7 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AC7 DUP6 DUP3 DUP7 ADD PUSH2 0x19C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADA DUP2 PUSH2 0x19A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B14 JUMPI PUSH2 0x1B13 PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B22 DUP7 DUP3 DUP8 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B33 DUP7 DUP3 DUP8 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B44 DUP7 DUP3 DUP8 ADD PUSH2 0x19C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B64 JUMPI PUSH2 0x1B63 PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B72 DUP5 DUP3 DUP6 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B84 DUP2 PUSH2 0x18B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BA1 DUP2 PUSH2 0x1B7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BBE JUMPI PUSH2 0x1BBD PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BCC DUP6 DUP3 DUP7 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BDD DUP6 DUP3 DUP7 ADD PUSH2 0x1B92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1C29 DUP3 PUSH2 0x193A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1C48 JUMPI PUSH2 0x1C47 PUSH2 0x1BF1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5B PUSH2 0x181C JUMP JUMPDEST SWAP1 POP PUSH2 0x1C67 DUP3 DUP3 PUSH2 0x1C20 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C87 JUMPI PUSH2 0x1C86 PUSH2 0x1BF1 JUMP JUMPDEST JUMPDEST PUSH2 0x1C90 DUP3 PUSH2 0x193A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CBF PUSH2 0x1CBA DUP5 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x1C51 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1CDB JUMPI PUSH2 0x1CDA PUSH2 0x1BEC JUMP JUMPDEST JUMPDEST PUSH2 0x1CE6 DUP5 DUP3 DUP6 PUSH2 0x1C9D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D03 JUMPI PUSH2 0x1D02 PUSH2 0x1BE7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D13 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D36 JUMPI PUSH2 0x1D35 PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D44 DUP8 DUP3 DUP9 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D55 DUP8 DUP3 DUP9 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D66 DUP8 DUP3 DUP9 ADD PUSH2 0x19C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D87 JUMPI PUSH2 0x1D86 PUSH2 0x182B JUMP JUMPDEST JUMPDEST PUSH2 0x1D93 DUP8 DUP3 DUP9 ADD PUSH2 0x1CEE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB6 JUMPI PUSH2 0x1DB5 PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DC4 DUP6 DUP3 DUP7 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DD5 DUP6 DUP3 DUP7 ADD PUSH2 0x1A7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E26 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1E3A JUMPI PUSH2 0x1E39 PUSH2 0x1DDF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E56 DUP3 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x1E60 DUP2 DUP6 PUSH2 0x1E40 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E70 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1907 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E88 DUP3 DUP6 PUSH2 0x1E4B JUMP JUMPDEST SWAP2 POP PUSH2 0x1E94 DUP3 DUP5 PUSH2 0x1E4B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFC PUSH1 0x26 DUP4 PUSH2 0x18F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F07 DUP3 PUSH2 0x1EA0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F2B DUP2 PUSH2 0x1EEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F6C DUP3 PUSH2 0x19A6 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1F80 JUMPI PUSH2 0x1F7F PUSH2 0x1F32 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC1 PUSH1 0x20 DUP4 PUSH2 0x18F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FCC DUP3 PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FF0 DUP2 PUSH2 0x1FB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201E DUP3 PUSH2 0x1FF7 JUMP JUMPDEST PUSH2 0x2028 DUP2 DUP6 PUSH2 0x2002 JUMP JUMPDEST SWAP4 POP PUSH2 0x2038 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x2041 DUP2 PUSH2 0x193A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2061 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0x206E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A3B JUMP JUMPDEST PUSH2 0x207B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AD1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x208D DUP2 DUP5 PUSH2 0x2013 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20A7 DUP2 PUSH2 0x185C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C3 JUMPI PUSH2 0x20C2 PUSH2 0x1826 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20D1 DUP5 DUP3 DUP6 ADD PUSH2 0x2098 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID PUSH9 0x747470733A2F2F626F PUSH19 0x65646170657961636874636C75622E636F6D2F PUSH2 0x7069 0x2F PUSH14 0x7574616E74732FA2646970667358 0x22 SLT KECCAK256 EQ 0x22 0x2E 0xD7 0xD6 EXTCODESIZE CALL 0xB7 0x26 PUSH9 0xE74AFFD735624C5557 DUP3 0xDE SWAP7 NUMBER 0x4A NOT CALLDATASIZE 0x2B MUL JUMPI 0xDF 0x25 RETURN PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ",
							"sourceMap": "197:933:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9164:630:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10048:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16911:223;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16639:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5894:317;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20546:3447;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;846:138:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24084:187:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;990:137:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11409:150:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7045:239;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10217:102:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17461:231;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24852:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;518:320:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17842:162:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9164:630:3;9249:4;9582:10;9567:25;;:11;:25;;;;:101;;;;9658:10;9643:25;;:11;:25;;;;9567:101;:177;;;;9734:10;9719:25;;:11;:25;;;;9567:177;9548:196;;9164:630;;;:::o;10048:98::-;10102:13;10134:5;10127:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10048:98;:::o;16911:223::-;16987:7;17011:16;17019:7;17011;:16::i;:::-;17006:73;;17029:50;17037:41;;;17029:7;:50::i;:::-;17006:73;17097:15;:24;17113:7;17097:24;;;;;;;;;;;:30;;;;;;;;;;;;17090:37;;16911:223;;;:::o;16639:122::-;16727:27;16736:2;16740:7;16749:4;16727:8;:27::i;:::-;16639:122;;:::o;5894:317::-;5955:7;6179:15;:13;:15::i;:::-;6164:12;;6148:13;;:28;:46;6141:53;;5894:317;:::o;20546:3447::-;20683:27;20713;20732:7;20713:18;:27::i;:::-;20683:57;;2785:14;20881:4;20865:22;;:41;20842:66;;20964:4;20923:45;;20939:19;20923:45;;;20919:95;;20970:44;20978:35;;;20970:7;:44::i;:::-;20919:95;21026:27;21055:23;21082:35;21109:7;21082:26;:35::i;:::-;21025:92;;;;21214:68;21239:15;21256:4;21262:19;:17;:19::i;:::-;21214:24;:68::i;:::-;21209:188;;21301:43;21318:4;21324:19;:17;:19::i;:::-;21301:16;:43::i;:::-;21296:101;;21346:51;21354:42;;;21346:7;:51::i;:::-;21296:101;21209:188;21408:43;21430:4;21436:2;21440:7;21449:1;21408:21;:43::i;:::-;21540:15;21537:157;;;21678:1;21657:19;21650:30;21537:157;22066:18;:24;22085:4;22066:24;;;;;;;;;;;;;;;;22064:26;;;;;;;;;;;;22134:18;:22;22153:2;22134:22;;;;;;;;;;;;;;;;22132:24;;;;;;;;;;;22449:143;22485:2;22533:45;22548:4;22554:2;22558:19;22533:14;:45::i;:::-;2392:8;22505:73;22449:18;:143::i;:::-;22420:17;:26;22438:7;22420:26;;;;;;;;;;;:172;;;;22760:1;2392:8;22709:19;:47;:52;22705:617;;;22781:19;22813:1;22803:7;:11;22781:33;;22968:1;22934:17;:30;22952:11;22934:30;;;;;;;;;;;;:35;22930:378;;;23070:13;;23055:11;:28;23051:239;;23248:19;23215:17;:30;23233:11;23215:30;;;;;;;;;;;:52;;;;23051:239;22930:378;22763:559;22705:617;23431:16;2785:14;23466:2;23450:20;;:39;23431:58;;23821:7;23786:8;23753:4;23696:25;23642:1;23586;23564:292;23891:1;23879:8;:13;23875:58;;;23894:39;23902:30;;;23894:7;:39::i;:::-;23875:58;23944:42;23965:4;23971:2;23975:7;23984:1;23944:20;:42::i;:::-;20673:3320;;;;20546:3447;;;:::o;846:138:2:-;1094:13:0;:11;:13::i;:::-;941:19:2::1;947:2;951:8;941:5;:19::i;:::-;846:138:::0;;:::o;24084:187:3:-;24225:39;24242:4;24248:2;24252:7;24225:39;;;;;;;;;;;;:16;:39::i;:::-;24084:187;;;:::o;990:137:2:-;1047:13;1094::0;:11;:13::i;:::-;1073:14:2::1;1079:7;1073:5;:14::i;:::-;1098:21;;;;;;;;;;;;;;;;::::0;::::1;;990:137:::0;;;:::o;11409:150:3:-;11481:7;11523:27;11542:7;11523:18;:27::i;:::-;11500:52;;11409:150;;;:::o;7045:239::-;7117:7;7157:1;7140:19;;:5;:19;;;7136:69;;;7161:44;7169:35;;;7161:7;:44::i;:::-;7136:69;1360:13;7222:18;:25;7241:5;7222:25;;;;;;;;;;;;;;;;:55;7215:62;;7045:239;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;10217:102:3:-;10273:13;10305:7;10298:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10217:102;:::o;17461:231::-;17607:8;17555:18;:39;17574:19;:17;:19::i;:::-;17555:39;;;;;;;;;;;;;;;:49;17595:8;17555:49;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;17666:8;17630:55;;17645:19;:17;:19::i;:::-;17630:55;;;17676:8;17630:55;;;;;;:::i;:::-;;;;;;;;17461:231;;:::o;24852:405::-;25021:31;25034:4;25040:2;25044:7;25021:12;:31::i;:::-;25084:1;25066:2;:14;;;:19;25062:189;;25104:56;25135:4;25141:2;25145:7;25154:5;25104:30;:56::i;:::-;25099:152;;25180:56;25188:47;;;25180:7;:56::i;:::-;25099:152;25062:189;24852:405;;;;:::o;518:320:2:-;584:13;615:16;623:7;615;:16::i;:::-;610:68;;633:45;641:36;;;633:7;:45::i;:::-;610:68;691:21;715:10;:8;:10::i;:::-;691:34;;768:1;749:7;743:21;:26;;:87;;;;;;;;;;;;;;;;;796:7;805:18;815:7;805:9;:18::i;:::-;779:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;743:87;736:94;;;518:320;;;:::o;17842:162:3:-;17939:4;17962:18;:25;17981:5;17962:25;;;;;;;;;;;;;;;:35;17988:8;17962:35;;;;;;;;;;;;;;;;;;;;;;;;;17955:42;;17842:162;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;18253:360:3:-;18318:11;18364:7;18345:15;:13;:15::i;:::-;:26;18341:266;;18401:13;;18391:7;:23;18387:210;;;18434:14;18466:60;18514:1;18483:17;:26;18501:7;18483:26;;;;;;;;;;;;18474:35;;;18473:42;18466:60;;;18517:9;;;;:::i;:::-;;;18466:60;;;18581:1;2118:8;18553:6;:24;:29;18544:38;;18416:181;18387:210;18341:266;18253:360;;;:::o;43371:160::-;43470:13;43464:4;43457:27;43510:4;43504;43497:18;35019:460;35143:13;35159:16;35167:7;35159;:16::i;:::-;35143:32;;35190:13;:45;;;;;35230:5;35207:28;;:19;:17;:19::i;:::-;:28;;;;35190:45;35186:198;;;35254:44;35271:5;35278:19;:17;:19::i;:::-;35254:16;:44::i;:::-;35249:135;;35318:51;35326:42;;;35318:7;:51::i;:::-;35249:135;35186:198;35427:2;35394:15;:24;35410:7;35394:24;;;;;;;;;;;:30;;;:35;;;;;;;;;;;;;;;;;;35464:7;35460:2;35444:28;;35453:5;35444:28;;;;;;;;;;;;35133:346;35019:460;;;:::o;5426:90::-;5482:7;5426:90;:::o;12850:1978::-;12917:14;12966:7;12947:15;:13;:15::i;:::-;:26;12943:1822;;12998:17;:26;13016:7;12998:26;;;;;;;;;;;;12989:35;;13132:1;13122:6;:11;13118:1270;;;13168:13;;13157:7;:24;13153:77;;13183:47;13191:38;;;13183:7;:47::i;:::-;13153:77;13777:597;13853:17;:28;13871:9;;;;;;;13853:28;;;;;;;;;;;;13844:37;;13939:1;13929:6;:11;13925:25;;;13942:8;;13925:25;14004:1;2118:8;13976:6;:24;:29;13972:48;;;14007:13;;13972:48;14308:47;14316:38;;;14308:7;:47::i;:::-;13777:597;;;13118:1270;14738:1;2118:8;14710:6;:24;:29;14706:48;;;14741:13;;14706:48;12943:1822;14774:47;14782:38;;;14774:7;:47::i;:::-;12850:1978;;;;:::o;19471:474::-;19570:27;19599:23;19638:38;19679:15;:24;19695:7;19679:24;;;;;;;;;;;19638:65;;19853:18;19830:41;;19909:19;19903:26;19884:45;;19816:123;19471:474;;;:::o;41401:103::-;41461:7;41487:10;41480:17;;41401:103;:::o;18717:646::-;18862:11;19024:16;19017:5;19013:28;19004:37;;19182:16;19171:9;19167:32;19154:45;;19330:15;19319:9;19316:30;19308:5;19297:9;19294:20;19291:56;19281:66;;18717:646;;;;;:::o;25901:154::-;;;;;:::o;40728:304::-;40859:7;40878:16;2513:3;40904:19;:41;;40878:68;;2513:3;40971:31;40982:4;40988:2;40992:9;40971:10;:31::i;:::-;40963:40;;:62;;40956:69;;;40728:304;;;;;:::o;15361:443::-;15441:14;15606:16;15599:5;15595:28;15586:37;;15781:5;15767:11;15742:23;15738:41;15735:52;15728:5;15725:63;15715:73;;15361:443;;;;:::o;26702:153::-;;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;28402:2251:3:-;28474:20;28497:13;;28474:36;;28536:1;28524:8;:13;28520:53;;;28539:34;28547:25;;;28539:7;:34::i;:::-;28520:53;28584:61;28614:1;28618:2;28622:12;28636:8;28584:21;:61::i;:::-;29107:136;29143:2;29196:33;29219:1;29223:2;29227:1;29196:14;:33::i;:::-;29163:30;29184:8;29163:20;:30::i;:::-;:66;29107:18;:136::i;:::-;29073:17;:31;29091:12;29073:31;;;;;;;;;;;:170;;;;29523:1;1495:2;29493:1;:26;;29492:32;29480:8;:45;29454:18;:22;29473:2;29454:22;;;;;;;;;;;;;;;;:71;;;;;;;;;;;29633:16;2785:14;29668:2;29652:20;;:39;29633:58;;29722:1;29710:8;:13;29706:54;;;29725:35;29733:26;;;29725:7;:35::i;:::-;29706:54;29775:11;29804:8;29789:12;:23;29775:37;;29826:15;29844:12;29826:30;;29871:662;30281:7;30238:8;30194:1;30129:25;30067:1;30003;29973:351;30528:3;30515:9;;;;;;:16;;29871:662;;30563:3;30547:13;:19;;;;28828:1749;;;30586:60;30615:1;30619:2;30623:12;30637:8;30586:20;:60::i;:::-;28464:2189;28402:2251;;:::o;35737:87::-;35796:21;35802:7;35811:5;35796;:21::i;:::-;35737:87;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;27283:673:3:-;27441:4;27486:2;27461:45;;;27507:19;:17;:19::i;:::-;27528:4;27534:7;27543:5;27461:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;27457:493;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27756:1;27739:6;:13;:18;27735:113;;;27777:56;27785:47;;;27777:7;:56::i;:::-;27735:113;27918:6;27912:13;27903:6;27899:2;27895:15;27888:38;27457:493;27627:54;;;27617:64;;;:6;:64;;;;27610:71;;;27283:673;;;;;;:::o;373:137:2:-;425:13;451:51;;;;;;;;;;;;;;;;;;;373:137;:::o;41601:1708:3:-;41666:17;42094:4;42087;42081:11;42077:22;42184:1;42178:4;42171:15;42257:4;42254:1;42250:12;42243:19;;42337:1;42332:3;42325:14;42438:3;42672:5;42654:419;42680:1;42654:419;;;42719:1;42714:3;42710:11;42703:18;;42887:2;42881:4;42877:13;42873:2;42869:22;42864:3;42856:36;42979:2;42973:4;42969:13;42961:21;;43044:4;43034:25;;43052:5;;43034:25;42654:419;;;42658:21;43110:3;43105;43101:13;43223:4;43218:3;43214:14;43207:21;;43286:6;43281:3;43274:19;41704:1599;;;41601:1708;;;:::o;40439:143::-;40572:6;40439:143;;;;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;15901:318:3:-;15971:14;16200:1;16190:8;16187:15;16161:24;16157:46;16147:56;;15901:318;;;:::o;36041:3024::-;36120:27;36150;36169:7;36150:18;:27::i;:::-;36120:57;;36188:12;36219:19;36188:52;;36252:27;36281:23;36308:35;36335:7;36308:26;:35::i;:::-;36251:92;;;;36358:13;36354:321;;;36477:68;36502:15;36519:4;36525:19;:17;:19::i;:::-;36477:24;:68::i;:::-;36472:192;;36568:43;36585:4;36591:19;:17;:19::i;:::-;36568:16;:43::i;:::-;36563:101;;36613:51;36621:42;;;36613:7;:51::i;:::-;36563:101;36472:192;36354:321;36685:51;36707:4;36721:1;36725:7;36734:1;36685:21;:51::i;:::-;36825:15;36822:157;;;36963:1;36942:19;36935:30;36822:157;37627:1;1619:3;37597:1;:26;;37596:32;37568:18;:24;37587:4;37568:24;;;;;;;;;;;;;;;;:60;;;;;;;;;;;37888:173;37924:4;37994:53;38009:4;38023:1;38027:19;37994:14;:53::i;:::-;2392:8;2118;37947:43;37946:101;37888:18;:173::i;:::-;37859:17;:26;37877:7;37859:26;;;;;;;;;;;:202;;;;38229:1;2392:8;38178:19;:47;:52;38174:617;;;38250:19;38282:1;38272:7;:11;38250:33;;38437:1;38403:17;:30;38421:11;38403:30;;;;;;;;;;;;:35;38399:378;;;38539:13;;38524:11;:28;38520:239;;38717:19;38684:17;:30;38702:11;38684:30;;;;;;;;;;;:52;;;;38520:239;38399:378;38232:559;38174:617;38843:7;38839:1;38816:35;;38825:4;38816:35;;;;;;;;;;;;38861:50;38882:4;38896:1;38900:7;38909:1;38861:20;:50::i;:::-;39034:12;;:14;;;;;;;;;;;;;36110:2955;;;;36041:3024;;:::o;7:75:5:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:118::-;5025:24;5043:5;5025:24;:::i;:::-;5020:3;5013:37;4938:118;;:::o;5062:222::-;5155:4;5193:2;5182:9;5178:18;5170:26;;5206:71;5274:1;5263:9;5259:17;5250:6;5206:71;:::i;:::-;5062:222;;;;:::o;5290:619::-;5367:6;5375;5383;5432:2;5420:9;5411:7;5407:23;5403:32;5400:119;;;5438:79;;:::i;:::-;5400:119;5558:1;5583:53;5628:7;5619:6;5608:9;5604:22;5583:53;:::i;:::-;5573:63;;5529:117;5685:2;5711:53;5756:7;5747:6;5736:9;5732:22;5711:53;:::i;:::-;5701:63;;5656:118;5813:2;5839:53;5884:7;5875:6;5864:9;5860:22;5839:53;:::i;:::-;5829:63;;5784:118;5290:619;;;;;:::o;5915:329::-;5974:6;6023:2;6011:9;6002:7;5998:23;5994:32;5991:119;;;6029:79;;:::i;:::-;5991:119;6149:1;6174:53;6219:7;6210:6;6199:9;6195:22;6174:53;:::i;:::-;6164:63;;6120:117;5915:329;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:148::-;11128:11;11165:3;11150:18;;11026:148;;;;:::o;11180:377::-;11286:3;11314:39;11347:5;11314:39;:::i;:::-;11369:89;11451:6;11446:3;11369:89;:::i;:::-;11362:96;;11467:52;11512:6;11507:3;11500:4;11493:5;11489:16;11467:52;:::i;:::-;11544:6;11539:3;11535:16;11528:23;;11290:267;11180:377;;;;:::o;11563:435::-;11743:3;11765:95;11856:3;11847:6;11765:95;:::i;:::-;11758:102;;11877:95;11968:3;11959:6;11877:95;:::i;:::-;11870:102;;11989:3;11982:10;;11563:435;;;;;:::o;12004:225::-;12144:34;12140:1;12132:6;12128:14;12121:58;12213:8;12208:2;12200:6;12196:15;12189:33;12004:225;:::o;12235:366::-;12377:3;12398:67;12462:2;12457:3;12398:67;:::i;:::-;12391:74;;12474:93;12563:3;12474:93;:::i;:::-;12592:2;12587:3;12583:12;12576:19;;12235:366;;;:::o;12607:419::-;12773:4;12811:2;12800:9;12796:18;12788:26;;12860:9;12854:4;12850:20;12846:1;12835:9;12831:17;12824:47;12888:131;13014:4;12888:131;:::i;:::-;12880:139;;12607:419;;;:::o;13032:180::-;13080:77;13077:1;13070:88;13177:4;13174:1;13167:15;13201:4;13198:1;13191:15;13218:171;13257:3;13280:24;13298:5;13280:24;:::i;:::-;13271:33;;13326:4;13319:5;13316:15;13313:41;;;13334:18;;:::i;:::-;13313:41;13381:1;13374:5;13370:13;13363:20;;13218:171;;;:::o;13395:182::-;13535:34;13531:1;13523:6;13519:14;13512:58;13395:182;:::o;13583:366::-;13725:3;13746:67;13810:2;13805:3;13746:67;:::i;:::-;13739:74;;13822:93;13911:3;13822:93;:::i;:::-;13940:2;13935:3;13931:12;13924:19;;13583:366;;;:::o;13955:419::-;14121:4;14159:2;14148:9;14144:18;14136:26;;14208:9;14202:4;14198:20;14194:1;14183:9;14179:17;14172:47;14236:131;14362:4;14236:131;:::i;:::-;14228:139;;13955:419;;;:::o;14380:98::-;14431:6;14465:5;14459:12;14449:22;;14380:98;;;:::o;14484:168::-;14567:11;14601:6;14596:3;14589:19;14641:4;14636:3;14632:14;14617:29;;14484:168;;;;:::o;14658:360::-;14744:3;14772:38;14804:5;14772:38;:::i;:::-;14826:70;14889:6;14884:3;14826:70;:::i;:::-;14819:77;;14905:52;14950:6;14945:3;14938:4;14931:5;14927:16;14905:52;:::i;:::-;14982:29;15004:6;14982:29;:::i;:::-;14977:3;14973:39;14966:46;;14748:270;14658:360;;;;:::o;15024:640::-;15219:4;15257:3;15246:9;15242:19;15234:27;;15271:71;15339:1;15328:9;15324:17;15315:6;15271:71;:::i;:::-;15352:72;15420:2;15409:9;15405:18;15396:6;15352:72;:::i;:::-;15434;15502:2;15491:9;15487:18;15478:6;15434:72;:::i;:::-;15553:9;15547:4;15543:20;15538:2;15527:9;15523:18;15516:48;15581:76;15652:4;15643:6;15581:76;:::i;:::-;15573:84;;15024:640;;;;;;;:::o;15670:141::-;15726:5;15757:6;15751:13;15742:22;;15773:32;15799:5;15773:32;:::i;:::-;15670:141;;;;:::o;15817:349::-;15886:6;15935:2;15923:9;15914:7;15910:23;15906:32;15903:119;;;15941:79;;:::i;:::-;15903:119;16061:1;16086:63;16141:7;16132:6;16121:9;16117:22;16086:63;:::i;:::-;16076:73;;16032:127;15817:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1701200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2930",
								"burn(uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2611",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "30465",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "745",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4599",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30857"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 252,
									"end": 363,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 252,
									"end": 363,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 252,
									"end": 363,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 252,
									"end": 363,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 363,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 252,
									"end": 363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 363,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 252,
									"end": 363,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 252,
									"end": 363,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 363,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 252,
									"end": 363,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 3,
									"value": "4B616947656E0000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 3,
									"value": "4B61474500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5020,
									"end": 5025,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5017,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5045,
									"end": 5052,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5042,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5062,
									"end": 5075,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 321,
									"end": 351,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 340,
									"end": 350,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 321,
									"end": 339,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 321,
									"end": 339,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 321,
									"end": 339,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 321,
									"end": 351,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 321,
									"end": 351,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 321,
									"end": 351,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 321,
									"end": 351,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 321,
									"end": 351,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5482,
									"end": 5489,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 193,
									"end": 513,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 193,
									"end": 513,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 237,
									"end": 243,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 274,
									"end": 275,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 268,
									"end": 272,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 264,
									"end": 276,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 254,
									"end": 276,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 254,
									"end": 276,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 321,
									"end": 322,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 315,
									"end": 319,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 311,
									"end": 323,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 342,
									"end": 360,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 332,
									"end": 413,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 332,
									"end": 413,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 398,
									"end": 402,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 390,
									"end": 396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 386,
									"end": 403,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 376,
									"end": 403,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 376,
									"end": 403,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 332,
									"end": 413,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 332,
									"end": 413,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 460,
									"end": 462,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 452,
									"end": 458,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 449,
									"end": 463,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 429,
									"end": 447,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 426,
									"end": 464,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 423,
									"end": 507,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 423,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 423,
									"end": 507,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 479,
									"end": 497,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 479,
									"end": 497,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 479,
									"end": 497,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 479,
									"end": 497,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 479,
									"end": 497,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 423,
									"end": 507,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 423,
									"end": 507,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 244,
									"end": 513,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 193,
									"end": 513,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 193,
									"end": 513,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 193,
									"end": 513,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 193,
									"end": 513,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 1130,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122014222ed7d63bf1b72668e74affd735624c555782de96434a19362b0257df25f364736f6c63430008080033",
									".code": [
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "B88D4FDE"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "C87B56DD"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "40C10F19"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "42842E0E"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "42966C68"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "81812FC"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 1130,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 846,
											"end": 984,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 846,
											"end": 984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 846,
											"end": 984,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 984,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 846,
											"end": 984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 846,
											"end": 984,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 846,
											"end": 984,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 846,
											"end": 984,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 846,
											"end": 984,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 846,
											"end": 984,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 846,
											"end": 984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 846,
											"end": 984,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 846,
											"end": 984,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 846,
											"end": 984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 518,
											"end": 838,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9249,
											"end": 9253,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9582,
											"end": 9592,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9578,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9658,
											"end": 9668,
											"name": "PUSH",
											"source": 3,
											"value": "80AC58CD"
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 9643,
											"end": 9654,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9734,
											"end": 9744,
											"name": "PUSH",
											"source": 3,
											"value": "5B5E139F"
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 9719,
											"end": 9730,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 9744,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 9744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10102,
											"end": 10115,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 10134,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16987,
											"end": 16994,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17011,
											"end": 17027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 17019,
											"end": 17026,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17011,
											"end": 17018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 17011,
											"end": 17027,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17011,
											"end": 17027,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 17011,
											"end": 17027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17006,
											"end": 17079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 17006,
											"end": 17079,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17029,
											"end": 17079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 17037,
											"end": 17078,
											"name": "PUSH",
											"source": 3,
											"value": "CF4700E4"
										},
										{
											"begin": 17037,
											"end": 17078,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 17037,
											"end": 17078,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 17029,
											"end": 17036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 17029,
											"end": 17079,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17029,
											"end": 17079,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 17029,
											"end": 17079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17006,
											"end": 17079,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 17006,
											"end": 17079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17112,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17113,
											"end": 17120,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17090,
											"end": 17127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17090,
											"end": 17127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16727,
											"end": 16754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 16736,
											"end": 16738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16740,
											"end": 16747,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16749,
											"end": 16753,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 16727,
											"end": 16735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 16727,
											"end": 16754,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16727,
											"end": 16754,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 16727,
											"end": 16754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5955,
											"end": 5962,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 6179,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6148,
											"end": 6161,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6161,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6148,
											"end": 6176,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6148,
											"end": 6194,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20683,
											"end": 20710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20713,
											"end": 20740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 20732,
											"end": 20739,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20713,
											"end": 20731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 20713,
											"end": 20740,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20713,
											"end": 20740,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 20713,
											"end": 20740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20683,
											"end": 20740,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20683,
											"end": 20740,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20881,
											"end": 20885,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 20865,
											"end": 20887,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20865,
											"end": 20887,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20865,
											"end": 20906,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20842,
											"end": 20908,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 20842,
											"end": 20908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20964,
											"end": 20968,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 20923,
											"end": 20968,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20923,
											"end": 20968,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20939,
											"end": 20958,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20923,
											"end": 20968,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20923,
											"end": 20968,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20923,
											"end": 20968,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 20919,
											"end": 21014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 20919,
											"end": 21014,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 20970,
											"end": 21014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 20978,
											"end": 21013,
											"name": "PUSH",
											"source": 3,
											"value": "A1148100"
										},
										{
											"begin": 20978,
											"end": 21013,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 20978,
											"end": 21013,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 20970,
											"end": 20977,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 20970,
											"end": 21014,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20970,
											"end": 21014,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 20970,
											"end": 21014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20919,
											"end": 21014,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 20919,
											"end": 21014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21026,
											"end": 21053,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21055,
											"end": 21078,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21082,
											"end": 21117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 21109,
											"end": 21116,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 21082,
											"end": 21108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 21082,
											"end": 21117,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21082,
											"end": 21117,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 21082,
											"end": 21117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21214,
											"end": 21282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 21239,
											"end": 21254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21256,
											"end": 21260,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 21262,
											"end": 21281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 21262,
											"end": 21279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 21262,
											"end": 21281,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21262,
											"end": 21281,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 21262,
											"end": 21281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21214,
											"end": 21238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 21214,
											"end": 21282,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21214,
											"end": 21282,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 21214,
											"end": 21282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21209,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 21209,
											"end": 21397,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 21301,
											"end": 21344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 21318,
											"end": 21322,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 21324,
											"end": 21343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 21324,
											"end": 21341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 21324,
											"end": 21343,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21324,
											"end": 21343,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 21324,
											"end": 21343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21301,
											"end": 21317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 21301,
											"end": 21344,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21301,
											"end": 21344,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 21301,
											"end": 21344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21296,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 21296,
											"end": 21397,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 21346,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 21354,
											"end": 21396,
											"name": "PUSH",
											"source": 3,
											"value": "59C896BE"
										},
										{
											"begin": 21354,
											"end": 21396,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 21354,
											"end": 21396,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 21346,
											"end": 21353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 21346,
											"end": 21397,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21346,
											"end": 21397,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 21346,
											"end": 21397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21296,
											"end": 21397,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 21296,
											"end": 21397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21209,
											"end": 21397,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 21209,
											"end": 21397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21408,
											"end": 21451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 21430,
											"end": 21434,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 21436,
											"end": 21438,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 21440,
											"end": 21447,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 21449,
											"end": 21450,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 21408,
											"end": 21429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 21408,
											"end": 21451,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21408,
											"end": 21451,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 21408,
											"end": 21451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21540,
											"end": 21555,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21537,
											"end": 21694,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 21537,
											"end": 21694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 21537,
											"end": 21694,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 21678,
											"end": 21679,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21657,
											"end": 21676,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 21650,
											"end": 21680,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 21537,
											"end": 21694,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 21537,
											"end": 21694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22084,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22085,
											"end": 22089,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22152,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22153,
											"end": 22155,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22449,
											"end": 22592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 22485,
											"end": 22487,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 22548,
											"end": 22552,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 22554,
											"end": 22556,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 22558,
											"end": 22577,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 22533,
											"end": 22578,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 22533,
											"end": 22578,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 22533,
											"end": 22578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 3,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22505,
											"end": 22578,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 22449,
											"end": 22467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 22449,
											"end": 22592,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 22449,
											"end": 22592,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 22449,
											"end": 22592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22437,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22438,
											"end": 22445,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22592,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22592,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22592,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22760,
											"end": 22761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 3,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22709,
											"end": 22728,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 22709,
											"end": 22756,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22709,
											"end": 22761,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 22705,
											"end": 23322,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 22705,
											"end": 23322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 22705,
											"end": 23322,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 22781,
											"end": 22800,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22813,
											"end": 22814,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 22803,
											"end": 22810,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 22803,
											"end": 22814,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22781,
											"end": 22814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22781,
											"end": 22814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22968,
											"end": 22969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22934,
											"end": 22951,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22952,
											"end": 22963,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22969,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 22930,
											"end": 23308,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 22930,
											"end": 23308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 22930,
											"end": 23308,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 23070,
											"end": 23083,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23070,
											"end": 23083,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 23055,
											"end": 23066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23055,
											"end": 23083,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 23051,
											"end": 23290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 23051,
											"end": 23290,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 23248,
											"end": 23267,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23232,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23233,
											"end": 23244,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23267,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23267,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23267,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23267,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23051,
											"end": 23290,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 23051,
											"end": 23290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22930,
											"end": 23308,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 22930,
											"end": 23308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22763,
											"end": 23322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22705,
											"end": 23322,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 22705,
											"end": 23322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23431,
											"end": 23447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23466,
											"end": 23468,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 23450,
											"end": 23470,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23450,
											"end": 23470,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23450,
											"end": 23489,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23431,
											"end": 23489,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23431,
											"end": 23489,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23821,
											"end": 23828,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 23786,
											"end": 23794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23753,
											"end": 23757,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 23696,
											"end": 23721,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 23642,
											"end": 23643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23586,
											"end": 23587,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23564,
											"end": 23856,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 23891,
											"end": 23892,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23879,
											"end": 23887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23879,
											"end": 23892,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 23875,
											"end": 23933,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 23875,
											"end": 23933,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 23875,
											"end": 23933,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 23894,
											"end": 23933,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 23902,
											"end": 23932,
											"name": "PUSH",
											"source": 3,
											"value": "EA553B34"
										},
										{
											"begin": 23902,
											"end": 23932,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 23902,
											"end": 23932,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 23894,
											"end": 23901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 23894,
											"end": 23933,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 23894,
											"end": 23933,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 23894,
											"end": 23933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23875,
											"end": 23933,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 23875,
											"end": 23933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23944,
											"end": 23986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 23965,
											"end": 23969,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 23971,
											"end": 23973,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 23975,
											"end": 23982,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 23984,
											"end": 23985,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 23944,
											"end": 23964,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 23944,
											"end": 23986,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 23944,
											"end": 23986,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 23944,
											"end": 23986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20673,
											"end": 23993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20673,
											"end": 23993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20673,
											"end": 23993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20673,
											"end": 23993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 846,
											"end": 984,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 846,
											"end": 984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 941,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 947,
											"end": 949,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 951,
											"end": 959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 941,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 941,
											"end": 960,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 941,
											"end": 960,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 941,
											"end": 960,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 984,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 24242,
											"end": 24246,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 24248,
											"end": 24250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 24252,
											"end": 24259,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1047,
											"end": 1060,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1079,
											"end": 1086,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 1073,
											"end": 1087,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1073,
											"end": 1087,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1073,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "546F6B656E206275726E65640000000000000000000000000000000000000000"
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1127,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11481,
											"end": 11488,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 11542,
											"end": 11549,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 11523,
											"end": 11550,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11523,
											"end": 11550,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 11523,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11500,
											"end": 11552,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11500,
											"end": 11552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7117,
											"end": 7124,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7158,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7140,
											"end": 7145,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7161,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7169,
											"end": 7204,
											"name": "PUSH",
											"source": 3,
											"value": "8F4EB604"
										},
										{
											"begin": 7169,
											"end": 7204,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 7169,
											"end": 7204,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 7161,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 7161,
											"end": 7205,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7161,
											"end": 7205,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7161,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1373,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7222,
											"end": 7240,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7246,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7277,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10273,
											"end": 10286,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 10305,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17607,
											"end": 17615,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17573,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17574,
											"end": 17593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 17574,
											"end": 17591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 17574,
											"end": 17593,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17574,
											"end": 17593,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 17574,
											"end": 17593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17595,
											"end": 17603,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17666,
											"end": 17674,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17645,
											"end": 17664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 17645,
											"end": 17662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 17645,
											"end": 17664,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17645,
											"end": 17664,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 17645,
											"end": 17664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17676,
											"end": 17684,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25021,
											"end": 25052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 25034,
											"end": 25038,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 25040,
											"end": 25042,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 25044,
											"end": 25051,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 25021,
											"end": 25033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 25021,
											"end": 25052,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 25021,
											"end": 25052,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 25021,
											"end": 25052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25084,
											"end": 25085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 25066,
											"end": 25068,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 25066,
											"end": 25080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25066,
											"end": 25080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 25066,
											"end": 25080,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 25066,
											"end": 25085,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 25062,
											"end": 25251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 25062,
											"end": 25251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 25104,
											"end": 25160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 25135,
											"end": 25139,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 25141,
											"end": 25143,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 25145,
											"end": 25152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 25154,
											"end": 25159,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 25104,
											"end": 25134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 25104,
											"end": 25160,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 25104,
											"end": 25160,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 25104,
											"end": 25160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25099,
											"end": 25251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 25099,
											"end": 25251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 25180,
											"end": 25236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 25188,
											"end": 25235,
											"name": "PUSH",
											"source": 3,
											"value": "D1A57ED6"
										},
										{
											"begin": 25188,
											"end": 25235,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 25188,
											"end": 25235,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 25180,
											"end": 25187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 25180,
											"end": 25236,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 25180,
											"end": 25236,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 25180,
											"end": 25236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25099,
											"end": 25251,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 25099,
											"end": 25251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25062,
											"end": 25251,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 25062,
											"end": 25251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 518,
											"end": 838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 584,
											"end": 597,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 615,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 623,
											"end": 630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 615,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 615,
											"end": 631,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 615,
											"end": 631,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 615,
											"end": 631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 610,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 610,
											"end": 678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 633,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 641,
											"end": 677,
											"name": "PUSH",
											"source": 2,
											"value": "A14C4B50"
										},
										{
											"begin": 641,
											"end": 677,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 641,
											"end": 677,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 633,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 633,
											"end": 678,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 633,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 633,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 610,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 610,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 691,
											"end": 712,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 715,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 715,
											"end": 725,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 715,
											"end": 725,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 715,
											"end": 725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 691,
											"end": 725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 691,
											"end": 725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 768,
											"end": 769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 743,
											"end": 764,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 743,
											"end": 769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 743,
											"end": 769,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 743,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 743,
											"end": 830,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 743,
											"end": 830,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 830,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 743,
											"end": 830,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 743,
											"end": 830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 743,
											"end": 830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 743,
											"end": 830,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 830,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 743,
											"end": 830,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 743,
											"end": 830,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 743,
											"end": 830,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 743,
											"end": 830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 743,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 743,
											"end": 830,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 743,
											"end": 830,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 743,
											"end": 830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 796,
											"end": 803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 805,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 815,
											"end": 822,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 805,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 805,
											"end": 823,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 805,
											"end": 823,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 805,
											"end": 823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 779,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 824,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 779,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 779,
											"end": 824,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 779,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 779,
											"end": 824,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 779,
											"end": 824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 779,
											"end": 824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 779,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 779,
											"end": 824,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 779,
											"end": 824,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 779,
											"end": 824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 779,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 824,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 779,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 779,
											"end": 824,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 779,
											"end": 824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 779,
											"end": 824,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 779,
											"end": 824,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 779,
											"end": 824,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 779,
											"end": 824,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 779,
											"end": 824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 779,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 824,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 743,
											"end": 830,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 743,
											"end": 830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 830,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 736,
											"end": 830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 518,
											"end": 838,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17939,
											"end": 17943,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17962,
											"end": 17980,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17981,
											"end": 17986,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17988,
											"end": 17996,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17955,
											"end": 17997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17955,
											"end": 17997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18318,
											"end": 18329,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18364,
											"end": 18371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18345,
											"end": 18360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 18345,
											"end": 18358,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 18345,
											"end": 18360,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 18345,
											"end": 18360,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 18345,
											"end": 18360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18345,
											"end": 18371,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 18341,
											"end": 18607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 18341,
											"end": 18607,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18401,
											"end": 18414,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18401,
											"end": 18414,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 18391,
											"end": 18398,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18391,
											"end": 18414,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 18387,
											"end": 18597,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18387,
											"end": 18597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 18387,
											"end": 18597,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18434,
											"end": 18448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18514,
											"end": 18515,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18483,
											"end": 18500,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18501,
											"end": 18508,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 18474,
											"end": 18509,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18474,
											"end": 18509,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18474,
											"end": 18509,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18473,
											"end": 18515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18581,
											"end": 18582,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 3,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18553,
											"end": 18559,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18553,
											"end": 18577,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18553,
											"end": 18582,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 18544,
											"end": 18582,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18544,
											"end": 18582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18416,
											"end": 18597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18387,
											"end": 18597,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 18387,
											"end": 18597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18341,
											"end": 18607,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 18341,
											"end": 18607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 43371,
											"end": 43531,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 43371,
											"end": 43531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 43470,
											"end": 43483,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 43464,
											"end": 43468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 43457,
											"end": 43484,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 43510,
											"end": 43514,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 43504,
											"end": 43508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 43497,
											"end": 43515,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35143,
											"end": 35156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 35159,
											"end": 35175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 35167,
											"end": 35174,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 35159,
											"end": 35166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 35159,
											"end": 35175,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 35159,
											"end": 35175,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 35159,
											"end": 35175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35143,
											"end": 35175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 35143,
											"end": 35175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 35190,
											"end": 35203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 35230,
											"end": 35235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 35207,
											"end": 35226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 35207,
											"end": 35224,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 35207,
											"end": 35226,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 35207,
											"end": 35226,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 35207,
											"end": 35226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35186,
											"end": 35384,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 35186,
											"end": 35384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 35186,
											"end": 35384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 35254,
											"end": 35298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 35271,
											"end": 35276,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 35278,
											"end": 35297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 35278,
											"end": 35295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 35278,
											"end": 35297,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 35278,
											"end": 35297,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 35278,
											"end": 35297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35254,
											"end": 35270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 35254,
											"end": 35298,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 35254,
											"end": 35298,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 35254,
											"end": 35298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35249,
											"end": 35384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 35249,
											"end": 35384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 35318,
											"end": 35369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 35326,
											"end": 35368,
											"name": "PUSH",
											"source": 3,
											"value": "CFB3B942"
										},
										{
											"begin": 35326,
											"end": 35368,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 35326,
											"end": 35368,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 35318,
											"end": 35325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 35318,
											"end": 35369,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 35318,
											"end": 35369,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 35318,
											"end": 35369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35249,
											"end": 35384,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 35249,
											"end": 35384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35186,
											"end": 35384,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 35186,
											"end": 35384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35427,
											"end": 35429,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35409,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 35410,
											"end": 35417,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35424,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 35394,
											"end": 35424,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35424,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 35464,
											"end": 35471,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 35460,
											"end": 35462,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 35453,
											"end": 35458,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 35133,
											"end": 35479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5482,
											"end": 5489,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12917,
											"end": 12931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12966,
											"end": 12973,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12947,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 12947,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 12947,
											"end": 12962,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12947,
											"end": 12962,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 12947,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12947,
											"end": 12973,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 12943,
											"end": 14765,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 12943,
											"end": 14765,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13015,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13016,
											"end": 13023,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 12989,
											"end": 13024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12989,
											"end": 13024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13132,
											"end": 13133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13122,
											"end": 13128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13122,
											"end": 13133,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13118,
											"end": 14388,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13118,
											"end": 14388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 13118,
											"end": 14388,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13168,
											"end": 13181,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13168,
											"end": 13181,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 13157,
											"end": 13164,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13157,
											"end": 13181,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 13153,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 13153,
											"end": 13230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13183,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 13191,
											"end": 13229,
											"name": "PUSH",
											"source": 3,
											"value": "DF2D9B42"
										},
										{
											"begin": 13191,
											"end": 13229,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 13191,
											"end": 13229,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 13183,
											"end": 13190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 13183,
											"end": 13230,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13183,
											"end": 13230,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 13183,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13153,
											"end": 13230,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 13153,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13870,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 13844,
											"end": 13881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13844,
											"end": 13881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13939,
											"end": 13940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13929,
											"end": 13935,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13929,
											"end": 13940,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13925,
											"end": 13950,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13925,
											"end": 13950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 13925,
											"end": 13950,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13942,
											"end": 13950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 13942,
											"end": 13950,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13925,
											"end": 13950,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 13925,
											"end": 13950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14004,
											"end": 14005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 3,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13976,
											"end": 13982,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13976,
											"end": 14000,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13976,
											"end": 14005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13972,
											"end": 14020,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13972,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 13972,
											"end": 14020,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14007,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 14007,
											"end": 14020,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13972,
											"end": 14020,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 13972,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14308,
											"end": 14355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 14316,
											"end": 14354,
											"name": "PUSH",
											"source": 3,
											"value": "DF2D9B42"
										},
										{
											"begin": 14316,
											"end": 14354,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 14316,
											"end": 14354,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 14308,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 14308,
											"end": 14355,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14308,
											"end": 14355,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 14308,
											"end": 14355,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13118,
											"end": 14388,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 13118,
											"end": 14388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14738,
											"end": 14739,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 3,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14710,
											"end": 14716,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14710,
											"end": 14734,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14710,
											"end": 14739,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14706,
											"end": 14754,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14706,
											"end": 14754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 14706,
											"end": 14754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14741,
											"end": 14754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 14741,
											"end": 14754,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14706,
											"end": 14754,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 14706,
											"end": 14754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12943,
											"end": 14765,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 12943,
											"end": 14765,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14774,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 14782,
											"end": 14820,
											"name": "PUSH",
											"source": 3,
											"value": "DF2D9B42"
										},
										{
											"begin": 14782,
											"end": 14820,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 14782,
											"end": 14820,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 14774,
											"end": 14781,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 14774,
											"end": 14821,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14774,
											"end": 14821,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 14774,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19570,
											"end": 19597,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19599,
											"end": 19622,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19638,
											"end": 19676,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19679,
											"end": 19694,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19695,
											"end": 19702,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 19638,
											"end": 19703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19638,
											"end": 19703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19853,
											"end": 19871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19830,
											"end": 19871,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 19830,
											"end": 19871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19909,
											"end": 19928,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19903,
											"end": 19929,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 19884,
											"end": 19929,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19884,
											"end": 19929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19816,
											"end": 19939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 41401,
											"end": 41504,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 41401,
											"end": 41504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 41461,
											"end": 41468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 41487,
											"end": 41497,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 41480,
											"end": 41497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 41480,
											"end": 41497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 41401,
											"end": 41504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 41401,
											"end": 41504,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18862,
											"end": 18873,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19024,
											"end": 19040,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19017,
											"end": 19022,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19013,
											"end": 19041,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 19004,
											"end": 19041,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 19004,
											"end": 19041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19182,
											"end": 19198,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19171,
											"end": 19180,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19167,
											"end": 19199,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 19154,
											"end": 19199,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19154,
											"end": 19199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19330,
											"end": 19345,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19319,
											"end": 19328,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19316,
											"end": 19346,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 19308,
											"end": 19313,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19297,
											"end": 19306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19294,
											"end": 19314,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 19291,
											"end": 19347,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 19281,
											"end": 19347,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19281,
											"end": 19347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 40859,
											"end": 40866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 40878,
											"end": 40894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2516,
											"name": "PUSH",
											"source": 3,
											"value": "E8"
										},
										{
											"begin": 40904,
											"end": 40923,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 40904,
											"end": 40945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 40904,
											"end": 40945,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 40878,
											"end": 40946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 40878,
											"end": 40946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2516,
											"name": "PUSH",
											"source": 3,
											"value": "E8"
										},
										{
											"begin": 40971,
											"end": 41002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 40982,
											"end": 40986,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 40988,
											"end": 40990,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 40992,
											"end": 41001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 40971,
											"end": 40981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 40971,
											"end": 41002,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 40971,
											"end": 41002,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 40971,
											"end": 41002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 40963,
											"end": 41003,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFF"
										},
										{
											"begin": 40963,
											"end": 41003,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 40963,
											"end": 41025,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 40963,
											"end": 41025,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 40956,
											"end": 41025,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 40956,
											"end": 41025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 40956,
											"end": 41025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15441,
											"end": 15455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15606,
											"end": 15622,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15599,
											"end": 15604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15595,
											"end": 15623,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15586,
											"end": 15623,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15586,
											"end": 15623,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15781,
											"end": 15786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15767,
											"end": 15778,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 15742,
											"end": 15765,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 15738,
											"end": 15779,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 15735,
											"end": 15787,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15728,
											"end": 15733,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15725,
											"end": 15788,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15715,
											"end": 15788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15715,
											"end": 15788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28402,
											"end": 30653,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 28402,
											"end": 30653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 28474,
											"end": 28494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 28497,
											"end": 28510,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 28497,
											"end": 28510,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 28474,
											"end": 28510,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 28474,
											"end": 28510,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 28536,
											"end": 28537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 28524,
											"end": 28532,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 28524,
											"end": 28537,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 28520,
											"end": 28573,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 28520,
											"end": 28573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 28520,
											"end": 28573,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 28539,
											"end": 28573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 28547,
											"end": 28572,
											"name": "PUSH",
											"source": 3,
											"value": "B562E8DD"
										},
										{
											"begin": 28547,
											"end": 28572,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 28547,
											"end": 28572,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 28539,
											"end": 28546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 28539,
											"end": 28573,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 28539,
											"end": 28573,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 28539,
											"end": 28573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 28520,
											"end": 28573,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 28520,
											"end": 28573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 28584,
											"end": 28645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 28614,
											"end": 28615,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 28618,
											"end": 28620,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 28622,
											"end": 28634,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 28636,
											"end": 28644,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 28584,
											"end": 28605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 28584,
											"end": 28645,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 28584,
											"end": 28645,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 28584,
											"end": 28645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 29107,
											"end": 29243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 29143,
											"end": 29145,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 29196,
											"end": 29229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 29219,
											"end": 29220,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 29223,
											"end": 29225,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 29227,
											"end": 29228,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 29196,
											"end": 29210,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 29196,
											"end": 29229,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 29196,
											"end": 29229,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 29196,
											"end": 29229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 29163,
											"end": 29193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 29184,
											"end": 29192,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 29163,
											"end": 29183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 29163,
											"end": 29193,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 29163,
											"end": 29193,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 29163,
											"end": 29193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 29163,
											"end": 29229,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 29107,
											"end": 29125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 29107,
											"end": 29243,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 29107,
											"end": 29243,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 29107,
											"end": 29243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 29073,
											"end": 29090,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 29073,
											"end": 29104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 29091,
											"end": 29103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 29073,
											"end": 29104,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 29073,
											"end": 29104,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 29073,
											"end": 29104,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 29073,
											"end": 29104,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 29073,
											"end": 29104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29073,
											"end": 29104,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 29073,
											"end": 29104,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 29073,
											"end": 29104,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 29073,
											"end": 29104,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 29073,
											"end": 29104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 29073,
											"end": 29104,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 29073,
											"end": 29243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 29073,
											"end": 29243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29073,
											"end": 29243,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 29073,
											"end": 29243,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 29523,
											"end": 29524,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1495,
											"end": 1497,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 29493,
											"end": 29494,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 29493,
											"end": 29519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29493,
											"end": 29519,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 29492,
											"end": 29524,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 29480,
											"end": 29488,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 29480,
											"end": 29525,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29472,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 29473,
											"end": 29475,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 29454,
											"end": 29525,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29525,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29525,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29525,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29525,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29525,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29525,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29525,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 29454,
											"end": 29525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 29633,
											"end": 29649,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29668,
											"end": 29670,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 29652,
											"end": 29672,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29652,
											"end": 29672,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 29652,
											"end": 29691,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 29633,
											"end": 29691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29633,
											"end": 29691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 29722,
											"end": 29723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 29710,
											"end": 29718,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 29710,
											"end": 29723,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 29706,
											"end": 29760,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 29706,
											"end": 29760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 29706,
											"end": 29760,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 29725,
											"end": 29760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 29733,
											"end": 29759,
											"name": "PUSH",
											"source": 3,
											"value": "2E076300"
										},
										{
											"begin": 29733,
											"end": 29759,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 29733,
											"end": 29759,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 29725,
											"end": 29732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 29725,
											"end": 29760,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 29725,
											"end": 29760,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 29725,
											"end": 29760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 29706,
											"end": 29760,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 29706,
											"end": 29760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 29775,
											"end": 29786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 29804,
											"end": 29812,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 29789,
											"end": 29801,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 29789,
											"end": 29812,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 29775,
											"end": 29812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29775,
											"end": 29812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 29826,
											"end": 29841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 29844,
											"end": 29856,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 29826,
											"end": 29856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 29826,
											"end": 29856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 29871,
											"end": 30533,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 29871,
											"end": 30533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 30281,
											"end": 30288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 30238,
											"end": 30246,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 30194,
											"end": 30195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 30129,
											"end": 30154,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 30067,
											"end": 30068,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 30003,
											"end": 30004,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 29973,
											"end": 30324,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 30528,
											"end": 30531,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 30515,
											"end": 30524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 30515,
											"end": 30524,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 30515,
											"end": 30524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 30515,
											"end": 30524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 30515,
											"end": 30524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 30515,
											"end": 30524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 30515,
											"end": 30531,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 30515,
											"end": 30531,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 29871,
											"end": 30533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 29871,
											"end": 30533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 30563,
											"end": 30566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 30547,
											"end": 30560,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 30547,
											"end": 30566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 30547,
											"end": 30566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 30547,
											"end": 30566,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 30547,
											"end": 30566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 28828,
											"end": 30577,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 28828,
											"end": 30577,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 28828,
											"end": 30577,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 30586,
											"end": 30646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 30615,
											"end": 30616,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 30619,
											"end": 30621,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 30623,
											"end": 30635,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 30637,
											"end": 30645,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 30586,
											"end": 30606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 30586,
											"end": 30646,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 30586,
											"end": 30646,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 30586,
											"end": 30646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 28464,
											"end": 30653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 28402,
											"end": 30653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 28402,
											"end": 30653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 28402,
											"end": 30653,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 35737,
											"end": 35824,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 35737,
											"end": 35824,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35796,
											"end": 35817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 35802,
											"end": 35809,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 35811,
											"end": 35816,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 35796,
											"end": 35801,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 35796,
											"end": 35817,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 35796,
											"end": 35817,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 35796,
											"end": 35817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35737,
											"end": 35824,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 35737,
											"end": 35824,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27441,
											"end": 27445,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 27486,
											"end": 27488,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27506,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27461,
											"end": 27506,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27506,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 27507,
											"end": 27526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 27507,
											"end": 27524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 27507,
											"end": 27526,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 27507,
											"end": 27526,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 27507,
											"end": 27526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27528,
											"end": 27532,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 27534,
											"end": 27541,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 27543,
											"end": 27548,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27756,
											"end": 27757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 27739,
											"end": 27745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27739,
											"end": 27752,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 27739,
											"end": 27757,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 27735,
											"end": 27848,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 27735,
											"end": 27848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 27735,
											"end": 27848,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 27777,
											"end": 27833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 27785,
											"end": 27832,
											"name": "PUSH",
											"source": 3,
											"value": "D1A57ED6"
										},
										{
											"begin": 27785,
											"end": 27832,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 27785,
											"end": 27832,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 27777,
											"end": 27784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 27777,
											"end": 27833,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 27777,
											"end": 27833,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 27777,
											"end": 27833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27735,
											"end": 27848,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 27735,
											"end": 27848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27918,
											"end": 27924,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27912,
											"end": 27925,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 27903,
											"end": 27909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27899,
											"end": 27901,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 27895,
											"end": 27910,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27888,
											"end": 27926,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27627,
											"end": 27681,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 27627,
											"end": 27681,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 27627,
											"end": 27681,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 27617,
											"end": 27623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 27610,
											"end": 27681,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 27610,
											"end": 27681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27610,
											"end": 27681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 373,
											"end": 510,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 373,
											"end": 510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 425,
											"end": 438,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 451,
											"end": 502,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 502,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 451,
											"end": 502,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 451,
											"end": 502,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 502,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 451,
											"end": 502,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 451,
											"end": 502,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 451,
											"end": 502,
											"name": "PUSH data",
											"source": 2,
											"value": "DB1F2B0395F8AF81A252E25F3B1514283A1767CF693ADA85DE200C6148EAC63D"
										},
										{
											"begin": 451,
											"end": 502,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 451,
											"end": 502,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 451,
											"end": 502,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 451,
											"end": 502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 373,
											"end": 510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 373,
											"end": 510,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 41666,
											"end": 41683,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 42094,
											"end": 42098,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 42087,
											"end": 42091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 42081,
											"end": 42092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 42077,
											"end": 42099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 42184,
											"end": 42185,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 42178,
											"end": 42182,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 42171,
											"end": 42186,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 42257,
											"end": 42261,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 42254,
											"end": 42255,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 42250,
											"end": 42262,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 42243,
											"end": 42262,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 42243,
											"end": 42262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 42337,
											"end": 42338,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 42332,
											"end": 42335,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 42325,
											"end": 42339,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 42438,
											"end": 42441,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 42672,
											"end": 42677,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 42680,
											"end": 42681,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 42719,
											"end": 42720,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 42714,
											"end": 42717,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 42710,
											"end": 42721,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 42703,
											"end": 42721,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 42703,
											"end": 42721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 42887,
											"end": 42889,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 42881,
											"end": 42885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 42877,
											"end": 42890,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 42873,
											"end": 42875,
											"name": "PUSH",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 42869,
											"end": 42891,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 42864,
											"end": 42867,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 42856,
											"end": 42892,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 42979,
											"end": 42981,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 42973,
											"end": 42977,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 42969,
											"end": 42982,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 42961,
											"end": 42982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 42961,
											"end": 42982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 43044,
											"end": 43048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 43034,
											"end": 43059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 43034,
											"end": 43059,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 43052,
											"end": 43057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 43052,
											"end": 43057,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 43034,
											"end": 43059,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 43034,
											"end": 43059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 42658,
											"end": 42679,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 43110,
											"end": 43113,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 43105,
											"end": 43108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 43101,
											"end": 43114,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 43223,
											"end": 43227,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 43218,
											"end": 43221,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 43214,
											"end": 43228,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 43207,
											"end": 43228,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 43207,
											"end": 43228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 43286,
											"end": 43292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 43281,
											"end": 43284,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 43274,
											"end": 43293,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 41704,
											"end": 43303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 41704,
											"end": 43303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 41704,
											"end": 43303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 40572,
											"end": 40578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15901,
											"end": 16219,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 15901,
											"end": 16219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15971,
											"end": 15985,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16200,
											"end": 16201,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 16190,
											"end": 16198,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16187,
											"end": 16202,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16161,
											"end": 16185,
											"name": "PUSH",
											"source": 3,
											"value": "E1"
										},
										{
											"begin": 16157,
											"end": 16203,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 16147,
											"end": 16203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16147,
											"end": 16203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15901,
											"end": 16219,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15901,
											"end": 16219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15901,
											"end": 16219,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15901,
											"end": 16219,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 36041,
											"end": 39065,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 36041,
											"end": 39065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 36120,
											"end": 36147,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 36150,
											"end": 36177,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 36169,
											"end": 36176,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 36150,
											"end": 36168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 36150,
											"end": 36177,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 36150,
											"end": 36177,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 36150,
											"end": 36177,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 36120,
											"end": 36177,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 36120,
											"end": 36177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 36188,
											"end": 36200,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 36219,
											"end": 36238,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 36188,
											"end": 36240,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 36188,
											"end": 36240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 36252,
											"end": 36279,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 36281,
											"end": 36304,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 36308,
											"end": 36343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 36335,
											"end": 36342,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 36308,
											"end": 36334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 36308,
											"end": 36343,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 36308,
											"end": 36343,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 36308,
											"end": 36343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 36251,
											"end": 36343,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 36251,
											"end": 36343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 36251,
											"end": 36343,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 36251,
											"end": 36343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 36358,
											"end": 36371,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 36354,
											"end": 36675,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 36354,
											"end": 36675,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 36354,
											"end": 36675,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 36477,
											"end": 36545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 36502,
											"end": 36517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 36519,
											"end": 36523,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 36525,
											"end": 36544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 36525,
											"end": 36542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 36525,
											"end": 36544,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 36525,
											"end": 36544,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 36525,
											"end": 36544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 36477,
											"end": 36501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 36477,
											"end": 36545,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 36477,
											"end": 36545,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 36477,
											"end": 36545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 36472,
											"end": 36664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 36472,
											"end": 36664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 36568,
											"end": 36611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 36585,
											"end": 36589,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 36591,
											"end": 36610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 36591,
											"end": 36608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 36591,
											"end": 36610,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 36591,
											"end": 36610,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 36591,
											"end": 36610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 36568,
											"end": 36584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 36568,
											"end": 36611,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 36568,
											"end": 36611,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 36568,
											"end": 36611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 36563,
											"end": 36664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 36563,
											"end": 36664,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 36613,
											"end": 36664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 36621,
											"end": 36663,
											"name": "PUSH",
											"source": 3,
											"value": "59C896BE"
										},
										{
											"begin": 36621,
											"end": 36663,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 36621,
											"end": 36663,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 36613,
											"end": 36620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 36613,
											"end": 36664,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 36613,
											"end": 36664,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 36613,
											"end": 36664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 36563,
											"end": 36664,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 36563,
											"end": 36664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 36472,
											"end": 36664,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 36472,
											"end": 36664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 36354,
											"end": 36675,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 36354,
											"end": 36675,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 36685,
											"end": 36736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 36707,
											"end": 36711,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 36721,
											"end": 36722,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 36725,
											"end": 36732,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 36734,
											"end": 36735,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 36685,
											"end": 36706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 36685,
											"end": 36736,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 36685,
											"end": 36736,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 36685,
											"end": 36736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 36825,
											"end": 36840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 36822,
											"end": 36979,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 36822,
											"end": 36979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 36822,
											"end": 36979,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 36963,
											"end": 36964,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 36942,
											"end": 36961,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 36935,
											"end": 36965,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 36822,
											"end": 36979,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 36822,
											"end": 36979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 37627,
											"end": 37628,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1619,
											"end": 1622,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 37597,
											"end": 37598,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 37597,
											"end": 37623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 37597,
											"end": 37623,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 37596,
											"end": 37628,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37586,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 37587,
											"end": 37591,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37592,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 37568,
											"end": 37628,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37628,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37628,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37628,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37628,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37628,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37628,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37628,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 37568,
											"end": 37628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 37888,
											"end": 38061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 37924,
											"end": 37928,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 37994,
											"end": 38047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 38009,
											"end": 38013,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 38023,
											"end": 38024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 38027,
											"end": 38046,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 37994,
											"end": 38008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 37994,
											"end": 38047,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 37994,
											"end": 38047,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 37994,
											"end": 38047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 3,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 3,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37947,
											"end": 37990,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 37946,
											"end": 38047,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 37888,
											"end": 37906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 37888,
											"end": 38061,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 37888,
											"end": 38061,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 37888,
											"end": 38061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 37859,
											"end": 37876,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 37859,
											"end": 37885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 37877,
											"end": 37884,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 37859,
											"end": 37885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 37859,
											"end": 37885,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 37859,
											"end": 37885,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 37859,
											"end": 37885,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 37859,
											"end": 37885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 37859,
											"end": 37885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 37859,
											"end": 37885,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 37859,
											"end": 37885,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 37859,
											"end": 37885,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 37859,
											"end": 37885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 37859,
											"end": 37885,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 37859,
											"end": 38061,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 37859,
											"end": 38061,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 37859,
											"end": 38061,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 37859,
											"end": 38061,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 38229,
											"end": 38230,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 3,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38178,
											"end": 38197,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 38178,
											"end": 38225,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 38178,
											"end": 38230,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 38174,
											"end": 38791,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 38174,
											"end": 38791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 38174,
											"end": 38791,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 38250,
											"end": 38269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 38282,
											"end": 38283,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 38272,
											"end": 38279,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 38272,
											"end": 38283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 38250,
											"end": 38283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 38250,
											"end": 38283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 38437,
											"end": 38438,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 38403,
											"end": 38420,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 38403,
											"end": 38433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 38421,
											"end": 38432,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 38403,
											"end": 38433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 38403,
											"end": 38433,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 38403,
											"end": 38433,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 38403,
											"end": 38433,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 38403,
											"end": 38433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 38403,
											"end": 38433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 38403,
											"end": 38433,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 38403,
											"end": 38433,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 38403,
											"end": 38433,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 38403,
											"end": 38433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 38403,
											"end": 38433,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 38403,
											"end": 38433,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 38403,
											"end": 38438,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 38399,
											"end": 38777,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 38399,
											"end": 38777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 38399,
											"end": 38777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 38539,
											"end": 38552,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 38539,
											"end": 38552,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 38524,
											"end": 38535,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 38524,
											"end": 38552,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 38520,
											"end": 38759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 38520,
											"end": 38759,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 38717,
											"end": 38736,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 38684,
											"end": 38701,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 38684,
											"end": 38714,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 38702,
											"end": 38713,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 38684,
											"end": 38714,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 38684,
											"end": 38714,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 38684,
											"end": 38714,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 38684,
											"end": 38714,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 38684,
											"end": 38714,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 38684,
											"end": 38714,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 38684,
											"end": 38714,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 38684,
											"end": 38714,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 38684,
											"end": 38714,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 38684,
											"end": 38714,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 38684,
											"end": 38714,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 38684,
											"end": 38736,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 38684,
											"end": 38736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 38684,
											"end": 38736,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 38684,
											"end": 38736,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 38520,
											"end": 38759,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 38520,
											"end": 38759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 38399,
											"end": 38777,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 38399,
											"end": 38777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 38232,
											"end": 38791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 38174,
											"end": 38791,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 38174,
											"end": 38791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 38843,
											"end": 38850,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 38839,
											"end": 38840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 38816,
											"end": 38851,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38816,
											"end": 38851,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 38825,
											"end": 38829,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 38816,
											"end": 38851,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38816,
											"end": 38851,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 38816,
											"end": 38851,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 38816,
											"end": 38851,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 38816,
											"end": 38851,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 38816,
											"end": 38851,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 38816,
											"end": 38851,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 38816,
											"end": 38851,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 38816,
											"end": 38851,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 38816,
											"end": 38851,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 38816,
											"end": 38851,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 38816,
											"end": 38851,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 38861,
											"end": 38911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 38882,
											"end": 38886,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 38896,
											"end": 38897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 38900,
											"end": 38907,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 38909,
											"end": 38910,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 38861,
											"end": 38881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 38861,
											"end": 38911,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 38861,
											"end": 38911,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 38861,
											"end": 38911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 39034,
											"end": 39046,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 39034,
											"end": 39046,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 39034,
											"end": 39048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 39034,
											"end": 39048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 39034,
											"end": 39048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 39034,
											"end": 39048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 39034,
											"end": 39048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 39034,
											"end": 39048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 39034,
											"end": 39048,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 39034,
											"end": 39048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 39034,
											"end": 39048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 39034,
											"end": 39048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 39034,
											"end": 39048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 39034,
											"end": 39048,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 39034,
											"end": 39048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 36110,
											"end": 39065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 36110,
											"end": 39065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 36110,
											"end": 39065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 36110,
											"end": 39065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 36041,
											"end": 39065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 36041,
											"end": 39065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 36041,
											"end": 39065,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1867,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1888,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1973,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1979,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1905,
											"end": 1915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2013,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2014,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2076,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2089,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "tag",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 2105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2187,
											"end": 2192,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2197,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2207,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 2368,
											"end": 2373,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "tag",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2452,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "tag",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2507,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2501,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "tag",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "tag",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2311,
											"end": 2583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2742,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2738,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2789,
											"end": 2798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2787,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2799,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2753,
											"end": 2800,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "tag",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2979,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3062,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "tag",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3210,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 3246,
											"end": 3251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "tag",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 3369,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3358,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "tag",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "tag",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "tag",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3718,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3665,
											"end": 3719,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3775,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 3815,
											"end": 3820,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "tag",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "tag",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3915,
											"end": 3918,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3945,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4050,
											"end": 4054,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4090,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4077,
											"end": 4086,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4167,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4154,
											"end": 4171,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4145,
											"end": 4151,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "tag",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 4276,
											"end": 4281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "tag",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4248,
											"end": 4283,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4299,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "tag",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4364,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4404,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 4440,
											"end": 4445,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "tag",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4526,
											"end": 4532,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4540,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4585,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4580,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4558,
											"end": 4581,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4586,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "442"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "tag",
											"source": 5,
											"value": "442"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "tag",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 4779,
											"end": 4786,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4776,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4755,
											"end": 4777,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "tag",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4838,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 4907,
											"end": 4914,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4904,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4887,
											"end": 4896,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4883,
											"end": 4905,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "tag",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "446"
										},
										{
											"begin": 5043,
											"end": 5048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "tag",
											"source": 5,
											"value": "446"
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5023,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5013,
											"end": 5050,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5155,
											"end": 5159,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5195,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5182,
											"end": 5191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5178,
											"end": 5196,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5170,
											"end": 5196,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5170,
											"end": 5196,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "448"
										},
										{
											"begin": 5274,
											"end": 5275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5272,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5250,
											"end": 5256,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "tag",
											"source": 5,
											"value": "448"
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5367,
											"end": 5373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5375,
											"end": 5381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5434,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5420,
											"end": 5429,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5411,
											"end": 5418,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5430,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5403,
											"end": 5435,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "450"
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "451"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "tag",
											"source": 5,
											"value": "451"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "tag",
											"source": 5,
											"value": "450"
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "452"
										},
										{
											"begin": 5628,
											"end": 5635,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5619,
											"end": 5625,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5608,
											"end": 5617,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5604,
											"end": 5626,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "tag",
											"source": 5,
											"value": "452"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5636,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5529,
											"end": 5646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5685,
											"end": 5687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 5756,
											"end": 5763,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5747,
											"end": 5753,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5736,
											"end": 5745,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5732,
											"end": 5754,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "tag",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5764,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5813,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "454"
										},
										{
											"begin": 5884,
											"end": 5891,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5875,
											"end": 5881,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5864,
											"end": 5873,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5860,
											"end": 5882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "tag",
											"source": 5,
											"value": "454"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5829,
											"end": 5892,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5829,
											"end": 5892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5974,
											"end": 5980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6025,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6011,
											"end": 6020,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6002,
											"end": 6009,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6021,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5994,
											"end": 6026,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "457"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "tag",
											"source": 5,
											"value": "457"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "tag",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "458"
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6210,
											"end": 6216,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6208,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6195,
											"end": 6217,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "tag",
											"source": 5,
											"value": "458"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6164,
											"end": 6227,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6164,
											"end": 6227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6120,
											"end": 6237,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "460"
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "tag",
											"source": 5,
											"value": "460"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6313,
											"end": 6318,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6310,
											"end": 6342,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "461"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6346,
											"end": 6358,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "tag",
											"source": 5,
											"value": "461"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6440,
											"end": 6460,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "463"
										},
										{
											"begin": 6493,
											"end": 6498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "tag",
											"source": 5,
											"value": "463"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6582,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6635,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6621,
											"end": 6630,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6612,
											"end": 6619,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6636,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "465"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "466"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "tag",
											"source": 5,
											"value": "466"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "tag",
											"source": 5,
											"value": "465"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6759,
											"end": 6760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "467"
										},
										{
											"begin": 6829,
											"end": 6836,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6809,
											"end": 6818,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6805,
											"end": 6827,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "tag",
											"source": 5,
											"value": "467"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6886,
											"end": 6888,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "468"
										},
										{
											"begin": 6954,
											"end": 6961,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6945,
											"end": 6951,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6934,
											"end": 6943,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 6952,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "tag",
											"source": 5,
											"value": "468"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6857,
											"end": 6972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7091,
											"end": 7092,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7084,
											"end": 7096,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7217,
											"end": 7218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7215,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7207,
											"end": 7219,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7279,
											"end": 7356,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7357,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7376,
											"end": 7380,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7366,
											"end": 7381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7397,
											"end": 7398,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7390,
											"end": 7405,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "473"
										},
										{
											"begin": 7522,
											"end": 7526,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "tag",
											"source": 5,
											"value": "473"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7488,
											"end": 7528,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7618,
											"end": 7628,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7615,
											"end": 7637,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7594,
											"end": 7612,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7592,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7613,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7576,
											"end": 7638,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "474"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "475"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "tag",
											"source": 5,
											"value": "475"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "tag",
											"source": 5,
											"value": "474"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7681,
											"end": 7691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7460,
											"end": 7698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7744,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "477"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 5,
											"value": "477"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "478"
										},
										{
											"begin": 7822,
											"end": 7826,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "tag",
											"source": 5,
											"value": "478"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7900,
											"end": 7904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7979,
											"end": 8009,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "481"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "tag",
											"source": 5,
											"value": "481"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "tag",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "482"
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "tag",
											"source": 5,
											"value": "482"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8134,
											"end": 8138,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8128,
											"end": 8132,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8124,
											"end": 8139,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8236,
											"end": 8242,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8231,
											"end": 8234,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8226,
											"end": 8229,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8213,
											"end": 8243,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 8298,
											"end": 8299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8284,
											"end": 8287,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8280,
											"end": 8296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8273,
											"end": 8300,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "tag",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8389,
											"end": 8394,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "485"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "486"
										},
										{
											"begin": 8471,
											"end": 8477,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "tag",
											"source": 5,
											"value": "486"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "tag",
											"source": 5,
											"value": "485"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8502,
											"end": 8508,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8488,
											"end": 8509,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8533,
											"end": 8538,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8529,
											"end": 8545,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8578,
											"end": 8581,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8564,
											"end": 8567,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8560,
											"end": 8576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8557,
											"end": 8582,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "487"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "488"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "tag",
											"source": 5,
											"value": "488"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "tag",
											"source": 5,
											"value": "487"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "489"
										},
										{
											"begin": 8709,
											"end": 8715,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8704,
											"end": 8707,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8699,
											"end": 8702,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "tag",
											"source": 5,
											"value": "489"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8395,
											"end": 8722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8848,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 8842,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 8830,
											"end": 8836,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 8843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8822,
											"end": 8849,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "491"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "492"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "tag",
											"source": 5,
											"value": "492"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "tag",
											"source": 5,
											"value": "491"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 8976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8957,
											"end": 8977,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "493"
										},
										{
											"begin": 9069,
											"end": 9072,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9061,
											"end": 9067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9054,
											"end": 9058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9046,
											"end": 9052,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9042,
											"end": 9059,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "tag",
											"source": 5,
											"value": "493"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8802,
											"end": 9079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9180,
											"end": 9186,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9196,
											"end": 9202,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9253,
											"end": 9256,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 9241,
											"end": 9250,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9232,
											"end": 9239,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9228,
											"end": 9251,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9224,
											"end": 9257,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "495"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "496"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "tag",
											"source": 5,
											"value": "496"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "tag",
											"source": 5,
											"value": "495"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9380,
											"end": 9381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "497"
										},
										{
											"begin": 9450,
											"end": 9457,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9441,
											"end": 9447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9430,
											"end": 9439,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "tag",
											"source": 5,
											"value": "497"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9351,
											"end": 9468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9507,
											"end": 9509,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "498"
										},
										{
											"begin": 9578,
											"end": 9585,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9569,
											"end": 9575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9567,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "tag",
											"source": 5,
											"value": "498"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9478,
											"end": 9596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9635,
											"end": 9637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "499"
										},
										{
											"begin": 9706,
											"end": 9713,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9686,
											"end": 9695,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9682,
											"end": 9704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "tag",
											"source": 5,
											"value": "499"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9606,
											"end": 9724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9791,
											"end": 9793,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 9780,
											"end": 9789,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9776,
											"end": 9794,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9763,
											"end": 9795,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9814,
											"end": 9820,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9811,
											"end": 9841,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "500"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "501"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "tag",
											"source": 5,
											"value": "501"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "tag",
											"source": 5,
											"value": "500"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "502"
										},
										{
											"begin": 10003,
											"end": 10010,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9983,
											"end": 9992,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9979,
											"end": 10001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "tag",
											"source": 5,
											"value": "502"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9734,
											"end": 10021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10102,
											"end": 10108,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10159,
											"end": 10161,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10147,
											"end": 10156,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10134,
											"end": 10157,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10130,
											"end": 10162,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "504"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "505"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "tag",
											"source": 5,
											"value": "505"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "tag",
											"source": 5,
											"value": "504"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10285,
											"end": 10286,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "506"
										},
										{
											"begin": 10355,
											"end": 10362,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10346,
											"end": 10352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10335,
											"end": 10344,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10331,
											"end": 10353,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "tag",
											"source": 5,
											"value": "506"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10256,
											"end": 10373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10412,
											"end": 10414,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "507"
										},
										{
											"begin": 10483,
											"end": 10490,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10474,
											"end": 10480,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10463,
											"end": 10472,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10459,
											"end": 10481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "tag",
											"source": 5,
											"value": "507"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10383,
											"end": 10501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10562,
											"end": 10639,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10559,
											"end": 10560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10552,
											"end": 10640,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10659,
											"end": 10663,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 10656,
											"end": 10657,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10649,
											"end": 10664,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10673,
											"end": 10688,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10744,
											"end": 10750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10782,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 10775,
											"end": 10779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10771,
											"end": 10783,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10828,
											"end": 10829,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10822,
											"end": 10826,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10818,
											"end": 10830,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10849,
											"end": 10867,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "510"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10905,
											"end": 10909,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 10897,
											"end": 10903,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10893,
											"end": 10910,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "tag",
											"source": 5,
											"value": "510"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10967,
											"end": 10969,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10959,
											"end": 10965,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10956,
											"end": 10970,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10933,
											"end": 10971,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "511"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "512"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "tag",
											"source": 5,
											"value": "512"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "tag",
											"source": 5,
											"value": "511"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10751,
											"end": 11020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11128,
											"end": 11139,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11165,
											"end": 11168,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11286,
											"end": 11289,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "515"
										},
										{
											"begin": 11347,
											"end": 11352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "tag",
											"source": 5,
											"value": "515"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "516"
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11446,
											"end": 11449,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "tag",
											"source": 5,
											"value": "516"
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11362,
											"end": 11458,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11362,
											"end": 11458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "517"
										},
										{
											"begin": 11512,
											"end": 11518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11507,
											"end": 11510,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11500,
											"end": 11504,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11493,
											"end": 11498,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11489,
											"end": 11505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "tag",
											"source": 5,
											"value": "517"
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11544,
											"end": 11550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11539,
											"end": 11542,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11535,
											"end": 11551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11290,
											"end": 11557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11743,
											"end": 11746,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "519"
										},
										{
											"begin": 11856,
											"end": 11859,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11847,
											"end": 11853,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "tag",
											"source": 5,
											"value": "519"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11758,
											"end": 11860,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11758,
											"end": 11860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "520"
										},
										{
											"begin": 11968,
											"end": 11971,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11959,
											"end": 11965,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "tag",
											"source": 5,
											"value": "520"
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11870,
											"end": 11972,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11870,
											"end": 11972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11989,
											"end": 11992,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11982,
											"end": 11992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11982,
											"end": 11992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12004,
											"end": 12229,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 12004,
											"end": 12229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12144,
											"end": 12178,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12140,
											"end": 12141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12132,
											"end": 12138,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12128,
											"end": 12142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12121,
											"end": 12179,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12213,
											"end": 12221,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12208,
											"end": 12210,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12200,
											"end": 12206,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12196,
											"end": 12211,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12189,
											"end": 12222,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12004,
											"end": 12229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12004,
											"end": 12229,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12235,
											"end": 12601,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 12235,
											"end": 12601,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12377,
											"end": 12380,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12398,
											"end": 12465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "523"
										},
										{
											"begin": 12462,
											"end": 12464,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 12457,
											"end": 12460,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12398,
											"end": 12465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 12398,
											"end": 12465,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12398,
											"end": 12465,
											"name": "tag",
											"source": 5,
											"value": "523"
										},
										{
											"begin": 12398,
											"end": 12465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12391,
											"end": 12465,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12391,
											"end": 12465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12474,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "524"
										},
										{
											"begin": 12563,
											"end": 12566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12474,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 12474,
											"end": 12567,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12474,
											"end": 12567,
											"name": "tag",
											"source": 5,
											"value": "524"
										},
										{
											"begin": 12474,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12592,
											"end": 12594,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12587,
											"end": 12590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12583,
											"end": 12595,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12576,
											"end": 12595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12576,
											"end": 12595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12235,
											"end": 12601,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12235,
											"end": 12601,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12235,
											"end": 12601,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12235,
											"end": 12601,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12607,
											"end": 13026,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 12607,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12773,
											"end": 12777,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12811,
											"end": 12813,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12800,
											"end": 12809,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12796,
											"end": 12814,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12788,
											"end": 12814,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12788,
											"end": 12814,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12860,
											"end": 12869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12854,
											"end": 12858,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12850,
											"end": 12870,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12846,
											"end": 12847,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12835,
											"end": 12844,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12831,
											"end": 12848,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12824,
											"end": 12871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12888,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "526"
										},
										{
											"begin": 13014,
											"end": 13018,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12888,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 12888,
											"end": 13019,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12888,
											"end": 13019,
											"name": "tag",
											"source": 5,
											"value": "526"
										},
										{
											"begin": 12888,
											"end": 13019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12880,
											"end": 13019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12880,
											"end": 13019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12607,
											"end": 13026,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12607,
											"end": 13026,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12607,
											"end": 13026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12607,
											"end": 13026,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13032,
											"end": 13212,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 13032,
											"end": 13212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13080,
											"end": 13157,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13077,
											"end": 13078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13070,
											"end": 13158,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13177,
											"end": 13181,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 13174,
											"end": 13175,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13201,
											"end": 13205,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 13198,
											"end": 13199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13191,
											"end": 13206,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13218,
											"end": 13389,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 13218,
											"end": 13389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13257,
											"end": 13260,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13280,
											"end": 13304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "529"
										},
										{
											"begin": 13298,
											"end": 13303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13280,
											"end": 13304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 13280,
											"end": 13304,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13280,
											"end": 13304,
											"name": "tag",
											"source": 5,
											"value": "529"
										},
										{
											"begin": 13280,
											"end": 13304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13271,
											"end": 13304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13271,
											"end": 13304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13326,
											"end": 13330,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13319,
											"end": 13324,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13316,
											"end": 13331,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13313,
											"end": 13354,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13313,
											"end": 13354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "530"
										},
										{
											"begin": 13313,
											"end": 13354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13334,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "531"
										},
										{
											"begin": 13334,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 13334,
											"end": 13352,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13334,
											"end": 13352,
											"name": "tag",
											"source": 5,
											"value": "531"
										},
										{
											"begin": 13334,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13313,
											"end": 13354,
											"name": "tag",
											"source": 5,
											"value": "530"
										},
										{
											"begin": 13313,
											"end": 13354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13381,
											"end": 13382,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 13374,
											"end": 13379,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13370,
											"end": 13383,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13363,
											"end": 13383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13363,
											"end": 13383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13218,
											"end": 13389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13218,
											"end": 13389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13218,
											"end": 13389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13218,
											"end": 13389,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13395,
											"end": 13577,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 13395,
											"end": 13577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13535,
											"end": 13569,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13531,
											"end": 13532,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13523,
											"end": 13529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13519,
											"end": 13533,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13512,
											"end": 13570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13395,
											"end": 13577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13395,
											"end": 13577,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13583,
											"end": 13949,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 13583,
											"end": 13949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13725,
											"end": 13728,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13746,
											"end": 13813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "534"
										},
										{
											"begin": 13810,
											"end": 13812,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13805,
											"end": 13808,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13746,
											"end": 13813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 13746,
											"end": 13813,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13746,
											"end": 13813,
											"name": "tag",
											"source": 5,
											"value": "534"
										},
										{
											"begin": 13746,
											"end": 13813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13739,
											"end": 13813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13739,
											"end": 13813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13822,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "535"
										},
										{
											"begin": 13911,
											"end": 13914,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13822,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 13822,
											"end": 13915,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13822,
											"end": 13915,
											"name": "tag",
											"source": 5,
											"value": "535"
										},
										{
											"begin": 13822,
											"end": 13915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13940,
											"end": 13942,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13935,
											"end": 13938,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13931,
											"end": 13943,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13924,
											"end": 13943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13924,
											"end": 13943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13583,
											"end": 13949,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13583,
											"end": 13949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13583,
											"end": 13949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13583,
											"end": 13949,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13955,
											"end": 14374,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 13955,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14121,
											"end": 14125,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14159,
											"end": 14161,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14148,
											"end": 14157,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14144,
											"end": 14162,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14136,
											"end": 14162,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14136,
											"end": 14162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14208,
											"end": 14217,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14202,
											"end": 14206,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14198,
											"end": 14218,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14194,
											"end": 14195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14183,
											"end": 14192,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14179,
											"end": 14196,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14172,
											"end": 14219,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14236,
											"end": 14367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "537"
										},
										{
											"begin": 14362,
											"end": 14366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14236,
											"end": 14367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 14236,
											"end": 14367,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14236,
											"end": 14367,
											"name": "tag",
											"source": 5,
											"value": "537"
										},
										{
											"begin": 14236,
											"end": 14367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14228,
											"end": 14367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14228,
											"end": 14367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13955,
											"end": 14374,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13955,
											"end": 14374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13955,
											"end": 14374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13955,
											"end": 14374,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14380,
											"end": 14478,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 14380,
											"end": 14478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14431,
											"end": 14437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14465,
											"end": 14470,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14459,
											"end": 14471,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 14449,
											"end": 14471,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14449,
											"end": 14471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14380,
											"end": 14478,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14380,
											"end": 14478,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14380,
											"end": 14478,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14380,
											"end": 14478,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14484,
											"end": 14652,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 14484,
											"end": 14652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14567,
											"end": 14578,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14601,
											"end": 14607,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14596,
											"end": 14599,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14589,
											"end": 14608,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14641,
											"end": 14645,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14636,
											"end": 14639,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14632,
											"end": 14646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14617,
											"end": 14646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14617,
											"end": 14646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14484,
											"end": 14652,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14484,
											"end": 14652,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14484,
											"end": 14652,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14484,
											"end": 14652,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14484,
											"end": 14652,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14658,
											"end": 15018,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 14658,
											"end": 15018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14744,
											"end": 14747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14772,
											"end": 14810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "541"
										},
										{
											"begin": 14804,
											"end": 14809,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14772,
											"end": 14810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 14772,
											"end": 14810,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14772,
											"end": 14810,
											"name": "tag",
											"source": 5,
											"value": "541"
										},
										{
											"begin": 14772,
											"end": 14810,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14826,
											"end": 14896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "542"
										},
										{
											"begin": 14889,
											"end": 14895,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14884,
											"end": 14887,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 14826,
											"end": 14896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 14826,
											"end": 14896,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14826,
											"end": 14896,
											"name": "tag",
											"source": 5,
											"value": "542"
										},
										{
											"begin": 14826,
											"end": 14896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14819,
											"end": 14896,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 14819,
											"end": 14896,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14905,
											"end": 14957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "543"
										},
										{
											"begin": 14950,
											"end": 14956,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14945,
											"end": 14948,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 14938,
											"end": 14942,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14931,
											"end": 14936,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14943,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14905,
											"end": 14957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 14905,
											"end": 14957,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14905,
											"end": 14957,
											"name": "tag",
											"source": 5,
											"value": "543"
										},
										{
											"begin": 14905,
											"end": 14957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14982,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "544"
										},
										{
											"begin": 15004,
											"end": 15010,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14982,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 14982,
											"end": 15011,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14982,
											"end": 15011,
											"name": "tag",
											"source": 5,
											"value": "544"
										},
										{
											"begin": 14982,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14977,
											"end": 14980,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14973,
											"end": 15012,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14966,
											"end": 15012,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14966,
											"end": 15012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14748,
											"end": 15018,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14658,
											"end": 15018,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14658,
											"end": 15018,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14658,
											"end": 15018,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14658,
											"end": 15018,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14658,
											"end": 15018,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15024,
											"end": 15664,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 15024,
											"end": 15664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15219,
											"end": 15223,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15257,
											"end": 15260,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 15246,
											"end": 15255,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15242,
											"end": 15261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15234,
											"end": 15261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15234,
											"end": 15261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15271,
											"end": 15342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "546"
										},
										{
											"begin": 15339,
											"end": 15340,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15328,
											"end": 15337,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15324,
											"end": 15341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15315,
											"end": 15321,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 15271,
											"end": 15342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 15271,
											"end": 15342,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15271,
											"end": 15342,
											"name": "tag",
											"source": 5,
											"value": "546"
										},
										{
											"begin": 15271,
											"end": 15342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15352,
											"end": 15424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "547"
										},
										{
											"begin": 15420,
											"end": 15422,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15409,
											"end": 15418,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15405,
											"end": 15423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15396,
											"end": 15402,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 15352,
											"end": 15424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 15352,
											"end": 15424,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15352,
											"end": 15424,
											"name": "tag",
											"source": 5,
											"value": "547"
										},
										{
											"begin": 15352,
											"end": 15424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15434,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "548"
										},
										{
											"begin": 15502,
											"end": 15504,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15491,
											"end": 15500,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15487,
											"end": 15505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15478,
											"end": 15484,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15434,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 15434,
											"end": 15506,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15434,
											"end": 15506,
											"name": "tag",
											"source": 5,
											"value": "548"
										},
										{
											"begin": 15434,
											"end": 15506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15553,
											"end": 15562,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15547,
											"end": 15551,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15543,
											"end": 15563,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15538,
											"end": 15540,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 15527,
											"end": 15536,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15523,
											"end": 15541,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15516,
											"end": 15564,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15581,
											"end": 15657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "549"
										},
										{
											"begin": 15652,
											"end": 15656,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15643,
											"end": 15649,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15581,
											"end": 15657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 15581,
											"end": 15657,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15581,
											"end": 15657,
											"name": "tag",
											"source": 5,
											"value": "549"
										},
										{
											"begin": 15581,
											"end": 15657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15573,
											"end": 15657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15573,
											"end": 15657,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15024,
											"end": 15664,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 15024,
											"end": 15664,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 15024,
											"end": 15664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15024,
											"end": 15664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15024,
											"end": 15664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15024,
											"end": 15664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15024,
											"end": 15664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15024,
											"end": 15664,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15670,
											"end": 15811,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 15670,
											"end": 15811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15726,
											"end": 15731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15757,
											"end": 15763,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15751,
											"end": 15764,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15764,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15773,
											"end": 15805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "551"
										},
										{
											"begin": 15799,
											"end": 15804,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15773,
											"end": 15805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 15773,
											"end": 15805,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15773,
											"end": 15805,
											"name": "tag",
											"source": 5,
											"value": "551"
										},
										{
											"begin": 15773,
											"end": 15805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15670,
											"end": 15811,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 15670,
											"end": 15811,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15670,
											"end": 15811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15670,
											"end": 15811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15670,
											"end": 15811,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15817,
											"end": 16166,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 15817,
											"end": 16166,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15886,
											"end": 15892,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15935,
											"end": 15937,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15923,
											"end": 15932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15914,
											"end": 15921,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15910,
											"end": 15933,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15906,
											"end": 15938,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 15903,
											"end": 16022,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15903,
											"end": 16022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "553"
										},
										{
											"begin": 15903,
											"end": 16022,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15941,
											"end": 16020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "554"
										},
										{
											"begin": 15941,
											"end": 16020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 15941,
											"end": 16020,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15941,
											"end": 16020,
											"name": "tag",
											"source": 5,
											"value": "554"
										},
										{
											"begin": 15941,
											"end": 16020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15903,
											"end": 16022,
											"name": "tag",
											"source": 5,
											"value": "553"
										},
										{
											"begin": 15903,
											"end": 16022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16061,
											"end": 16062,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16086,
											"end": 16149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "555"
										},
										{
											"begin": 16141,
											"end": 16148,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 16132,
											"end": 16138,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16121,
											"end": 16130,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16117,
											"end": 16139,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16086,
											"end": 16149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 16086,
											"end": 16149,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16086,
											"end": 16149,
											"name": "tag",
											"source": 5,
											"value": "555"
										},
										{
											"begin": 16086,
											"end": 16149,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16076,
											"end": 16149,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16076,
											"end": 16149,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16032,
											"end": 16159,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15817,
											"end": 16166,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 15817,
											"end": 16166,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15817,
											"end": 16166,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15817,
											"end": 16166,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15817,
											"end": 16166,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									],
									".data": {
										"DB1F2B0395F8AF81A252E25F3B1514283A1767CF693ADA85DE200C6148EAC63D": "68747470733a2f2f626f7265646170657961636874636c75622e636f6d2f6170692f6d7574616e74732f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/kiazen/ERC721A.sol\":\"KaiERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/kiazen/ERC721A.sol\":{\"keccak256\":\"0x24b1e69a72b9c0aeb63a77757feb94b06502c21a7861081f197c2b2642aee518\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8ea8ff8c346b87ca7980356a4d8a5960d348c543499d0915da3f80e400af221\",\"dweb:/ipfs/Qmbuo1esv7ETAzZeDgyXuHhTv2ysYYMHVEihVGLNHtpWaq\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":{\"keccak256\":\"0x412e6281d70f9a223457a713988e2b3da768fc363627f70c368516e20253ead3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70ab28242e59f2f64510e6177a789d98af2ee413a73cf6d3b839e0cdd3924bcd\",\"dweb:/ipfs/QmfJo969CW8NWrmbz6J46Vxc7MqGdkXJDeqEZ5aUyqiMWJ\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "contracts/kiazen/ERC721A.sol:KaiERC721",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 334,
								"contract": "contracts/kiazen/ERC721A.sol:KaiERC721",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 336,
								"contract": "contracts/kiazen/ERC721A.sol:KaiERC721",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 338,
								"contract": "contracts/kiazen/ERC721A.sol:KaiERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 342,
								"contract": "contracts/kiazen/ERC721A.sol:KaiERC721",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 346,
								"contract": "contracts/kiazen/ERC721A.sol:KaiERC721",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 351,
								"contract": "contracts/kiazen/ERC721A.sol:KaiERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)264_storage)"
							},
							{
								"astId": 357,
								"contract": "contracts/kiazen/ERC721A.sol:KaiERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 7,
								"contract": "contracts/kiazen/ERC721A.sol:KaiERC721",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)264_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)264_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)264_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 263,
										"contract": "contracts/kiazen/ERC721A.sol:KaiERC721",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":895:43533  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":4946:5100  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5020:5025  name_ */\n  dup2\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5012:5017  _name */\n  0x02\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5012:5025  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5045:5052  symbol_ */\n  dup1\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5035:5042  _symbol */\n  0x03\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5035:5052  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5078:5093  _startTokenId() */\n  tag_9\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5078:5091  _startTokenId */\n  shl(0x20, tag_10)\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5078:5093  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5062:5075  _currentIndex */\n  0x00\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5062:5093  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":4946:5100  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":895:43533  contract ERC721A is IERC721A {... */\n  jump(tag_11)\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_10:\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5482:5489  uint256 */\n  0x00\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":895:43533  contract ERC721A is IERC721A {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_16\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  0x1f\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_17:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_18)\ntag_19:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_21:\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_24:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_25:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_26:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_27:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_28:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_29:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_30:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_31:\n    /* \"#utility.yul\":957:984   */\n  tag_47\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_29\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_49\n  tag_30\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1030:1118   */\ntag_48:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_32:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_51\n  tag_24\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_52\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_31\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_33:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_55\n  tag_30\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1434:1490   */\ntag_54:\n    /* \"#utility.yul\":1508:1537   */\n  tag_56\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_29\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1917   */\ntag_34:\n    /* \"#utility.yul\":1678:1679   */\n  0x00\n    /* \"#utility.yul\":1688:1801   */\ntag_58:\n    /* \"#utility.yul\":1702:1708   */\n  dup4\n    /* \"#utility.yul\":1699:1700   */\n  dup2\n    /* \"#utility.yul\":1696:1709   */\n  lt\n    /* \"#utility.yul\":1688:1801   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1787:1788   */\n  dup1\n    /* \"#utility.yul\":1782:1785   */\n  dup3\n    /* \"#utility.yul\":1778:1789   */\n  add\n    /* \"#utility.yul\":1772:1790   */\n  mload\n    /* \"#utility.yul\":1768:1769   */\n  dup2\n    /* \"#utility.yul\":1763:1766   */\n  dup5\n    /* \"#utility.yul\":1759:1770   */\n  add\n    /* \"#utility.yul\":1752:1791   */\n  mstore\n    /* \"#utility.yul\":1724:1726   */\n  0x20\n    /* \"#utility.yul\":1721:1722   */\n  dup2\n    /* \"#utility.yul\":1717:1727   */\n  add\n    /* \"#utility.yul\":1712:1727   */\n  swap1\n  pop\n    /* \"#utility.yul\":1688:1801   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":1819:1825   */\n  dup4\n    /* \"#utility.yul\":1816:1817   */\n  dup2\n    /* \"#utility.yul\":1813:1826   */\n  gt\n    /* \"#utility.yul\":1810:1911   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1899:1900   */\n  0x00\n    /* \"#utility.yul\":1890:1896   */\n  dup5\n    /* \"#utility.yul\":1885:1888   */\n  dup5\n    /* \"#utility.yul\":1881:1897   */\n  add\n    /* \"#utility.yul\":1874:1901   */\n  mstore\n    /* \"#utility.yul\":1810:1911   */\ntag_61:\n    /* \"#utility.yul\":1659:1917   */\n  pop\n    /* \"#utility.yul\":1610:1917   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1923:2344   */\ntag_35:\n    /* \"#utility.yul\":2012:2017   */\n  0x00\n    /* \"#utility.yul\":2037:2103   */\n  tag_63\n    /* \"#utility.yul\":2053:2102   */\n  tag_64\n    /* \"#utility.yul\":2095:2101   */\n  dup5\n    /* \"#utility.yul\":2053:2102   */\n  tag_33\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2037:2103   */\n  tag_32\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2028:2103   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2132   */\n  dup3\n    /* \"#utility.yul\":2119:2124   */\n  dup2\n    /* \"#utility.yul\":2112:2133   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x20\n    /* \"#utility.yul\":2157:2162   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  add\n    /* \"#utility.yul\":2202:2205   */\n  dup5\n    /* \"#utility.yul\":2193:2199   */\n  dup5\n    /* \"#utility.yul\":2188:2191   */\n  dup5\n    /* \"#utility.yul\":2184:2200   */\n  add\n    /* \"#utility.yul\":2181:2206   */\n  gt\n    /* \"#utility.yul\":2178:2290   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2209:2288   */\n  tag_66\n  tag_28\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2178:2290   */\ntag_65:\n    /* \"#utility.yul\":2299:2338   */\n  tag_67\n    /* \"#utility.yul\":2331:2337   */\n  dup5\n    /* \"#utility.yul\":2326:2329   */\n  dup3\n    /* \"#utility.yul\":2321:2324   */\n  dup6\n    /* \"#utility.yul\":2299:2338   */\n  tag_34\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2018:2344   */\n  pop\n    /* \"#utility.yul\":1923:2344   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2719   */\ntag_36:\n    /* \"#utility.yul\":2431:2436   */\n  0x00\n    /* \"#utility.yul\":2480:2483   */\n  dup3\n    /* \"#utility.yul\":2473:2477   */\n  0x1f\n    /* \"#utility.yul\":2465:2471   */\n  dup4\n    /* \"#utility.yul\":2461:2478   */\n  add\n    /* \"#utility.yul\":2457:2484   */\n  slt\n    /* \"#utility.yul\":2447:2569   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2488:2567   */\n  tag_70\n  tag_27\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2447:2569   */\ntag_69:\n    /* \"#utility.yul\":2598:2604   */\n  dup2\n    /* \"#utility.yul\":2592:2605   */\n  mload\n    /* \"#utility.yul\":2623:2713   */\n  tag_71\n    /* \"#utility.yul\":2709:2712   */\n  dup5\n    /* \"#utility.yul\":2701:2707   */\n  dup3\n    /* \"#utility.yul\":2694:2698   */\n  0x20\n    /* \"#utility.yul\":2686:2692   */\n  dup7\n    /* \"#utility.yul\":2682:2699   */\n  add\n    /* \"#utility.yul\":2623:2713   */\n  tag_35\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2614:2713   */\n  swap2\n  pop\n    /* \"#utility.yul\":2437:2719   */\n  pop\n    /* \"#utility.yul\":2364:2719   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2725:3578   */\ntag_3:\n    /* \"#utility.yul\":2824:2830   */\n  0x00\n    /* \"#utility.yul\":2832:2838   */\n  dup1\n    /* \"#utility.yul\":2881:2883   */\n  0x40\n    /* \"#utility.yul\":2869:2878   */\n  dup4\n    /* \"#utility.yul\":2860:2867   */\n  dup6\n    /* \"#utility.yul\":2856:2879   */\n  sub\n    /* \"#utility.yul\":2852:2884   */\n  slt\n    /* \"#utility.yul\":2849:2968   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2887:2966   */\n  tag_74\n  tag_25\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2849:2968   */\ntag_73:\n    /* \"#utility.yul\":3028:3029   */\n  0x00\n    /* \"#utility.yul\":3017:3026   */\n  dup4\n    /* \"#utility.yul\":3013:3030   */\n  add\n    /* \"#utility.yul\":3007:3031   */\n  mload\n    /* \"#utility.yul\":3058:3076   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3047:3077   */\n  gt\n    /* \"#utility.yul\":3044:3161   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":3080:3159   */\n  tag_76\n  tag_26\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3044:3161   */\ntag_75:\n    /* \"#utility.yul\":3185:3259   */\n  tag_77\n    /* \"#utility.yul\":3251:3258   */\n  dup6\n    /* \"#utility.yul\":3242:3248   */\n  dup3\n    /* \"#utility.yul\":3231:3240   */\n  dup7\n    /* \"#utility.yul\":3227:3249   */\n  add\n    /* \"#utility.yul\":3185:3259   */\n  tag_36\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3175:3259   */\n  swap3\n  pop\n    /* \"#utility.yul\":2978:3269   */\n  pop\n    /* \"#utility.yul\":3329:3331   */\n  0x20\n    /* \"#utility.yul\":3318:3327   */\n  dup4\n    /* \"#utility.yul\":3314:3332   */\n  add\n    /* \"#utility.yul\":3308:3333   */\n  mload\n    /* \"#utility.yul\":3360:3378   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3352:3358   */\n  dup2\n    /* \"#utility.yul\":3349:3379   */\n  gt\n    /* \"#utility.yul\":3346:3463   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3382:3461   */\n  tag_79\n  tag_26\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3346:3463   */\ntag_78:\n    /* \"#utility.yul\":3487:3561   */\n  tag_80\n    /* \"#utility.yul\":3553:3560   */\n  dup6\n    /* \"#utility.yul\":3544:3550   */\n  dup3\n    /* \"#utility.yul\":3533:3542   */\n  dup7\n    /* \"#utility.yul\":3529:3551   */\n  add\n    /* \"#utility.yul\":3487:3561   */\n  tag_36\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3477:3561   */\n  swap2\n  pop\n    /* \"#utility.yul\":3279:3571   */\n  pop\n    /* \"#utility.yul\":2725:3578   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3584:3764   */\ntag_37:\n    /* \"#utility.yul\":3632:3709   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3629:3630   */\n  0x00\n    /* \"#utility.yul\":3622:3710   */\n  mstore\n    /* \"#utility.yul\":3729:3733   */\n  0x22\n    /* \"#utility.yul\":3726:3727   */\n  0x04\n    /* \"#utility.yul\":3719:3734   */\n  mstore\n    /* \"#utility.yul\":3753:3757   */\n  0x24\n    /* \"#utility.yul\":3750:3751   */\n  0x00\n    /* \"#utility.yul\":3743:3758   */\n  revert\n    /* \"#utility.yul\":3770:4090   */\ntag_14:\n    /* \"#utility.yul\":3814:3820   */\n  0x00\n    /* \"#utility.yul\":3851:3852   */\n  0x02\n    /* \"#utility.yul\":3845:3849   */\n  dup3\n    /* \"#utility.yul\":3841:3853   */\n  div\n    /* \"#utility.yul\":3831:3853   */\n  swap1\n  pop\n    /* \"#utility.yul\":3898:3899   */\n  0x01\n    /* \"#utility.yul\":3892:3896   */\n  dup3\n    /* \"#utility.yul\":3888:3900   */\n  and\n    /* \"#utility.yul\":3919:3937   */\n  dup1\n    /* \"#utility.yul\":3909:3990   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3975:3979   */\n  0x7f\n    /* \"#utility.yul\":3967:3973   */\n  dup3\n    /* \"#utility.yul\":3963:3980   */\n  and\n    /* \"#utility.yul\":3953:3980   */\n  swap2\n  pop\n    /* \"#utility.yul\":3909:3990   */\ntag_83:\n    /* \"#utility.yul\":4037:4039   */\n  0x20\n    /* \"#utility.yul\":4029:4035   */\n  dup3\n    /* \"#utility.yul\":4026:4040   */\n  lt\n    /* \"#utility.yul\":4006:4024   */\n  dup2\n    /* \"#utility.yul\":4003:4041   */\n  eq\n    /* \"#utility.yul\":4000:4084   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":4056:4074   */\n  tag_85\n  tag_37\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":4000:4084   */\ntag_84:\n    /* \"#utility.yul\":3821:4090   */\n  pop\n    /* \"#utility.yul\":3770:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":895:43533  contract ERC721A is IERC721A {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":895:43533  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x095ea7b3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9164:9794  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10048:10146  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16911:17134  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16639:16761  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20546:23993  function transferFrom(... */\n    tag_7:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24084:24271  function safeTransferFrom(... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11409:11559  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7045:7284  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10217:10319  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17461:17692  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24852:25257  function safeTransferFrom(... */\n    tag_13:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10420:10742  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17842:18004  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9164:9794  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9249:9253  bool */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9582:9592  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9567:9592  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9567:9578  interfaceId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9567:9592  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9567:9668  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_90\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9658:9668  0x80ac58cd */\n      0x80ac58cd\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9643:9668  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9643:9654  interfaceId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9643:9668  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9567:9668  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_90:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9567:9744  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9734:9744  0x5b5e139f */\n      0x5b5e139f\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9719:9744  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9719:9730  interfaceId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9719:9744  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9567:9744  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_91:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9548:9744  return... */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":9164:9794  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10048:10146  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10102:10115  string memory */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10134:10139  _name */\n      0x02\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10127:10139  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10048:10146  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16911:17134  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_35:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16987:16994  address */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17011:17027  _exists(tokenId) */\n      tag_100\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17019:17026  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17011:17018  _exists */\n      tag_101\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17011:17027  _exists(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17006:17079  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_102\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17029:17079  _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_103\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17037:17078  ApprovalQueryForNonexistentToken.selector */\n      shl(0xe0, 0xcf4700e4)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17029:17036  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17029:17079  _revert(ApprovalQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_103:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17006:17079  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n    tag_102:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17097:17112  _tokenApprovals */\n      0x06\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17097:17121  _tokenApprovals[tokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17113:17120  tokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17097:17121  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17097:17127  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17090:17127  return _tokenApprovals[tokenId].value */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16911:17134  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16639:16761  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_41:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16727:16754  _approve(to, tokenId, true) */\n      tag_106\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16736:16738  to */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16740:16747  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16749:16753  true */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16727:16735  _approve */\n      tag_107\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16727:16754  _approve(to, tokenId, true) */\n      jump\t// in\n    tag_106:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16639:16761  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_44:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5955:5962  uint256 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6179:6194  _startTokenId() */\n      tag_109\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6179:6192  _startTokenId */\n      tag_110\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6179:6194  _startTokenId() */\n      jump\t// in\n    tag_109:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6164:6176  _burnCounter */\n      sload(0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6148:6161  _currentIndex */\n      sload(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6148:6176  _currentIndex - _burnCounter */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6148:6194  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6141:6194  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20546:23993  function transferFrom(... */\n    tag_50:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20683:20710  uint256 prevOwnershipPacked */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20713:20740  _packedOwnershipOf(tokenId) */\n      tag_112\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20732:20739  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20713:20731  _packedOwnershipOf */\n      tag_113\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20713:20740  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_112:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20683:20740  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2785:2799  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20881:20885  from */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20865:20887  uint256(uint160(from)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20865:20906  uint256(uint160(from)) & _BITMASK_ADDRESS */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20842:20908  from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS)) */\n      swap4\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20964:20968  from */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20923:20968  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20939:20958  prevOwnershipPacked */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20923:20968  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20919:21014  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n      tag_114\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20970:21014  _revert(TransferFromIncorrectOwner.selector) */\n      tag_115\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20978:21013  TransferFromIncorrectOwner.selector */\n      shl(0xe0, 0xa1148100)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20970:20977  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20970:21014  _revert(TransferFromIncorrectOwner.selector) */\n      jump\t// in\n    tag_115:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20919:21014  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n    tag_114:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21026:21053  uint256 approvedAddressSlot */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21055:21078  address approvedAddress */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21082:21117  _getApprovedSlotAndAddress(tokenId) */\n      tag_116\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21109:21116  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21082:21108  _getApprovedSlotAndAddress */\n      tag_117\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21082:21117  _getApprovedSlotAndAddress(tokenId) */\n      jump\t// in\n    tag_116:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21025:21117  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21214:21282  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_118\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21239:21254  approvedAddress */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21256:21260  from */\n      dup8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21262:21281  _msgSenderERC721A() */\n      tag_119\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21262:21279  _msgSenderERC721A */\n      tag_120\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21262:21281  _msgSenderERC721A() */\n      jump\t// in\n    tag_119:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21214:21238  _isSenderApprovedOrOwner */\n      tag_121\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21214:21282  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_118:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21209:21397  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_122\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21301:21344  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_123\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21318:21322  from */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21324:21343  _msgSenderERC721A() */\n      tag_124\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21324:21341  _msgSenderERC721A */\n      tag_120\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21324:21343  _msgSenderERC721A() */\n      jump\t// in\n    tag_124:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21301:21317  isApprovedForAll */\n      tag_87\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21301:21344  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_123:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21296:21397  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_125\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21346:21397  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_126\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21354:21396  TransferCallerNotOwnerNorApproved.selector */\n      shl(0xe0, 0x59c896be)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21346:21353  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21346:21397  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_126:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21296:21397  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n    tag_125:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21209:21397  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_122:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21408:21451  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_127\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21430:21434  from */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21436:21438  to */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21440:21447  tokenId */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21449:21450  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21408:21429  _beforeTokenTransfers */\n      tag_128\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21408:21451  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_127:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21540:21555  approvedAddress */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21537:21694  if approvedAddress {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21678:21679  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21657:21676  approvedAddressSlot */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21650:21680  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21537:21694  if approvedAddress {... */\n    tag_129:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22066:22084  _packedAddressData */\n      0x05\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22066:22090  _packedAddressData[from] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22085:22089  from */\n      dup8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22066:22090  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22064:22090  --_packedAddressData[from] */\n      dup2\n      sload\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22134:22152  _packedAddressData */\n      0x05\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22134:22156  _packedAddressData[to] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22153:22155  to */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22134:22156  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22132:22156  ++_packedAddressData[to] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22449:22592  _packOwnershipData(... */\n      tag_130\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22485:22487  to */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22533:22578  _nextExtraData(from, to, prevOwnershipPacked) */\n      tag_131\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22548:22552  from */\n      dup9\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22554:22556  to */\n      dup9\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22558:22577  prevOwnershipPacked */\n      dup8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22533:22547  _nextExtraData */\n      tag_132\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22533:22578  _nextExtraData(from, to, prevOwnershipPacked) */\n      jump\t// in\n    tag_131:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22505:22578  _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked) */\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22449:22467  _packOwnershipData */\n      tag_133\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22449:22592  _packOwnershipData(... */\n      jump\t// in\n    tag_130:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22420:22437  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22420:22446  _packedOwnerships[tokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22438:22445  tokenId */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22420:22446  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22420:22592  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22760:22761  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22709:22728  prevOwnershipPacked */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22709:22756  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22709:22761  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22705:23322  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22781:22800  uint256 nextTokenId */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22813:22814  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22803:22810  tokenId */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22803:22814  tokenId + 1 */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22781:22814  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22968:22969  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22934:22951  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22934:22964  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22952:22963  nextTokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22934:22964  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22934:22969  _packedOwnerships[nextTokenId] == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22930:23308  if (_packedOwnerships[nextTokenId] == 0) {... */\n      iszero\n      tag_135\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23070:23083  _currentIndex */\n      sload(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23055:23066  nextTokenId */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23055:23083  nextTokenId != _currentIndex */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23051:23290  if (nextTokenId != _currentIndex) {... */\n      tag_136\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23248:23267  prevOwnershipPacked */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23215:23232  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23215:23245  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23233:23244  nextTokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23215:23245  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23215:23267  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23051:23290  if (nextTokenId != _currentIndex) {... */\n    tag_136:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22930:23308  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_135:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22763:23322  {... */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22705:23322  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_134:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23431:23447  uint256 toMasked */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2785:2799  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23466:23468  to */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23450:23470  uint256(uint160(to)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23450:23489  uint256(uint160(to)) & _BITMASK_ADDRESS */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23431:23489  uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23821:23828  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23786:23794  toMasked */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23753:23757  from */\n      dup9\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23696:23721  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23642:23643  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23586:23587  0 */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23564:23856  log4(... */\n      log4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23891:23892  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23879:23887  toMasked */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23879:23892  toMasked == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23875:23933  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n      iszero\n      tag_137\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23894:23933  _revert(TransferToZeroAddress.selector) */\n      tag_138\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23902:23932  TransferToZeroAddress.selector */\n      shl(0xe0, 0xea553b34)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23894:23901  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23894:23933  _revert(TransferToZeroAddress.selector) */\n      jump\t// in\n    tag_138:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23875:23933  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n    tag_137:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23944:23986  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_139\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23965:23969  from */\n      dup8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23971:23973  to */\n      dup8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23975:23982  tokenId */\n      dup8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23984:23985  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23944:23964  _afterTokenTransfers */\n      tag_140\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23944:23986  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_139:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20673:23993  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20546:23993  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24084:24271  function safeTransferFrom(... */\n    tag_53:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24225:24264  safeTransferFrom(from, to, tokenId, '') */\n      tag_142\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24242:24246  from */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24248:24250  to */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24252:24259  tokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24225:24264  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24225:24241  safeTransferFrom */\n      tag_77\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24225:24264  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_142:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24084:24271  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11409:11559  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11481:11488  address */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11523:11550  _packedOwnershipOf(tokenId) */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11542:11549  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11523:11541  _packedOwnershipOf */\n      tag_113\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11523:11550  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11500:11552  return address(uint160(_packedOwnershipOf(tokenId))) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11409:11559  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7045:7284  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7117:7124  uint256 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7157:7158  0 */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7140:7159  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7140:7145  owner */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7140:7159  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7136:7205  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n      iszero\n      tag_146\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7161:7205  _revert(BalanceQueryForZeroAddress.selector) */\n      tag_147\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7169:7204  BalanceQueryForZeroAddress.selector */\n      shl(0xe0, 0x8f4eb604)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7161:7168  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7161:7205  _revert(BalanceQueryForZeroAddress.selector) */\n      jump\t// in\n    tag_147:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7136:7205  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n    tag_146:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":1360:1373  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7222:7240  _packedAddressData */\n      0x05\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7222:7247  _packedAddressData[owner] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7241:7246  owner */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7222:7247  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7222:7277  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7215:7277  return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7045:7284  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10217:10319  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10273:10286  string memory */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10305:10312  _symbol */\n      0x03\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10298:10312  return _symbol */\n      dup1\n      sload\n      tag_149\n      swap1\n      tag_94\n      jump\t// in\n    tag_149:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_94\n      jump\t// in\n    tag_150:\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10217:10319  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17461:17692  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_73:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17607:17615  approved */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17555:17573  _operatorApprovals */\n      0x07\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17555:17594  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17574:17593  _msgSenderERC721A() */\n      tag_155\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17574:17591  _msgSenderERC721A */\n      tag_120\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17574:17593  _msgSenderERC721A() */\n      jump\t// in\n    tag_155:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17555:17594  _operatorApprovals[_msgSenderERC721A()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17555:17604  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17595:17603  operator */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17555:17604  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17555:17615  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17666:17674  operator */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17630:17685  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17645:17664  _msgSenderERC721A() */\n      tag_156\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17645:17662  _msgSenderERC721A */\n      tag_120\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17645:17664  _msgSenderERC721A() */\n      jump\t// in\n    tag_156:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17630:17685  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17676:17684  approved */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17630:17685  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17461:17692  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24852:25257  function safeTransferFrom(... */\n    tag_77:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25021:25052  transferFrom(from, to, tokenId) */\n      tag_159\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25034:25038  from */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25040:25042  to */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25044:25051  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25021:25033  transferFrom */\n      tag_50\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25021:25052  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_159:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25084:25085  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25066:25068  to */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25066:25080  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25066:25085  to.code.length != 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25062:25251  if (to.code.length != 0)... */\n      tag_160\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25104:25160  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_161\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25135:25139  from */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25141:25143  to */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25145:25152  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25154:25159  _data */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25104:25134  _checkContractOnERC721Received */\n      tag_162\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25104:25160  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_161:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25099:25251  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_163\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25180:25236  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_164\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25188:25235  TransferToNonERC721ReceiverImplementer.selector */\n      shl(0xe0, 0xd1a57ed6)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25180:25187  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25180:25236  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_164:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25099:25251  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_163:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25062:25251  if (to.code.length != 0)... */\n    tag_160:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24852:25257  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10420:10742  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10493:10506  string memory */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10523:10539  _exists(tokenId) */\n      tag_166\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10531:10538  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10523:10530  _exists */\n      tag_101\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10523:10539  _exists(tokenId) */\n      jump\t// in\n    tag_166:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10518:10586  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n      tag_167\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10541:10586  _revert(URIQueryForNonexistentToken.selector) */\n      tag_168\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10549:10585  URIQueryForNonexistentToken.selector */\n      shl(0xe0, 0xa14c4b50)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10541:10548  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10541:10586  _revert(URIQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_168:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10518:10586  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n    tag_167:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10597:10618  string memory baseURI */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10621:10631  _baseURI() */\n      tag_169\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10621:10629  _baseURI */\n      tag_170\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10621:10631  _baseURI() */\n      jump\t// in\n    tag_169:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10597:10631  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10673:10674  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10654:10661  baseURI */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10648:10669  bytes(baseURI).length */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10648:10674  bytes(baseURI).length != 0 */\n      eq\n      iszero\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10648:10735  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_171\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_172)\n    tag_171:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10701:10708  baseURI */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10710:10728  _toString(tokenId) */\n      tag_173\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10720:10727  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10710:10719  _toString */\n      tag_174\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10710:10728  _toString(tokenId) */\n      jump\t// in\n    tag_173:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10684:10729  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_175\n      swap3\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10648:10735  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_172:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10641:10735  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10420:10742  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17842:18004  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_87:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17939:17943  bool */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17962:17980  _operatorApprovals */\n      0x07\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17962:17987  _operatorApprovals[owner] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17981:17986  owner */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17962:17987  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17962:17997  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17988:17996  operator */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17962:17997  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17955:17997  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17842:18004  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18253:18613  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n    tag_101:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18318:18329  bool result */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18364:18371  tokenId */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18345:18360  _startTokenId() */\n      tag_179\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18345:18358  _startTokenId */\n      tag_110\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18345:18360  _startTokenId() */\n      jump\t// in\n    tag_179:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18345:18371  _startTokenId() <= tokenId */\n      gt\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18341:18607  if (_startTokenId() <= tokenId) {... */\n      tag_180\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18401:18414  _currentIndex */\n      sload(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18391:18398  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18391:18414  tokenId < _currentIndex */\n      lt\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18387:18597  if (tokenId < _currentIndex) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18434:18448  uint256 packed */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18466:18526  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n    tag_182:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18514:18515  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18483:18500  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18483:18509  _packedOwnerships[tokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18501:18508  tokenId */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18483:18509  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18474:18509  packed = _packedOwnerships[tokenId] */\n      swap2\n      pop\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18473:18515  (packed = _packedOwnerships[tokenId]) == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18466:18526  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      iszero\n      tag_183\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18517:18526  --tokenId */\n      dup3\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      swap3\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18466:18526  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      jump(tag_182)\n    tag_183:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18581:18582  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18553:18559  packed */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18553:18577  packed & _BITMASK_BURNED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18553:18582  packed & _BITMASK_BURNED == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18544:18582  result = packed & _BITMASK_BURNED == 0 */\n      swap2\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18416:18597  {... */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18387:18597  if (tokenId < _currentIndex) {... */\n    tag_181:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18341:18607  if (_startTokenId() <= tokenId) {... */\n    tag_180:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18253:18613  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43371:43531  function _revert(bytes4 errorSelector) internal pure {... */\n    tag_104:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43470:43483  errorSelector */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43464:43468  0x00 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43457:43484  mstore(0x00, errorSelector) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43510:43514  0x04 */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43504:43508  0x00 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43497:43515  revert(0x00, 0x04) */\n      revert\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35019:35479  function _approve(... */\n    tag_107:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35143:35156  address owner */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35159:35175  ownerOf(tokenId) */\n      tag_188\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35167:35174  tokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35159:35166  ownerOf */\n      tag_57\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35159:35175  ownerOf(tokenId) */\n      jump\t// in\n    tag_188:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35143:35175  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35190:35203  approvalCheck */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35190:35235  approvalCheck && _msgSenderERC721A() != owner */\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35230:35235  owner */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35207:35235  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35207:35226  _msgSenderERC721A() */\n      tag_190\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35207:35224  _msgSenderERC721A */\n      tag_120\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35207:35226  _msgSenderERC721A() */\n      jump\t// in\n    tag_190:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35207:35235  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35190:35235  approvalCheck && _msgSenderERC721A() != owner */\n    tag_189:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35186:35384  if (approvalCheck && _msgSenderERC721A() != owner)... */\n      iszero\n      tag_191\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35254:35298  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_192\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35271:35276  owner */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35278:35297  _msgSenderERC721A() */\n      tag_193\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35278:35295  _msgSenderERC721A */\n      tag_120\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35278:35297  _msgSenderERC721A() */\n      jump\t// in\n    tag_193:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35254:35270  isApprovedForAll */\n      tag_87\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35254:35298  isApprovedForAll(owner, _msgSenderERC721A()) */\n      jump\t// in\n    tag_192:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35249:35384  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_194\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35318:35369  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      tag_195\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35326:35368  ApprovalCallerNotOwnerNorApproved.selector */\n      shl(0xe0, 0xcfb3b942)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35318:35325  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35318:35369  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_195:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35249:35384  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_194:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35186:35384  if (approvalCheck && _msgSenderERC721A() != owner)... */\n    tag_191:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35427:35429  to */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35394:35409  _tokenApprovals */\n      0x06\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35394:35418  _tokenApprovals[tokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35410:35417  tokenId */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35394:35418  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35394:35424  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35394:35429  _tokenApprovals[tokenId].value = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35464:35471  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35460:35462  to */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35444:35472  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35453:35458  owner */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35444:35472  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35133:35479  {... */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35019:35479  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_110:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5482:5489  uint256 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12850:14828  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_113:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12917:12931  uint256 packed */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12966:12973  tokenId */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12947:12962  _startTokenId() */\n      tag_198\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12947:12960  _startTokenId */\n      tag_110\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12947:12962  _startTokenId() */\n      jump\t// in\n    tag_198:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12947:12973  _startTokenId() <= tokenId */\n      gt\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12943:14765  if (_startTokenId() <= tokenId) {... */\n      tag_199\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12998:13015  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12998:13024  _packedOwnerships[tokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13016:13023  tokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12998:13024  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12989:13024  packed = _packedOwnerships[tokenId] */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13132:13133  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13122:13128  packed */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13122:13133  packed == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13118:14388  if (packed == 0) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13168:13181  _currentIndex */\n      sload(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13157:13164  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13157:13181  tokenId >= _currentIndex */\n      lt\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13153:13230  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_201\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13183:13230  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_202\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13191:13229  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13183:13190  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13183:13230  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_202:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13153:13230  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n    tag_201:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13777:14374  for (;;) {... */\n    tag_203:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13853:13870  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13853:13881  _packedOwnerships[--tokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13871:13880  --tokenId */\n      dup4\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13853:13881  _packedOwnerships[--tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13844:13881  packed = _packedOwnerships[--tokenId] */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13939:13940  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13929:13935  packed */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13929:13940  packed == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13925:13950  if (packed == 0) continue */\n      iszero\n      tag_206\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13942:13950  continue */\n      jump(tag_205)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13925:13950  if (packed == 0) continue */\n    tag_206:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14004:14005  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13976:13982  packed */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13976:14000  packed & _BITMASK_BURNED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13976:14005  packed & _BITMASK_BURNED == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13972:14020  if (packed & _BITMASK_BURNED == 0) return packed */\n      iszero\n      tag_207\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14007:14020  return packed */\n      jump(tag_197)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13972:14020  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_207:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14308:14355  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_208\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14316:14354  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14308:14315  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14308:14355  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_208:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13777:14374  for (;;) {... */\n    tag_205:\n      jump(tag_203)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13118:14388  if (packed == 0) {... */\n    tag_200:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14738:14739  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14710:14716  packed */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14710:14734  packed & _BITMASK_BURNED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14710:14739  packed & _BITMASK_BURNED == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14706:14754  if (packed & _BITMASK_BURNED == 0) return packed */\n      iszero\n      tag_209\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14741:14754  return packed */\n      jump(tag_197)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14706:14754  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_209:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12943:14765  if (_startTokenId() <= tokenId) {... */\n    tag_199:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14774:14821  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_210\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14782:14820  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14774:14781  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14774:14821  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_210:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12850:14828  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_197:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19471:19945  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n    tag_117:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19570:19597  uint256 approvedAddressSlot */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19599:19622  address approvedAddress */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19638:19676  TokenApprovalRef storage tokenApproval */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19679:19694  _tokenApprovals */\n      0x06\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19679:19703  _tokenApprovals[tokenId] */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19695:19702  tokenId */\n      dup6\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19679:19703  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19638:19703  TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19853:19871  tokenApproval.slot */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19830:19871  approvedAddressSlot := tokenApproval.slot */\n      swap3\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19909:19928  approvedAddressSlot */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19903:19929  sload(approvedAddressSlot) */\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19884:19929  approvedAddress := sload(approvedAddressSlot) */\n      swap2\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19816:19939  {... */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19471:19945  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41401:41504  function _msgSenderERC721A() internal view virtual returns (address) {... */\n    tag_120:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41461:41468  address */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41487:41497  msg.sender */\n      caller\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41480:41497  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41401:41504  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18717:19363  function _isSenderApprovedOrOwner(... */\n    tag_121:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18862:18873  bool result */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19024:19040  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19017:19022  owner */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19013:19041  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19004:19041  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19182:19198  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19171:19180  msgSender */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19167:19199  and(msgSender, _BITMASK_ADDRESS) */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19154:19199  msgSender := and(msgSender, _BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19330:19345  approvedAddress */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19319:19328  msgSender */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19316:19346  eq(msgSender, approvedAddress) */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19308:19313  owner */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19297:19306  msgSender */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19294:19314  eq(msgSender, owner) */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19291:19347  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19281:19347  result := or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18717:19363  function _isSenderApprovedOrOwner(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25901:26055  function _beforeTokenTransfers(... */\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40728:41032  function _nextExtraData(... */\n    tag_132:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40859:40866  uint256 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40878:40894  uint24 extraData */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2513:2516  232 */\n      0xe8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40904:40923  prevOwnershipPacked */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40904:40945  prevOwnershipPacked >> _BITPOS_EXTRA_DATA */\n      swap1\n      shr\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40878:40946  uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":2513:2516  232 */\n      0xe8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40971:41002  _extraData(from, to, extraData) */\n      tag_216\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40982:40986  from */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40988:40990  to */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40992:41001  extraData */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40971:40981  _extraData */\n      tag_217\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40971:41002  _extraData(from, to, extraData) */\n      jump\t// in\n    tag_216:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40963:41003  uint256(_extraData(from, to, extraData)) */\n      0xffffff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40963:41025  uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap1\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40956:41025  return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40728:41032  function _nextExtraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15361:15804  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n    tag_133:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15441:15455  uint256 result */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15606:15622  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15599:15604  owner */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15595:15623  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15586:15623  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15781:15786  flags */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15767:15778  timestamp() */\n      timestamp\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15742:15765  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15738:15779  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15735:15787  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15728:15733  owner */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15725:15788  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15715:15788  result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15361:15804  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26702:26855  function _afterTokenTransfers(... */\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27283:27956  function _checkContractOnERC721Received(... */\n    tag_162:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27441:27445  bool */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27486:27488  to */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27461:27506  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27507:27526  _msgSenderERC721A() */\n      tag_221\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27507:27524  _msgSenderERC721A */\n      tag_120\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27507:27526  _msgSenderERC721A() */\n      jump\t// in\n    tag_221:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27528:27532  from */\n      dup8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27534:27541  tokenId */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27543:27548  _data */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27461:27549  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_224\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_224:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_225\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_226\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      0x01\n    tag_225:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27457:27950  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_228\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_233\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_232)\n    tag_233:\n      0x60\n      swap2\n      pop\n    tag_232:\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27756:27757  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27739:27745  reason */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27739:27752  reason.length */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27739:27757  reason.length == 0 */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27735:27848  if (reason.length == 0) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27777:27833  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_235\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27785:27832  TransferToNonERC721ReceiverImplementer.selector */\n      shl(0xe0, 0xd1a57ed6)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27777:27784  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27777:27833  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_235:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27735:27848  if (reason.length == 0) {... */\n    tag_234:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27918:27924  reason */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27912:27925  mload(reason) */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27903:27909  reason */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27899:27901  32 */\n      0x20\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27895:27910  add(32, reason) */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27888:27926  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27457:27950  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_228:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27627:27681  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27617:27681  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27617:27623  retval */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27617:27681  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27610:27681  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27283:27956  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10987:11079  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_170:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11038:11051  string memory */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11063:11072  return '' */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10987:11079  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41601:43309  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_174:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41666:41683  string memory str */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42094:42098  0xa0 */\n      0xa0\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42087:42091  0x40 */\n      0x40\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42081:42092  mload(0x40) */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42077:42099  add(mload(0x40), 0xa0) */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42184:42185  m */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42178:42182  0x40 */\n      0x40\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42171:42186  mstore(0x40, m) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42257:42261  0x20 */\n      0x20\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42254:42255  m */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42250:42262  sub(m, 0x20) */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42243:42262  str := sub(m, 0x20) */\n      swap2\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42337:42338  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42332:42335  str */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42325:42339  mstore(str, 0) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42438:42441  str */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42672:42677  value */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42654:43073  for { let temp := value } 1 {} {... */\n    tag_239:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42680:42681  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42654:43073  for { let temp := value } 1 {} {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42719:42720  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42714:42717  str */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42710:42721  sub(str, 1) */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42703:42721  str := sub(str, 1) */\n      swap4\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42887:42889  10 */\n      0x0a\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42881:42885  temp */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42877:42890  mod(temp, 10) */\n      mod\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42873:42875  48 */\n      0x30\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42869:42891  add(48, mod(temp, 10)) */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42864:42867  str */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42856:42892  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42979:42981  10 */\n      0x0a\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42973:42977  temp */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42969:42982  div(temp, 10) */\n      div\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42961:42982  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43044:43048  temp */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43034:43059  if iszero(temp) { break } */\n      tag_242\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43052:43057  break */\n      jump(tag_241)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43034:43059  if iszero(temp) { break } */\n    tag_242:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42654:43073  for { let temp := value } 1 {} {... */\n      jump(tag_239)\n    tag_241:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":42658:42679  { let temp := value } */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43110:43113  str */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43105:43108  end */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43101:43114  sub(end, str) */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43223:43227  0x20 */\n      0x20\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43218:43221  str */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43214:43228  sub(str, 0x20) */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43207:43228  str := sub(str, 0x20) */\n      swap4\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43286:43292  length */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43281:43284  str */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":43274:43293  mstore(str, length) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41704:43303  {... */\n      pop\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41601:43309  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40439:40582  function _extraData(... */\n    tag_217:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40572:40578  uint24 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":40439:40582  function _extraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_244:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_245:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_246:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_247:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_248:\n        /* \"#utility.yul\":561:584   */\n      tag_291\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_247\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_292:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_249:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_294\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_248\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_22:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_297\n      tag_245\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":833:952   */\n    tag_296:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_298\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_249\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_250:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_251:\n        /* \"#utility.yul\":1268:1289   */\n      tag_301\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_250\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_25:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_303\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_251\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_252:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_253:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2105   */\n    tag_254:\n        /* \"#utility.yul\":1866:1867   */\n      0x00\n        /* \"#utility.yul\":1876:1989   */\n    tag_307:\n        /* \"#utility.yul\":1890:1896   */\n      dup4\n        /* \"#utility.yul\":1887:1888   */\n      dup2\n        /* \"#utility.yul\":1884:1897   */\n      lt\n        /* \"#utility.yul\":1876:1989   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":1975:1976   */\n      dup1\n        /* \"#utility.yul\":1970:1973   */\n      dup3\n        /* \"#utility.yul\":1966:1977   */\n      add\n        /* \"#utility.yul\":1960:1978   */\n      mload\n        /* \"#utility.yul\":1956:1957   */\n      dup2\n        /* \"#utility.yul\":1951:1954   */\n      dup5\n        /* \"#utility.yul\":1947:1958   */\n      add\n        /* \"#utility.yul\":1940:1979   */\n      mstore\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1909:1910   */\n      dup2\n        /* \"#utility.yul\":1905:1915   */\n      add\n        /* \"#utility.yul\":1900:1915   */\n      swap1\n      pop\n        /* \"#utility.yul\":1876:1989   */\n      jump(tag_307)\n    tag_309:\n        /* \"#utility.yul\":2007:2013   */\n      dup4\n        /* \"#utility.yul\":2004:2005   */\n      dup2\n        /* \"#utility.yul\":2001:2014   */\n      gt\n        /* \"#utility.yul\":1998:2099   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2078:2084   */\n      dup5\n        /* \"#utility.yul\":2073:2076   */\n      dup5\n        /* \"#utility.yul\":2069:2085   */\n      add\n        /* \"#utility.yul\":2062:2089   */\n      mstore\n        /* \"#utility.yul\":1998:2099   */\n    tag_310:\n        /* \"#utility.yul\":1847:2105   */\n      pop\n        /* \"#utility.yul\":1798:2105   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2111:2213   */\n    tag_255:\n        /* \"#utility.yul\":2152:2158   */\n      0x00\n        /* \"#utility.yul\":2203:2205   */\n      0x1f\n        /* \"#utility.yul\":2199:2206   */\n      not\n        /* \"#utility.yul\":2194:2196   */\n      0x1f\n        /* \"#utility.yul\":2187:2192   */\n      dup4\n        /* \"#utility.yul\":2183:2197   */\n      add\n        /* \"#utility.yul\":2179:2207   */\n      and\n        /* \"#utility.yul\":2169:2207   */\n      swap1\n      pop\n        /* \"#utility.yul\":2111:2213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2583   */\n    tag_256:\n        /* \"#utility.yul\":2307:2310   */\n      0x00\n        /* \"#utility.yul\":2335:2374   */\n      tag_313\n        /* \"#utility.yul\":2368:2373   */\n      dup3\n        /* \"#utility.yul\":2335:2374   */\n      tag_252\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2390:2461   */\n      tag_314\n        /* \"#utility.yul\":2454:2460   */\n      dup2\n        /* \"#utility.yul\":2449:2452   */\n      dup6\n        /* \"#utility.yul\":2390:2461   */\n      tag_253\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2383:2461   */\n      swap4\n      pop\n        /* \"#utility.yul\":2470:2522   */\n      tag_315\n        /* \"#utility.yul\":2515:2521   */\n      dup2\n        /* \"#utility.yul\":2510:2513   */\n      dup6\n        /* \"#utility.yul\":2503:2507   */\n      0x20\n        /* \"#utility.yul\":2496:2501   */\n      dup7\n        /* \"#utility.yul\":2492:2508   */\n      add\n        /* \"#utility.yul\":2470:2522   */\n      tag_254\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2547:2576   */\n      tag_316\n        /* \"#utility.yul\":2569:2575   */\n      dup2\n        /* \"#utility.yul\":2547:2576   */\n      tag_255\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":2542:2545   */\n      dup5\n        /* \"#utility.yul\":2538:2577   */\n      add\n        /* \"#utility.yul\":2531:2577   */\n      swap2\n      pop\n        /* \"#utility.yul\":2311:2583   */\n      pop\n        /* \"#utility.yul\":2219:2583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2589:2902   */\n    tag_30:\n        /* \"#utility.yul\":2702:2706   */\n      0x00\n        /* \"#utility.yul\":2740:2742   */\n      0x20\n        /* \"#utility.yul\":2729:2738   */\n      dup3\n        /* \"#utility.yul\":2725:2743   */\n      add\n        /* \"#utility.yul\":2717:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2789:2798   */\n      dup2\n        /* \"#utility.yul\":2783:2787   */\n      dup2\n        /* \"#utility.yul\":2779:2799   */\n      sub\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2753:2800   */\n      mstore\n        /* \"#utility.yul\":2817:2895   */\n      tag_318\n        /* \"#utility.yul\":2890:2894   */\n      dup2\n        /* \"#utility.yul\":2881:2887   */\n      dup5\n        /* \"#utility.yul\":2817:2895   */\n      tag_256\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":2809:2895   */\n      swap1\n      pop\n        /* \"#utility.yul\":2589:2902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2908:2985   */\n    tag_257:\n        /* \"#utility.yul\":2945:2952   */\n      0x00\n        /* \"#utility.yul\":2974:2979   */\n      dup2\n        /* \"#utility.yul\":2963:2979   */\n      swap1\n      pop\n        /* \"#utility.yul\":2908:2985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2991:3113   */\n    tag_258:\n        /* \"#utility.yul\":3064:3088   */\n      tag_321\n        /* \"#utility.yul\":3082:3087   */\n      dup2\n        /* \"#utility.yul\":3064:3088   */\n      tag_257\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":3057:3062   */\n      dup2\n        /* \"#utility.yul\":3054:3089   */\n      eq\n        /* \"#utility.yul\":3044:3107   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":3103:3104   */\n      0x00\n        /* \"#utility.yul\":3100:3101   */\n      dup1\n        /* \"#utility.yul\":3093:3105   */\n      revert\n        /* \"#utility.yul\":3044:3107   */\n    tag_322:\n        /* \"#utility.yul\":2991:3113   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3258   */\n    tag_259:\n        /* \"#utility.yul\":3165:3170   */\n      0x00\n        /* \"#utility.yul\":3203:3209   */\n      dup2\n        /* \"#utility.yul\":3190:3210   */\n      calldataload\n        /* \"#utility.yul\":3181:3210   */\n      swap1\n      pop\n        /* \"#utility.yul\":3219:3252   */\n      tag_324\n        /* \"#utility.yul\":3246:3251   */\n      dup2\n        /* \"#utility.yul\":3219:3252   */\n      tag_258\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":3119:3258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3593   */\n    tag_34:\n        /* \"#utility.yul\":3323:3329   */\n      0x00\n        /* \"#utility.yul\":3372:3374   */\n      0x20\n        /* \"#utility.yul\":3360:3369   */\n      dup3\n        /* \"#utility.yul\":3351:3358   */\n      dup5\n        /* \"#utility.yul\":3347:3370   */\n      sub\n        /* \"#utility.yul\":3343:3375   */\n      slt\n        /* \"#utility.yul\":3340:3459   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":3378:3457   */\n      tag_327\n      tag_245\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3340:3459   */\n    tag_326:\n        /* \"#utility.yul\":3498:3499   */\n      0x00\n        /* \"#utility.yul\":3523:3576   */\n      tag_328\n        /* \"#utility.yul\":3568:3575   */\n      dup5\n        /* \"#utility.yul\":3559:3565   */\n      dup3\n        /* \"#utility.yul\":3548:3557   */\n      dup6\n        /* \"#utility.yul\":3544:3566   */\n      add\n        /* \"#utility.yul\":3523:3576   */\n      tag_259\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3513:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3469:3586   */\n      pop\n        /* \"#utility.yul\":3264:3593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3599:3725   */\n    tag_260:\n        /* \"#utility.yul\":3636:3643   */\n      0x00\n        /* \"#utility.yul\":3676:3718   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3669:3674   */\n      dup3\n        /* \"#utility.yul\":3665:3719   */\n      and\n        /* \"#utility.yul\":3654:3719   */\n      swap1\n      pop\n        /* \"#utility.yul\":3599:3725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3731:3827   */\n    tag_261:\n        /* \"#utility.yul\":3768:3775   */\n      0x00\n        /* \"#utility.yul\":3797:3821   */\n      tag_331\n        /* \"#utility.yul\":3815:3820   */\n      dup3\n        /* \"#utility.yul\":3797:3821   */\n      tag_260\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":3786:3821   */\n      swap1\n      pop\n        /* \"#utility.yul\":3731:3827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3833:3951   */\n    tag_262:\n        /* \"#utility.yul\":3920:3944   */\n      tag_333\n        /* \"#utility.yul\":3938:3943   */\n      dup2\n        /* \"#utility.yul\":3920:3944   */\n      tag_261\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":3915:3918   */\n      dup3\n        /* \"#utility.yul\":3908:3945   */\n      mstore\n        /* \"#utility.yul\":3833:3951   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3957:4179   */\n    tag_37:\n        /* \"#utility.yul\":4050:4054   */\n      0x00\n        /* \"#utility.yul\":4088:4090   */\n      0x20\n        /* \"#utility.yul\":4077:4086   */\n      dup3\n        /* \"#utility.yul\":4073:4091   */\n      add\n        /* \"#utility.yul\":4065:4091   */\n      swap1\n      pop\n        /* \"#utility.yul\":4101:4172   */\n      tag_335\n        /* \"#utility.yul\":4169:4170   */\n      0x00\n        /* \"#utility.yul\":4158:4167   */\n      dup4\n        /* \"#utility.yul\":4154:4171   */\n      add\n        /* \"#utility.yul\":4145:4151   */\n      dup5\n        /* \"#utility.yul\":4101:4172   */\n      tag_262\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3957:4179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4185:4307   */\n    tag_263:\n        /* \"#utility.yul\":4258:4282   */\n      tag_337\n        /* \"#utility.yul\":4276:4281   */\n      dup2\n        /* \"#utility.yul\":4258:4282   */\n      tag_261\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4251:4256   */\n      dup2\n        /* \"#utility.yul\":4248:4283   */\n      eq\n        /* \"#utility.yul\":4238:4301   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":4297:4298   */\n      0x00\n        /* \"#utility.yul\":4294:4295   */\n      dup1\n        /* \"#utility.yul\":4287:4299   */\n      revert\n        /* \"#utility.yul\":4238:4301   */\n    tag_338:\n        /* \"#utility.yul\":4185:4307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4313:4452   */\n    tag_264:\n        /* \"#utility.yul\":4359:4364   */\n      0x00\n        /* \"#utility.yul\":4397:4403   */\n      dup2\n        /* \"#utility.yul\":4384:4404   */\n      calldataload\n        /* \"#utility.yul\":4375:4404   */\n      swap1\n      pop\n        /* \"#utility.yul\":4413:4446   */\n      tag_340\n        /* \"#utility.yul\":4440:4445   */\n      dup2\n        /* \"#utility.yul\":4413:4446   */\n      tag_263\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4313:4452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4458:4932   */\n    tag_40:\n        /* \"#utility.yul\":4526:4532   */\n      0x00\n        /* \"#utility.yul\":4534:4540   */\n      dup1\n        /* \"#utility.yul\":4583:4585   */\n      0x40\n        /* \"#utility.yul\":4571:4580   */\n      dup4\n        /* \"#utility.yul\":4562:4569   */\n      dup6\n        /* \"#utility.yul\":4558:4581   */\n      sub\n        /* \"#utility.yul\":4554:4586   */\n      slt\n        /* \"#utility.yul\":4551:4670   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":4589:4668   */\n      tag_343\n      tag_245\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":4551:4670   */\n    tag_342:\n        /* \"#utility.yul\":4709:4710   */\n      0x00\n        /* \"#utility.yul\":4734:4787   */\n      tag_344\n        /* \"#utility.yul\":4779:4786   */\n      dup6\n        /* \"#utility.yul\":4770:4776   */\n      dup3\n        /* \"#utility.yul\":4759:4768   */\n      dup7\n        /* \"#utility.yul\":4755:4777   */\n      add\n        /* \"#utility.yul\":4734:4787   */\n      tag_264\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":4724:4787   */\n      swap3\n      pop\n        /* \"#utility.yul\":4680:4797   */\n      pop\n        /* \"#utility.yul\":4836:4838   */\n      0x20\n        /* \"#utility.yul\":4862:4915   */\n      tag_345\n        /* \"#utility.yul\":4907:4914   */\n      dup6\n        /* \"#utility.yul\":4898:4904   */\n      dup3\n        /* \"#utility.yul\":4887:4896   */\n      dup7\n        /* \"#utility.yul\":4883:4905   */\n      add\n        /* \"#utility.yul\":4862:4915   */\n      tag_259\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4852:4915   */\n      swap2\n      pop\n        /* \"#utility.yul\":4807:4925   */\n      pop\n        /* \"#utility.yul\":4458:4932   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4938:5056   */\n    tag_265:\n        /* \"#utility.yul\":5025:5049   */\n      tag_347\n        /* \"#utility.yul\":5043:5048   */\n      dup2\n        /* \"#utility.yul\":5025:5049   */\n      tag_257\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5020:5023   */\n      dup3\n        /* \"#utility.yul\":5013:5050   */\n      mstore\n        /* \"#utility.yul\":4938:5056   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5062:5284   */\n    tag_46:\n        /* \"#utility.yul\":5155:5159   */\n      0x00\n        /* \"#utility.yul\":5193:5195   */\n      0x20\n        /* \"#utility.yul\":5182:5191   */\n      dup3\n        /* \"#utility.yul\":5178:5196   */\n      add\n        /* \"#utility.yul\":5170:5196   */\n      swap1\n      pop\n        /* \"#utility.yul\":5206:5277   */\n      tag_349\n        /* \"#utility.yul\":5274:5275   */\n      0x00\n        /* \"#utility.yul\":5263:5272   */\n      dup4\n        /* \"#utility.yul\":5259:5276   */\n      add\n        /* \"#utility.yul\":5250:5256   */\n      dup5\n        /* \"#utility.yul\":5206:5277   */\n      tag_265\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":5062:5284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5290:5909   */\n    tag_49:\n        /* \"#utility.yul\":5367:5373   */\n      0x00\n        /* \"#utility.yul\":5375:5381   */\n      dup1\n        /* \"#utility.yul\":5383:5389   */\n      0x00\n        /* \"#utility.yul\":5432:5434   */\n      0x60\n        /* \"#utility.yul\":5420:5429   */\n      dup5\n        /* \"#utility.yul\":5411:5418   */\n      dup7\n        /* \"#utility.yul\":5407:5430   */\n      sub\n        /* \"#utility.yul\":5403:5435   */\n      slt\n        /* \"#utility.yul\":5400:5519   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":5438:5517   */\n      tag_352\n      tag_245\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5400:5519   */\n    tag_351:\n        /* \"#utility.yul\":5558:5559   */\n      0x00\n        /* \"#utility.yul\":5583:5636   */\n      tag_353\n        /* \"#utility.yul\":5628:5635   */\n      dup7\n        /* \"#utility.yul\":5619:5625   */\n      dup3\n        /* \"#utility.yul\":5608:5617   */\n      dup8\n        /* \"#utility.yul\":5604:5626   */\n      add\n        /* \"#utility.yul\":5583:5636   */\n      tag_264\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":5573:5636   */\n      swap4\n      pop\n        /* \"#utility.yul\":5529:5646   */\n      pop\n        /* \"#utility.yul\":5685:5687   */\n      0x20\n        /* \"#utility.yul\":5711:5764   */\n      tag_354\n        /* \"#utility.yul\":5756:5763   */\n      dup7\n        /* \"#utility.yul\":5747:5753   */\n      dup3\n        /* \"#utility.yul\":5736:5745   */\n      dup8\n        /* \"#utility.yul\":5732:5754   */\n      add\n        /* \"#utility.yul\":5711:5764   */\n      tag_264\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":5701:5764   */\n      swap3\n      pop\n        /* \"#utility.yul\":5656:5774   */\n      pop\n        /* \"#utility.yul\":5813:5815   */\n      0x40\n        /* \"#utility.yul\":5839:5892   */\n      tag_355\n        /* \"#utility.yul\":5884:5891   */\n      dup7\n        /* \"#utility.yul\":5875:5881   */\n      dup3\n        /* \"#utility.yul\":5864:5873   */\n      dup8\n        /* \"#utility.yul\":5860:5882   */\n      add\n        /* \"#utility.yul\":5839:5892   */\n      tag_259\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":5829:5892   */\n      swap2\n      pop\n        /* \"#utility.yul\":5784:5902   */\n      pop\n        /* \"#utility.yul\":5290:5909   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5915:6244   */\n    tag_62:\n        /* \"#utility.yul\":5974:5980   */\n      0x00\n        /* \"#utility.yul\":6023:6025   */\n      0x20\n        /* \"#utility.yul\":6011:6020   */\n      dup3\n        /* \"#utility.yul\":6002:6009   */\n      dup5\n        /* \"#utility.yul\":5998:6021   */\n      sub\n        /* \"#utility.yul\":5994:6026   */\n      slt\n        /* \"#utility.yul\":5991:6110   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":6029:6108   */\n      tag_358\n      tag_245\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":5991:6110   */\n    tag_357:\n        /* \"#utility.yul\":6149:6150   */\n      0x00\n        /* \"#utility.yul\":6174:6227   */\n      tag_359\n        /* \"#utility.yul\":6219:6226   */\n      dup5\n        /* \"#utility.yul\":6210:6216   */\n      dup3\n        /* \"#utility.yul\":6199:6208   */\n      dup6\n        /* \"#utility.yul\":6195:6217   */\n      add\n        /* \"#utility.yul\":6174:6227   */\n      tag_264\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":6164:6227   */\n      swap2\n      pop\n        /* \"#utility.yul\":6120:6237   */\n      pop\n        /* \"#utility.yul\":5915:6244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6250:6366   */\n    tag_266:\n        /* \"#utility.yul\":6320:6341   */\n      tag_361\n        /* \"#utility.yul\":6335:6340   */\n      dup2\n        /* \"#utility.yul\":6320:6341   */\n      tag_250\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":6313:6318   */\n      dup2\n        /* \"#utility.yul\":6310:6342   */\n      eq\n        /* \"#utility.yul\":6300:6360   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":6356:6357   */\n      0x00\n        /* \"#utility.yul\":6353:6354   */\n      dup1\n        /* \"#utility.yul\":6346:6358   */\n      revert\n        /* \"#utility.yul\":6300:6360   */\n    tag_362:\n        /* \"#utility.yul\":6250:6366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6372:6505   */\n    tag_267:\n        /* \"#utility.yul\":6415:6420   */\n      0x00\n        /* \"#utility.yul\":6453:6459   */\n      dup2\n        /* \"#utility.yul\":6440:6460   */\n      calldataload\n        /* \"#utility.yul\":6431:6460   */\n      swap1\n      pop\n        /* \"#utility.yul\":6469:6499   */\n      tag_364\n        /* \"#utility.yul\":6493:6498   */\n      dup2\n        /* \"#utility.yul\":6469:6499   */\n      tag_266\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6372:6505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6511:6979   */\n    tag_72:\n        /* \"#utility.yul\":6576:6582   */\n      0x00\n        /* \"#utility.yul\":6584:6590   */\n      dup1\n        /* \"#utility.yul\":6633:6635   */\n      0x40\n        /* \"#utility.yul\":6621:6630   */\n      dup4\n        /* \"#utility.yul\":6612:6619   */\n      dup6\n        /* \"#utility.yul\":6608:6631   */\n      sub\n        /* \"#utility.yul\":6604:6636   */\n      slt\n        /* \"#utility.yul\":6601:6720   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":6639:6718   */\n      tag_367\n      tag_245\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":6601:6720   */\n    tag_366:\n        /* \"#utility.yul\":6759:6760   */\n      0x00\n        /* \"#utility.yul\":6784:6837   */\n      tag_368\n        /* \"#utility.yul\":6829:6836   */\n      dup6\n        /* \"#utility.yul\":6820:6826   */\n      dup3\n        /* \"#utility.yul\":6809:6818   */\n      dup7\n        /* \"#utility.yul\":6805:6827   */\n      add\n        /* \"#utility.yul\":6784:6837   */\n      tag_264\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6774:6837   */\n      swap3\n      pop\n        /* \"#utility.yul\":6730:6847   */\n      pop\n        /* \"#utility.yul\":6886:6888   */\n      0x20\n        /* \"#utility.yul\":6912:6962   */\n      tag_369\n        /* \"#utility.yul\":6954:6961   */\n      dup6\n        /* \"#utility.yul\":6945:6951   */\n      dup3\n        /* \"#utility.yul\":6934:6943   */\n      dup7\n        /* \"#utility.yul\":6930:6952   */\n      add\n        /* \"#utility.yul\":6912:6962   */\n      tag_267\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6902:6962   */\n      swap2\n      pop\n        /* \"#utility.yul\":6857:6972   */\n      pop\n        /* \"#utility.yul\":6511:6979   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6985:7102   */\n    tag_268:\n        /* \"#utility.yul\":7094:7095   */\n      0x00\n        /* \"#utility.yul\":7091:7092   */\n      dup1\n        /* \"#utility.yul\":7084:7096   */\n      revert\n        /* \"#utility.yul\":7108:7225   */\n    tag_269:\n        /* \"#utility.yul\":7217:7218   */\n      0x00\n        /* \"#utility.yul\":7214:7215   */\n      dup1\n        /* \"#utility.yul\":7207:7219   */\n      revert\n        /* \"#utility.yul\":7231:7411   */\n    tag_270:\n        /* \"#utility.yul\":7279:7356   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7269:7357   */\n      mstore\n        /* \"#utility.yul\":7376:7380   */\n      0x41\n        /* \"#utility.yul\":7373:7374   */\n      0x04\n        /* \"#utility.yul\":7366:7381   */\n      mstore\n        /* \"#utility.yul\":7400:7404   */\n      0x24\n        /* \"#utility.yul\":7397:7398   */\n      0x00\n        /* \"#utility.yul\":7390:7405   */\n      revert\n        /* \"#utility.yul\":7417:7698   */\n    tag_271:\n        /* \"#utility.yul\":7500:7527   */\n      tag_374\n        /* \"#utility.yul\":7522:7526   */\n      dup3\n        /* \"#utility.yul\":7500:7527   */\n      tag_255\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7492:7498   */\n      dup2\n        /* \"#utility.yul\":7488:7528   */\n      add\n        /* \"#utility.yul\":7630:7636   */\n      dup2\n        /* \"#utility.yul\":7618:7628   */\n      dup2\n        /* \"#utility.yul\":7615:7637   */\n      lt\n        /* \"#utility.yul\":7594:7612   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7582:7592   */\n      dup3\n        /* \"#utility.yul\":7579:7613   */\n      gt\n        /* \"#utility.yul\":7576:7638   */\n      or\n        /* \"#utility.yul\":7573:7661   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":7641:7659   */\n      tag_376\n      tag_270\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":7573:7661   */\n    tag_375:\n        /* \"#utility.yul\":7681:7691   */\n      dup1\n        /* \"#utility.yul\":7677:7679   */\n      0x40\n        /* \"#utility.yul\":7670:7692   */\n      mstore\n        /* \"#utility.yul\":7460:7698   */\n      pop\n        /* \"#utility.yul\":7417:7698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7704:7833   */\n    tag_272:\n        /* \"#utility.yul\":7738:7744   */\n      0x00\n        /* \"#utility.yul\":7765:7785   */\n      tag_378\n      tag_244\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":7755:7785   */\n      swap1\n      pop\n        /* \"#utility.yul\":7794:7827   */\n      tag_379\n        /* \"#utility.yul\":7822:7826   */\n      dup3\n        /* \"#utility.yul\":7814:7820   */\n      dup3\n        /* \"#utility.yul\":7794:7827   */\n      tag_271\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":7704:7833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7839:8146   */\n    tag_273:\n        /* \"#utility.yul\":7900:7904   */\n      0x00\n        /* \"#utility.yul\":7990:8008   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7982:7988   */\n      dup3\n        /* \"#utility.yul\":7979:8009   */\n      gt\n        /* \"#utility.yul\":7976:8032   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":8012:8030   */\n      tag_382\n      tag_270\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":7976:8032   */\n    tag_381:\n        /* \"#utility.yul\":8050:8079   */\n      tag_383\n        /* \"#utility.yul\":8072:8078   */\n      dup3\n        /* \"#utility.yul\":8050:8079   */\n      tag_255\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":8042:8079   */\n      swap1\n      pop\n        /* \"#utility.yul\":8134:8138   */\n      0x20\n        /* \"#utility.yul\":8128:8132   */\n      dup2\n        /* \"#utility.yul\":8124:8139   */\n      add\n        /* \"#utility.yul\":8116:8139   */\n      swap1\n      pop\n        /* \"#utility.yul\":7839:8146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8152:8306   */\n    tag_274:\n        /* \"#utility.yul\":8236:8242   */\n      dup3\n        /* \"#utility.yul\":8231:8234   */\n      dup2\n        /* \"#utility.yul\":8226:8229   */\n      dup4\n        /* \"#utility.yul\":8213:8243   */\n      calldatacopy\n        /* \"#utility.yul\":8298:8299   */\n      0x00\n        /* \"#utility.yul\":8289:8295   */\n      dup4\n        /* \"#utility.yul\":8284:8287   */\n      dup4\n        /* \"#utility.yul\":8280:8296   */\n      add\n        /* \"#utility.yul\":8273:8300   */\n      mstore\n        /* \"#utility.yul\":8152:8306   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8312:8722   */\n    tag_275:\n        /* \"#utility.yul\":8389:8394   */\n      0x00\n        /* \"#utility.yul\":8414:8479   */\n      tag_386\n        /* \"#utility.yul\":8430:8478   */\n      tag_387\n        /* \"#utility.yul\":8471:8477   */\n      dup5\n        /* \"#utility.yul\":8430:8478   */\n      tag_273\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":8414:8479   */\n      tag_272\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":8405:8479   */\n      swap1\n      pop\n        /* \"#utility.yul\":8502:8508   */\n      dup3\n        /* \"#utility.yul\":8495:8500   */\n      dup2\n        /* \"#utility.yul\":8488:8509   */\n      mstore\n        /* \"#utility.yul\":8540:8544   */\n      0x20\n        /* \"#utility.yul\":8533:8538   */\n      dup2\n        /* \"#utility.yul\":8529:8545   */\n      add\n        /* \"#utility.yul\":8578:8581   */\n      dup5\n        /* \"#utility.yul\":8569:8575   */\n      dup5\n        /* \"#utility.yul\":8564:8567   */\n      dup5\n        /* \"#utility.yul\":8560:8576   */\n      add\n        /* \"#utility.yul\":8557:8582   */\n      gt\n        /* \"#utility.yul\":8554:8666   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":8585:8664   */\n      tag_389\n      tag_269\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":8554:8666   */\n    tag_388:\n        /* \"#utility.yul\":8675:8716   */\n      tag_390\n        /* \"#utility.yul\":8709:8715   */\n      dup5\n        /* \"#utility.yul\":8704:8707   */\n      dup3\n        /* \"#utility.yul\":8699:8702   */\n      dup6\n        /* \"#utility.yul\":8675:8716   */\n      tag_274\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":8395:8722   */\n      pop\n        /* \"#utility.yul\":8312:8722   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8741:9079   */\n    tag_276:\n        /* \"#utility.yul\":8796:8801   */\n      0x00\n        /* \"#utility.yul\":8845:8848   */\n      dup3\n        /* \"#utility.yul\":8838:8842   */\n      0x1f\n        /* \"#utility.yul\":8830:8836   */\n      dup4\n        /* \"#utility.yul\":8826:8843   */\n      add\n        /* \"#utility.yul\":8822:8849   */\n      slt\n        /* \"#utility.yul\":8812:8934   */\n      tag_392\n      jumpi\n        /* \"#utility.yul\":8853:8932   */\n      tag_393\n      tag_268\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8812:8934   */\n    tag_392:\n        /* \"#utility.yul\":8970:8976   */\n      dup2\n        /* \"#utility.yul\":8957:8977   */\n      calldataload\n        /* \"#utility.yul\":8995:9073   */\n      tag_394\n        /* \"#utility.yul\":9069:9072   */\n      dup5\n        /* \"#utility.yul\":9061:9067   */\n      dup3\n        /* \"#utility.yul\":9054:9058   */\n      0x20\n        /* \"#utility.yul\":9046:9052   */\n      dup7\n        /* \"#utility.yul\":9042:9059   */\n      add\n        /* \"#utility.yul\":8995:9073   */\n      tag_275\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":8986:9073   */\n      swap2\n      pop\n        /* \"#utility.yul\":8802:9079   */\n      pop\n        /* \"#utility.yul\":8741:9079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9085:10028   */\n    tag_76:\n        /* \"#utility.yul\":9180:9186   */\n      0x00\n        /* \"#utility.yul\":9188:9194   */\n      dup1\n        /* \"#utility.yul\":9196:9202   */\n      0x00\n        /* \"#utility.yul\":9204:9210   */\n      dup1\n        /* \"#utility.yul\":9253:9256   */\n      0x80\n        /* \"#utility.yul\":9241:9250   */\n      dup6\n        /* \"#utility.yul\":9232:9239   */\n      dup8\n        /* \"#utility.yul\":9228:9251   */\n      sub\n        /* \"#utility.yul\":9224:9257   */\n      slt\n        /* \"#utility.yul\":9221:9341   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":9260:9339   */\n      tag_397\n      tag_245\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9221:9341   */\n    tag_396:\n        /* \"#utility.yul\":9380:9381   */\n      0x00\n        /* \"#utility.yul\":9405:9458   */\n      tag_398\n        /* \"#utility.yul\":9450:9457   */\n      dup8\n        /* \"#utility.yul\":9441:9447   */\n      dup3\n        /* \"#utility.yul\":9430:9439   */\n      dup9\n        /* \"#utility.yul\":9426:9448   */\n      add\n        /* \"#utility.yul\":9405:9458   */\n      tag_264\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":9395:9458   */\n      swap5\n      pop\n        /* \"#utility.yul\":9351:9468   */\n      pop\n        /* \"#utility.yul\":9507:9509   */\n      0x20\n        /* \"#utility.yul\":9533:9586   */\n      tag_399\n        /* \"#utility.yul\":9578:9585   */\n      dup8\n        /* \"#utility.yul\":9569:9575   */\n      dup3\n        /* \"#utility.yul\":9558:9567   */\n      dup9\n        /* \"#utility.yul\":9554:9576   */\n      add\n        /* \"#utility.yul\":9533:9586   */\n      tag_264\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9523:9586   */\n      swap4\n      pop\n        /* \"#utility.yul\":9478:9596   */\n      pop\n        /* \"#utility.yul\":9635:9637   */\n      0x40\n        /* \"#utility.yul\":9661:9714   */\n      tag_400\n        /* \"#utility.yul\":9706:9713   */\n      dup8\n        /* \"#utility.yul\":9697:9703   */\n      dup3\n        /* \"#utility.yul\":9686:9695   */\n      dup9\n        /* \"#utility.yul\":9682:9704   */\n      add\n        /* \"#utility.yul\":9661:9714   */\n      tag_259\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9651:9714   */\n      swap3\n      pop\n        /* \"#utility.yul\":9606:9724   */\n      pop\n        /* \"#utility.yul\":9791:9793   */\n      0x60\n        /* \"#utility.yul\":9780:9789   */\n      dup6\n        /* \"#utility.yul\":9776:9794   */\n      add\n        /* \"#utility.yul\":9763:9795   */\n      calldataload\n        /* \"#utility.yul\":9822:9840   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9814:9820   */\n      dup2\n        /* \"#utility.yul\":9811:9841   */\n      gt\n        /* \"#utility.yul\":9808:9925   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":9844:9923   */\n      tag_402\n      tag_246\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9808:9925   */\n    tag_401:\n        /* \"#utility.yul\":9949:10011   */\n      tag_403\n        /* \"#utility.yul\":10003:10010   */\n      dup8\n        /* \"#utility.yul\":9994:10000   */\n      dup3\n        /* \"#utility.yul\":9983:9992   */\n      dup9\n        /* \"#utility.yul\":9979:10001   */\n      add\n        /* \"#utility.yul\":9949:10011   */\n      tag_276\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9939:10011   */\n      swap2\n      pop\n        /* \"#utility.yul\":9734:10021   */\n      pop\n        /* \"#utility.yul\":9085:10028   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10034:10508   */\n    tag_86:\n        /* \"#utility.yul\":10102:10108   */\n      0x00\n        /* \"#utility.yul\":10110:10116   */\n      dup1\n        /* \"#utility.yul\":10159:10161   */\n      0x40\n        /* \"#utility.yul\":10147:10156   */\n      dup4\n        /* \"#utility.yul\":10138:10145   */\n      dup6\n        /* \"#utility.yul\":10134:10157   */\n      sub\n        /* \"#utility.yul\":10130:10162   */\n      slt\n        /* \"#utility.yul\":10127:10246   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":10165:10244   */\n      tag_406\n      tag_245\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":10127:10246   */\n    tag_405:\n        /* \"#utility.yul\":10285:10286   */\n      0x00\n        /* \"#utility.yul\":10310:10363   */\n      tag_407\n        /* \"#utility.yul\":10355:10362   */\n      dup6\n        /* \"#utility.yul\":10346:10352   */\n      dup3\n        /* \"#utility.yul\":10335:10344   */\n      dup7\n        /* \"#utility.yul\":10331:10353   */\n      add\n        /* \"#utility.yul\":10310:10363   */\n      tag_264\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":10300:10363   */\n      swap3\n      pop\n        /* \"#utility.yul\":10256:10373   */\n      pop\n        /* \"#utility.yul\":10412:10414   */\n      0x20\n        /* \"#utility.yul\":10438:10491   */\n      tag_408\n        /* \"#utility.yul\":10483:10490   */\n      dup6\n        /* \"#utility.yul\":10474:10480   */\n      dup3\n        /* \"#utility.yul\":10463:10472   */\n      dup7\n        /* \"#utility.yul\":10459:10481   */\n      add\n        /* \"#utility.yul\":10438:10491   */\n      tag_264\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":10428:10491   */\n      swap2\n      pop\n        /* \"#utility.yul\":10383:10501   */\n      pop\n        /* \"#utility.yul\":10034:10508   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10514:10694   */\n    tag_277:\n        /* \"#utility.yul\":10562:10639   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10559:10560   */\n      0x00\n        /* \"#utility.yul\":10552:10640   */\n      mstore\n        /* \"#utility.yul\":10659:10663   */\n      0x22\n        /* \"#utility.yul\":10656:10657   */\n      0x04\n        /* \"#utility.yul\":10649:10664   */\n      mstore\n        /* \"#utility.yul\":10683:10687   */\n      0x24\n        /* \"#utility.yul\":10680:10681   */\n      0x00\n        /* \"#utility.yul\":10673:10688   */\n      revert\n        /* \"#utility.yul\":10700:11020   */\n    tag_94:\n        /* \"#utility.yul\":10744:10750   */\n      0x00\n        /* \"#utility.yul\":10781:10782   */\n      0x02\n        /* \"#utility.yul\":10775:10779   */\n      dup3\n        /* \"#utility.yul\":10771:10783   */\n      div\n        /* \"#utility.yul\":10761:10783   */\n      swap1\n      pop\n        /* \"#utility.yul\":10828:10829   */\n      0x01\n        /* \"#utility.yul\":10822:10826   */\n      dup3\n        /* \"#utility.yul\":10818:10830   */\n      and\n        /* \"#utility.yul\":10849:10867   */\n      dup1\n        /* \"#utility.yul\":10839:10920   */\n      tag_411\n      jumpi\n        /* \"#utility.yul\":10905:10909   */\n      0x7f\n        /* \"#utility.yul\":10897:10903   */\n      dup3\n        /* \"#utility.yul\":10893:10910   */\n      and\n        /* \"#utility.yul\":10883:10910   */\n      swap2\n      pop\n        /* \"#utility.yul\":10839:10920   */\n    tag_411:\n        /* \"#utility.yul\":10967:10969   */\n      0x20\n        /* \"#utility.yul\":10959:10965   */\n      dup3\n        /* \"#utility.yul\":10956:10970   */\n      lt\n        /* \"#utility.yul\":10936:10954   */\n      dup2\n        /* \"#utility.yul\":10933:10971   */\n      eq\n        /* \"#utility.yul\":10930:11014   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":10986:11004   */\n      tag_413\n      tag_277\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":10930:11014   */\n    tag_412:\n        /* \"#utility.yul\":10751:11020   */\n      pop\n        /* \"#utility.yul\":10700:11020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11026:11174   */\n    tag_278:\n        /* \"#utility.yul\":11128:11139   */\n      0x00\n        /* \"#utility.yul\":11165:11168   */\n      dup2\n        /* \"#utility.yul\":11150:11168   */\n      swap1\n      pop\n        /* \"#utility.yul\":11026:11174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11180:11557   */\n    tag_279:\n        /* \"#utility.yul\":11286:11289   */\n      0x00\n        /* \"#utility.yul\":11314:11353   */\n      tag_416\n        /* \"#utility.yul\":11347:11352   */\n      dup3\n        /* \"#utility.yul\":11314:11353   */\n      tag_252\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":11369:11458   */\n      tag_417\n        /* \"#utility.yul\":11451:11457   */\n      dup2\n        /* \"#utility.yul\":11446:11449   */\n      dup6\n        /* \"#utility.yul\":11369:11458   */\n      tag_278\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":11362:11458   */\n      swap4\n      pop\n        /* \"#utility.yul\":11467:11519   */\n      tag_418\n        /* \"#utility.yul\":11512:11518   */\n      dup2\n        /* \"#utility.yul\":11507:11510   */\n      dup6\n        /* \"#utility.yul\":11500:11504   */\n      0x20\n        /* \"#utility.yul\":11493:11498   */\n      dup7\n        /* \"#utility.yul\":11489:11505   */\n      add\n        /* \"#utility.yul\":11467:11519   */\n      tag_254\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":11544:11550   */\n      dup1\n        /* \"#utility.yul\":11539:11542   */\n      dup5\n        /* \"#utility.yul\":11535:11551   */\n      add\n        /* \"#utility.yul\":11528:11551   */\n      swap2\n      pop\n        /* \"#utility.yul\":11290:11557   */\n      pop\n        /* \"#utility.yul\":11180:11557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11563:11998   */\n    tag_176:\n        /* \"#utility.yul\":11743:11746   */\n      0x00\n        /* \"#utility.yul\":11765:11860   */\n      tag_420\n        /* \"#utility.yul\":11856:11859   */\n      dup3\n        /* \"#utility.yul\":11847:11853   */\n      dup6\n        /* \"#utility.yul\":11765:11860   */\n      tag_279\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":11758:11860   */\n      swap2\n      pop\n        /* \"#utility.yul\":11877:11972   */\n      tag_421\n        /* \"#utility.yul\":11968:11971   */\n      dup3\n        /* \"#utility.yul\":11959:11965   */\n      dup5\n        /* \"#utility.yul\":11877:11972   */\n      tag_279\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":11870:11972   */\n      swap2\n      pop\n        /* \"#utility.yul\":11989:11992   */\n      dup2\n        /* \"#utility.yul\":11982:11992   */\n      swap1\n      pop\n        /* \"#utility.yul\":11563:11998   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12004:12184   */\n    tag_280:\n        /* \"#utility.yul\":12052:12129   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12049:12050   */\n      0x00\n        /* \"#utility.yul\":12042:12130   */\n      mstore\n        /* \"#utility.yul\":12149:12153   */\n      0x11\n        /* \"#utility.yul\":12146:12147   */\n      0x04\n        /* \"#utility.yul\":12139:12154   */\n      mstore\n        /* \"#utility.yul\":12173:12177   */\n      0x24\n        /* \"#utility.yul\":12170:12171   */\n      0x00\n        /* \"#utility.yul\":12163:12178   */\n      revert\n        /* \"#utility.yul\":12190:12361   */\n    tag_185:\n        /* \"#utility.yul\":12229:12232   */\n      0x00\n        /* \"#utility.yul\":12252:12276   */\n      tag_424\n        /* \"#utility.yul\":12270:12275   */\n      dup3\n        /* \"#utility.yul\":12252:12276   */\n      tag_257\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":12243:12276   */\n      swap2\n      pop\n        /* \"#utility.yul\":12298:12302   */\n      0x00\n        /* \"#utility.yul\":12291:12296   */\n      dup3\n        /* \"#utility.yul\":12288:12303   */\n      eq\n        /* \"#utility.yul\":12285:12326   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":12306:12324   */\n      tag_426\n      tag_280\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":12285:12326   */\n    tag_425:\n        /* \"#utility.yul\":12353:12354   */\n      0x01\n        /* \"#utility.yul\":12346:12351   */\n      dup3\n        /* \"#utility.yul\":12342:12355   */\n      sub\n        /* \"#utility.yul\":12335:12355   */\n      swap1\n      pop\n        /* \"#utility.yul\":12190:12361   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12367:12465   */\n    tag_281:\n        /* \"#utility.yul\":12418:12424   */\n      0x00\n        /* \"#utility.yul\":12452:12457   */\n      dup2\n        /* \"#utility.yul\":12446:12458   */\n      mload\n        /* \"#utility.yul\":12436:12458   */\n      swap1\n      pop\n        /* \"#utility.yul\":12367:12465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12471:12639   */\n    tag_282:\n        /* \"#utility.yul\":12554:12565   */\n      0x00\n        /* \"#utility.yul\":12588:12594   */\n      dup3\n        /* \"#utility.yul\":12583:12586   */\n      dup3\n        /* \"#utility.yul\":12576:12595   */\n      mstore\n        /* \"#utility.yul\":12628:12632   */\n      0x20\n        /* \"#utility.yul\":12623:12626   */\n      dup3\n        /* \"#utility.yul\":12619:12633   */\n      add\n        /* \"#utility.yul\":12604:12633   */\n      swap1\n      pop\n        /* \"#utility.yul\":12471:12639   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12645:13005   */\n    tag_283:\n        /* \"#utility.yul\":12731:12734   */\n      0x00\n        /* \"#utility.yul\":12759:12797   */\n      tag_430\n        /* \"#utility.yul\":12791:12796   */\n      dup3\n        /* \"#utility.yul\":12759:12797   */\n      tag_281\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":12813:12883   */\n      tag_431\n        /* \"#utility.yul\":12876:12882   */\n      dup2\n        /* \"#utility.yul\":12871:12874   */\n      dup6\n        /* \"#utility.yul\":12813:12883   */\n      tag_282\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":12806:12883   */\n      swap4\n      pop\n        /* \"#utility.yul\":12892:12944   */\n      tag_432\n        /* \"#utility.yul\":12937:12943   */\n      dup2\n        /* \"#utility.yul\":12932:12935   */\n      dup6\n        /* \"#utility.yul\":12925:12929   */\n      0x20\n        /* \"#utility.yul\":12918:12923   */\n      dup7\n        /* \"#utility.yul\":12914:12930   */\n      add\n        /* \"#utility.yul\":12892:12944   */\n      tag_254\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":12969:12998   */\n      tag_433\n        /* \"#utility.yul\":12991:12997   */\n      dup2\n        /* \"#utility.yul\":12969:12998   */\n      tag_255\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":12964:12967   */\n      dup5\n        /* \"#utility.yul\":12960:12999   */\n      add\n        /* \"#utility.yul\":12953:12999   */\n      swap2\n      pop\n        /* \"#utility.yul\":12735:13005   */\n      pop\n        /* \"#utility.yul\":12645:13005   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13011:13651   */\n    tag_223:\n        /* \"#utility.yul\":13206:13210   */\n      0x00\n        /* \"#utility.yul\":13244:13247   */\n      0x80\n        /* \"#utility.yul\":13233:13242   */\n      dup3\n        /* \"#utility.yul\":13229:13248   */\n      add\n        /* \"#utility.yul\":13221:13248   */\n      swap1\n      pop\n        /* \"#utility.yul\":13258:13329   */\n      tag_435\n        /* \"#utility.yul\":13326:13327   */\n      0x00\n        /* \"#utility.yul\":13315:13324   */\n      dup4\n        /* \"#utility.yul\":13311:13328   */\n      add\n        /* \"#utility.yul\":13302:13308   */\n      dup8\n        /* \"#utility.yul\":13258:13329   */\n      tag_262\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":13339:13411   */\n      tag_436\n        /* \"#utility.yul\":13407:13409   */\n      0x20\n        /* \"#utility.yul\":13396:13405   */\n      dup4\n        /* \"#utility.yul\":13392:13410   */\n      add\n        /* \"#utility.yul\":13383:13389   */\n      dup7\n        /* \"#utility.yul\":13339:13411   */\n      tag_262\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":13421:13493   */\n      tag_437\n        /* \"#utility.yul\":13489:13491   */\n      0x40\n        /* \"#utility.yul\":13478:13487   */\n      dup4\n        /* \"#utility.yul\":13474:13492   */\n      add\n        /* \"#utility.yul\":13465:13471   */\n      dup6\n        /* \"#utility.yul\":13421:13493   */\n      tag_265\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":13540:13549   */\n      dup2\n        /* \"#utility.yul\":13534:13538   */\n      dup2\n        /* \"#utility.yul\":13530:13550   */\n      sub\n        /* \"#utility.yul\":13525:13527   */\n      0x60\n        /* \"#utility.yul\":13514:13523   */\n      dup4\n        /* \"#utility.yul\":13510:13528   */\n      add\n        /* \"#utility.yul\":13503:13551   */\n      mstore\n        /* \"#utility.yul\":13568:13644   */\n      tag_438\n        /* \"#utility.yul\":13639:13643   */\n      dup2\n        /* \"#utility.yul\":13630:13636   */\n      dup5\n        /* \"#utility.yul\":13568:13644   */\n      tag_283\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13560:13644   */\n      swap1\n      pop\n        /* \"#utility.yul\":13011:13651   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13657:13798   */\n    tag_284:\n        /* \"#utility.yul\":13713:13718   */\n      0x00\n        /* \"#utility.yul\":13744:13750   */\n      dup2\n        /* \"#utility.yul\":13738:13751   */\n      mload\n        /* \"#utility.yul\":13729:13751   */\n      swap1\n      pop\n        /* \"#utility.yul\":13760:13792   */\n      tag_440\n        /* \"#utility.yul\":13786:13791   */\n      dup2\n        /* \"#utility.yul\":13760:13792   */\n      tag_248\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":13657:13798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13804:14153   */\n    tag_227:\n        /* \"#utility.yul\":13873:13879   */\n      0x00\n        /* \"#utility.yul\":13922:13924   */\n      0x20\n        /* \"#utility.yul\":13910:13919   */\n      dup3\n        /* \"#utility.yul\":13901:13908   */\n      dup5\n        /* \"#utility.yul\":13897:13920   */\n      sub\n        /* \"#utility.yul\":13893:13925   */\n      slt\n        /* \"#utility.yul\":13890:14009   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":13928:14007   */\n      tag_443\n      tag_245\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":13890:14009   */\n    tag_442:\n        /* \"#utility.yul\":14048:14049   */\n      0x00\n        /* \"#utility.yul\":14073:14136   */\n      tag_444\n        /* \"#utility.yul\":14128:14135   */\n      dup5\n        /* \"#utility.yul\":14119:14125   */\n      dup3\n        /* \"#utility.yul\":14108:14117   */\n      dup6\n        /* \"#utility.yul\":14104:14126   */\n      add\n        /* \"#utility.yul\":14073:14136   */\n      tag_284\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":14063:14136   */\n      swap2\n      pop\n        /* \"#utility.yul\":14019:14146   */\n      pop\n        /* \"#utility.yul\":13804:14153   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d2d61f0203acf636a4b1060aaaa685106d1d2fb52d119e6452df59fc6ed2d2e664736f6c63430008080033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_378": {
									"entryPoint": null,
									"id": 378,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_387": {
									"entryPoint": 135,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 341,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:5",
														"type": ""
													}
												],
												"src": "580:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:5"
															},
															"nodeType": "YulIf",
															"src": "1030:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:5",
														"type": ""
													}
												],
												"src": "874:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:5",
														"type": ""
													}
												],
												"src": "1161:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:5"
															},
															"nodeType": "YulIf",
															"src": "1434:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:5",
														"type": ""
													}
												],
												"src": "1296:308:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1659:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1669:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1678:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1673:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1763:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1768:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1759:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1782:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1787:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1778:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1778:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1772:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1752:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1699:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1710:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1712:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1721:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1717:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1712:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1692:3:5",
																"statements": []
															},
															"src": "1688:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1835:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1885:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1890:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1881:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1881:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1816:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1819:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1813:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:13:5"
															},
															"nodeType": "YulIf",
															"src": "1810:101:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1646:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1651:6:5",
														"type": ""
													}
												],
												"src": "1610:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:326:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2028:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2053:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:49:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2037:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:66:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2028:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2119:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2142:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2157:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2146:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2209:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2188:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2202:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2181:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:25:5"
															},
															"nodeType": "YulIf",
															"src": "2178:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2331:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2299:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:39:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:39:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1991:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1996:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2004:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2012:5:5",
														"type": ""
													}
												],
												"src": "1923:421:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:282:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2486:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2488:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2488:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2488:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2473:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2461:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2461:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:35:5"
															},
															"nodeType": "YulIf",
															"src": "2447:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2578:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2582:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:99:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2623:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:90:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2614:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2415:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2423:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2431:5:5",
														"type": ""
													}
												],
												"src": "2364:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2839:739:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2885:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2887:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2869:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2856:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2852:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:32:5"
															},
															"nodeType": "YulIf",
															"src": "2849:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2978:291:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2993:38:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3017:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3028:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3013:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3013:17:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3007:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3007:24:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2997:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3078:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3080:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3080:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3080:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3058:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3047:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3044:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3175:84:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3231:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3242:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3227:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3251:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3185:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:74:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3175:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3279:292:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3294:39:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3318:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3329:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3314:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3314:18:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3308:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:25:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3298:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3380:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3382:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3382:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3382:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3352:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3360:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3349:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3346:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3477:84:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3533:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3544:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3529:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3529:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3553:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3487:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3487:74:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3477:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2801:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2812:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2824:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2832:6:5",
														"type": ""
													}
												],
												"src": "2725:853:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3612:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3629:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3632:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3622:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3622:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3726:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3729:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3719:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3719:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3750:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3743:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3584:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3821:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3831:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3845:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3831:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3862:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3892:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3888:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3866:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3939:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3953:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3967:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3975:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3963:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3963:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3953:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3919:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3912:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:26:5"
															},
															"nodeType": "YulIf",
															"src": "3909:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4042:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4056:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4056:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4056:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4006:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4029:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4037:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4026:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4026:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4003:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:38:5"
															},
															"nodeType": "YulIf",
															"src": "4000:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3805:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3814:6:5",
														"type": ""
													}
												],
												"src": "3770:320:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001ca938038062001ca98339818101604052810190620000379190620002d9565b81600290805190602001906200004f9291906200008c565b508060039080519060200190620000689291906200008c565b50620000796200008760201b60201c565b6000819055505050620003c3565b600090565b8280546200009a906200038d565b90600052602060002090601f016020900481019282620000be57600085556200010a565b82601f10620000d957805160ff19168380011785556200010a565b828001600101855582156200010a579182015b8281111562000109578251825591602001919060010190620000ec565b5b5090506200011991906200011d565b5090565b5b80821115620001385760008160009055506001016200011e565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001a5826200015a565b810181811067ffffffffffffffff82111715620001c757620001c66200016b565b5b80604052505050565b6000620001dc6200013c565b9050620001ea82826200019a565b919050565b600067ffffffffffffffff8211156200020d576200020c6200016b565b5b62000218826200015a565b9050602081019050919050565b60005b838110156200024557808201518184015260208101905062000228565b8381111562000255576000848401525b50505050565b6000620002726200026c84620001ef565b620001d0565b90508281526020810184848401111562000291576200029062000155565b5b6200029e84828562000225565b509392505050565b600082601f830112620002be57620002bd62000150565b5b8151620002d08482602086016200025b565b91505092915050565b60008060408385031215620002f357620002f262000146565b5b600083015167ffffffffffffffff8111156200031457620003136200014b565b5b6200032285828601620002a6565b925050602083015167ffffffffffffffff8111156200034657620003456200014b565b5b6200035485828601620002a6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003a657607f821691505b60208210811415620003bd57620003bc6200035e565b5b50919050565b6118d680620003d36000396000f3fe6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb465146102ab578063b88d4fde146102d4578063c87b56dd146102f0578063e985e9c51461032d576100dd565b80636352211e1461020657806370a082311461024357806395d89b4114610280576100dd565b8063095ea7b3116100bb578063095ea7b31461018757806318160ddd146101a357806323b872dd146101ce57806342842e0e146101ea576100dd565b806301ffc9a7146100e257806306fdde031461011f578063081812fc1461014a575b600080fd5b3480156100ee57600080fd5b506101096004803603810190610104919061114c565b61036a565b6040516101169190611194565b60405180910390f35b34801561012b57600080fd5b506101346103fc565b6040516101419190611248565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c91906112a0565b61048e565b60405161017e919061130e565b60405180910390f35b6101a1600480360381019061019c9190611355565b6104ec565b005b3480156101af57600080fd5b506101b86104fc565b6040516101c591906113a4565b60405180910390f35b6101e860048036038101906101e391906113bf565b610513565b005b61020460048036038101906101ff91906113bf565b6107d7565b005b34801561021257600080fd5b5061022d600480360381019061022891906112a0565b6107f7565b60405161023a919061130e565b60405180910390f35b34801561024f57600080fd5b5061026a60048036038101906102659190611412565b610809565b60405161027791906113a4565b60405180910390f35b34801561028c57600080fd5b506102956108a1565b6040516102a29190611248565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd919061146b565b610933565b005b6102ee60048036038101906102e991906115e0565b610a3e565b005b3480156102fc57600080fd5b50610317600480360381019061031291906112a0565b610a90565b6040516103249190611248565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f9190611663565b610b0e565b6040516103619190611194565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461040b906116d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610437906116d2565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b600061049982610ba2565b6104ae576104ad63cf4700e460e01b610c1c565b5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6104f882826001610c26565b5050565b6000610506610d55565b6001546000540303905090565b600061051e82610d5a565b905073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff161693508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105935761059263a114810060e01b610c1c565b5b60008061059f84610e56565b915091506105b581876105b0610e7d565b610e85565b6105e0576105ca866105c5610e7d565b610b0e565b6105df576105de6359c896be60e01b610c1c565b5b5b6105ed8686866001610ec9565b80156105f857600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506106c6856106a2888887610ecf565b7c020000000000000000000000000000000000000000000000000000000017610ef7565b600460008681526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008416141561074e57600060018501905060006004600083815260200190815260200160002054141561074c57600054811461074b578360046000838152602001908152602001600020819055505b5b505b600073ffffffffffffffffffffffffffffffffffffffff8673ffffffffffffffffffffffffffffffffffffffff161690508481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a460008114156107c1576107c063ea553b3460e01b610c1c565b5b6107ce8787876001610f22565b50505050505050565b6107f283838360405180602001604052806000815250610a3e565b505050565b600061080282610d5a565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108505761084f638f4eb60460e01b610c1c565b5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b6060600380546108b0906116d2565b80601f01602080910402602001604051908101604052809291908181526020018280546108dc906116d2565b80156109295780601f106108fe57610100808354040283529160200191610929565b820191906000526020600020905b81548152906001019060200180831161090c57829003601f168201915b5050505050905090565b8060076000610940610e7d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166109ed610e7d565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a329190611194565b60405180910390a35050565b610a49848484610513565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610a8a57610a7484848484610f28565b610a8957610a8863d1a57ed660e01b610c1c565b5b5b50505050565b6060610a9b82610ba2565b610ab057610aaf63a14c4b5060e01b610c1c565b5b6000610aba611067565b9050600081511415610adb5760405180602001604052806000815250610b06565b80610ae58461107e565b604051602001610af6929190611740565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610bad610d55565b11610c1757600054821015610c165760005b600060046000858152602001908152602001600020549150811415610bef5782610be890611793565b9250610bbf565b60007c01000000000000000000000000000000000000000000000000000000008216149150505b5b919050565b8060005260046000fd5b6000610c31836107f7565b9050818015610c7357508073ffffffffffffffffffffffffffffffffffffffff16610c5a610e7d565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610c9f57610c8981610c84610e7d565b610b0e565b610c9e57610c9d63cfb3b94260e01b610c1c565b5b5b836006600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a450505050565b600090565b600081610d65610d55565b11610e4057600460008381526020019081526020016000205490506000811415610e12576000548210610da357610da263df2d9b4260e01b610c1c565b5b5b60046000836001900393508381526020019081526020016000205490506000811415610dcf57610e0d565b60007c010000000000000000000000000000000000000000000000000000000082161415610dfc57610e51565b610e0c63df2d9b4260e01b610c1c565b5b610da4565b60007c010000000000000000000000000000000000000000000000000000000082161415610e3f57610e51565b5b610e5063df2d9b4260e01b610c1c565b5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610ee68686846110d7565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610f4e610e7d565b8786866040518563ffffffff1660e01b8152600401610f709493929190611812565b602060405180830381600087803b158015610f8a57600080fd5b505af1925050508015610fbb57506040513d601f19601f82011682018060405250810190610fb89190611873565b60015b611014573d8060008114610feb576040519150601f19603f3d011682016040523d82523d6000602084013e610ff0565b606091505b5060008151141561100c5761100b63d1a57ed660e01b610c1c565b5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b6001156110c257600184039350600a81066030018453600a81049050806110bd576110c2565b611097565b50828103602084039350808452505050919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611129816110f4565b811461113457600080fd5b50565b60008135905061114681611120565b92915050565b600060208284031215611162576111616110ea565b5b600061117084828501611137565b91505092915050565b60008115159050919050565b61118e81611179565b82525050565b60006020820190506111a96000830184611185565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111e95780820151818401526020810190506111ce565b838111156111f8576000848401525b50505050565b6000601f19601f8301169050919050565b600061121a826111af565b61122481856111ba565b93506112348185602086016111cb565b61123d816111fe565b840191505092915050565b60006020820190508181036000830152611262818461120f565b905092915050565b6000819050919050565b61127d8161126a565b811461128857600080fd5b50565b60008135905061129a81611274565b92915050565b6000602082840312156112b6576112b56110ea565b5b60006112c48482850161128b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112f8826112cd565b9050919050565b611308816112ed565b82525050565b600060208201905061132360008301846112ff565b92915050565b611332816112ed565b811461133d57600080fd5b50565b60008135905061134f81611329565b92915050565b6000806040838503121561136c5761136b6110ea565b5b600061137a85828601611340565b925050602061138b8582860161128b565b9150509250929050565b61139e8161126a565b82525050565b60006020820190506113b96000830184611395565b92915050565b6000806000606084860312156113d8576113d76110ea565b5b60006113e686828701611340565b93505060206113f786828701611340565b92505060406114088682870161128b565b9150509250925092565b600060208284031215611428576114276110ea565b5b600061143684828501611340565b91505092915050565b61144881611179565b811461145357600080fd5b50565b6000813590506114658161143f565b92915050565b60008060408385031215611482576114816110ea565b5b600061149085828601611340565b92505060206114a185828601611456565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114ed826111fe565b810181811067ffffffffffffffff8211171561150c5761150b6114b5565b5b80604052505050565b600061151f6110e0565b905061152b82826114e4565b919050565b600067ffffffffffffffff82111561154b5761154a6114b5565b5b611554826111fe565b9050602081019050919050565b82818337600083830152505050565b600061158361157e84611530565b611515565b90508281526020810184848401111561159f5761159e6114b0565b5b6115aa848285611561565b509392505050565b600082601f8301126115c7576115c66114ab565b5b81356115d7848260208601611570565b91505092915050565b600080600080608085870312156115fa576115f96110ea565b5b600061160887828801611340565b945050602061161987828801611340565b935050604061162a8782880161128b565b925050606085013567ffffffffffffffff81111561164b5761164a6110ef565b5b611657878288016115b2565b91505092959194509250565b6000806040838503121561167a576116796110ea565b5b600061168885828601611340565b925050602061169985828601611340565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116ea57607f821691505b602082108114156116fe576116fd6116a3565b5b50919050565b600081905092915050565b600061171a826111af565b6117248185611704565b93506117348185602086016111cb565b80840191505092915050565b600061174c828561170f565b9150611758828461170f565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061179e8261126a565b915060008214156117b2576117b1611764565b5b600182039050919050565b600081519050919050565b600082825260208201905092915050565b60006117e4826117bd565b6117ee81856117c8565b93506117fe8185602086016111cb565b611807816111fe565b840191505092915050565b600060808201905061182760008301876112ff565b61183460208301866112ff565b6118416040830185611395565b818103606083015261185381846117d9565b905095945050505050565b60008151905061186d81611120565b92915050565b600060208284031215611889576118886110ea565b5b60006118978482850161185e565b9150509291505056fea2646970667358221220d2d61f0203acf636a4b1060aaaa685106d1d2fb52d119e6452df59fc6ed2d2e664736f6c63430008080033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1CA9 CODESIZE SUB DUP1 PUSH3 0x1CA9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2D9 JUMP JUMPDEST DUP2 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x8C JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x8C JUMP JUMPDEST POP PUSH3 0x79 PUSH3 0x87 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x3C3 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x9A SWAP1 PUSH3 0x38D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xBE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x10A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xD9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x10A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x10A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x109 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x119 SWAP2 SWAP1 PUSH3 0x11D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x138 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x11E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x1A5 DUP3 PUSH3 0x15A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1C7 JUMPI PUSH3 0x1C6 PUSH3 0x16B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DC PUSH3 0x13C JUMP JUMPDEST SWAP1 POP PUSH3 0x1EA DUP3 DUP3 PUSH3 0x19A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x20D JUMPI PUSH3 0x20C PUSH3 0x16B JUMP JUMPDEST JUMPDEST PUSH3 0x218 DUP3 PUSH3 0x15A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x245 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x228 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x255 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x272 PUSH3 0x26C DUP5 PUSH3 0x1EF JUMP JUMPDEST PUSH3 0x1D0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x291 JUMPI PUSH3 0x290 PUSH3 0x155 JUMP JUMPDEST JUMPDEST PUSH3 0x29E DUP5 DUP3 DUP6 PUSH3 0x225 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2BE JUMPI PUSH3 0x2BD PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x25B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2F3 JUMPI PUSH3 0x2F2 PUSH3 0x146 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x314 JUMPI PUSH3 0x313 PUSH3 0x14B JUMP JUMPDEST JUMPDEST PUSH3 0x322 DUP6 DUP3 DUP7 ADD PUSH3 0x2A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x346 JUMPI PUSH3 0x345 PUSH3 0x14B JUMP JUMPDEST JUMPDEST PUSH3 0x354 DUP6 DUP3 DUP7 ADD PUSH3 0x2A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3BD JUMPI PUSH3 0x3BC PUSH3 0x35E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D6 DUP1 PUSH3 0x3D3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x32D JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x280 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EA JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x1663 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C5 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F5 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x16D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x484 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x467 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x4AE JUMPI PUSH2 0x4AD PUSH4 0xCF4700E4 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F8 DUP3 DUP3 PUSH1 0x1 PUSH2 0xC26 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E DUP3 PUSH2 0xD5A JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP4 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x593 JUMPI PUSH2 0x592 PUSH4 0xA1148100 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x59F DUP5 PUSH2 0xE56 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x5B5 DUP2 DUP8 PUSH2 0x5B0 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x5E0 JUMPI PUSH2 0x5CA DUP7 PUSH2 0x5C5 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0x5DF JUMPI PUSH2 0x5DE PUSH4 0x59C896BE PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x5ED DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xEC9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x6C6 DUP6 PUSH2 0x6A2 DUP9 DUP9 DUP8 PUSH2 0xECF JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND EQ ISZERO PUSH2 0x74E JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x74B JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP1 POP DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x7C1 JUMPI PUSH2 0x7C0 PUSH4 0xEA553B34 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST PUSH2 0x7CE DUP8 DUP8 DUP8 PUSH1 0x1 PUSH2 0xF22 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7F2 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA3E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x802 DUP3 PUSH2 0xD5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x850 JUMPI PUSH2 0x84F PUSH4 0x8F4EB604 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x8B0 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8DC SWAP1 PUSH2 0x16D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x929 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x929 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x940 PUSH2 0xE7D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9ED PUSH2 0xE7D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA32 SWAP2 SWAP1 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA49 DUP5 DUP5 DUP5 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xA8A JUMPI PUSH2 0xA74 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0xA89 JUMPI PUSH2 0xA88 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA9B DUP3 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0xAB0 JUMPI PUSH2 0xAAF PUSH4 0xA14C4B50 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xABA PUSH2 0x1067 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB06 JUMP JUMPDEST DUP1 PUSH2 0xAE5 DUP5 PUSH2 0x107E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAF6 SWAP3 SWAP2 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xBAD PUSH2 0xD55 JUMP JUMPDEST GT PUSH2 0xC17 JUMPI PUSH1 0x0 SLOAD DUP3 LT ISZERO PUSH2 0xC16 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP DUP2 EQ ISZERO PUSH2 0xBEF JUMPI DUP3 PUSH2 0xBE8 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP3 POP PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ SWAP2 POP POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC31 DUP4 PUSH2 0x7F7 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0xC73 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC5A PUSH2 0xE7D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xC9F JUMPI PUSH2 0xC89 DUP2 PUSH2 0xC84 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0xC9E JUMPI PUSH2 0xC9D PUSH4 0xCFB3B942 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST JUMPDEST DUP4 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xD65 PUSH2 0xD55 JUMP JUMPDEST GT PUSH2 0xE40 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xE12 JUMPI PUSH1 0x0 SLOAD DUP3 LT PUSH2 0xDA3 JUMPI PUSH2 0xDA2 PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xDCF JUMPI PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0xDFC JUMPI PUSH2 0xE51 JUMP JUMPDEST PUSH2 0xE0C PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0xE3F JUMPI PUSH2 0xE51 JUMP JUMPDEST JUMPDEST PUSH2 0xE50 PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xEE6 DUP7 DUP7 DUP5 PUSH2 0x10D7 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xF4E PUSH2 0xE7D JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF70 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFBB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB8 SWAP2 SWAP1 PUSH2 0x1873 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1014 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFEB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFF0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x100C JUMPI PUSH2 0x100B PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x10C2 JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x10BD JUMPI PUSH2 0x10C2 JUMP JUMPDEST PUSH2 0x1097 JUMP JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1129 DUP2 PUSH2 0x10F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1146 DUP2 PUSH2 0x1120 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1162 JUMPI PUSH2 0x1161 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1170 DUP5 DUP3 DUP6 ADD PUSH2 0x1137 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x118E DUP2 PUSH2 0x1179 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1185 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11E9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11CE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x11F8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121A DUP3 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x1224 DUP2 DUP6 PUSH2 0x11BA JUMP JUMPDEST SWAP4 POP PUSH2 0x1234 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11CB JUMP JUMPDEST PUSH2 0x123D DUP2 PUSH2 0x11FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1262 DUP2 DUP5 PUSH2 0x120F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127D DUP2 PUSH2 0x126A JUMP JUMPDEST DUP2 EQ PUSH2 0x1288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x129A DUP2 PUSH2 0x1274 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B6 JUMPI PUSH2 0x12B5 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12C4 DUP5 DUP3 DUP6 ADD PUSH2 0x128B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F8 DUP3 PUSH2 0x12CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1308 DUP2 PUSH2 0x12ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1323 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1332 DUP2 PUSH2 0x12ED JUMP JUMPDEST DUP2 EQ PUSH2 0x133D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x134F DUP2 PUSH2 0x1329 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x136C JUMPI PUSH2 0x136B PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x137A DUP6 DUP3 DUP7 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x138B DUP6 DUP3 DUP7 ADD PUSH2 0x128B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x139E DUP2 PUSH2 0x126A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1395 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13D8 JUMPI PUSH2 0x13D7 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13E6 DUP7 DUP3 DUP8 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13F7 DUP7 DUP3 DUP8 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1408 DUP7 DUP3 DUP8 ADD PUSH2 0x128B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1428 JUMPI PUSH2 0x1427 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1436 DUP5 DUP3 DUP6 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1448 DUP2 PUSH2 0x1179 JUMP JUMPDEST DUP2 EQ PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1465 DUP2 PUSH2 0x143F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1481 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1490 DUP6 DUP3 DUP7 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A1 DUP6 DUP3 DUP7 ADD PUSH2 0x1456 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x14ED DUP3 PUSH2 0x11FE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x150C JUMPI PUSH2 0x150B PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x151F PUSH2 0x10E0 JUMP JUMPDEST SWAP1 POP PUSH2 0x152B DUP3 DUP3 PUSH2 0x14E4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x154B JUMPI PUSH2 0x154A PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH2 0x1554 DUP3 PUSH2 0x11FE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1583 PUSH2 0x157E DUP5 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x1515 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x159F JUMPI PUSH2 0x159E PUSH2 0x14B0 JUMP JUMPDEST JUMPDEST PUSH2 0x15AA DUP5 DUP3 DUP6 PUSH2 0x1561 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15C7 JUMPI PUSH2 0x15C6 PUSH2 0x14AB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15D7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1570 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15FA JUMPI PUSH2 0x15F9 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1608 DUP8 DUP3 DUP9 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1619 DUP8 DUP3 DUP9 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x162A DUP8 DUP3 DUP9 ADD PUSH2 0x128B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x164B JUMPI PUSH2 0x164A PUSH2 0x10EF JUMP JUMPDEST JUMPDEST PUSH2 0x1657 DUP8 DUP3 DUP9 ADD PUSH2 0x15B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x167A JUMPI PUSH2 0x1679 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1688 DUP6 DUP3 DUP7 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1699 DUP6 DUP3 DUP7 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16EA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x16FE JUMPI PUSH2 0x16FD PUSH2 0x16A3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171A DUP3 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x1724 DUP2 DUP6 PUSH2 0x1704 JUMP JUMPDEST SWAP4 POP PUSH2 0x1734 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11CB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x174C DUP3 DUP6 PUSH2 0x170F JUMP JUMPDEST SWAP2 POP PUSH2 0x1758 DUP3 DUP5 PUSH2 0x170F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x179E DUP3 PUSH2 0x126A JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x17B2 JUMPI PUSH2 0x17B1 PUSH2 0x1764 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E4 DUP3 PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x17EE DUP2 DUP6 PUSH2 0x17C8 JUMP JUMPDEST SWAP4 POP PUSH2 0x17FE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11CB JUMP JUMPDEST PUSH2 0x1807 DUP2 PUSH2 0x11FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1827 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x12FF JUMP JUMPDEST PUSH2 0x1834 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x12FF JUMP JUMPDEST PUSH2 0x1841 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1395 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1853 DUP2 DUP5 PUSH2 0x17D9 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x186D DUP2 PUSH2 0x1120 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1889 JUMPI PUSH2 0x1888 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1897 DUP5 DUP3 DUP6 ADD PUSH2 0x185E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xD6 0x1F MUL SUB 0xAC 0xF6 CALLDATASIZE LOG4 0xB1 MOD EXP 0xAA 0xA6 DUP6 LT PUSH14 0x1D2FB52D119E6452DF59FC6ED2D2 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ",
							"sourceMap": "895:42638:3:-:0;;;4946:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5020:5;5012;:13;;;;;;;;;;;;:::i;:::-;;5045:7;5035;:17;;;;;;;;;;;;:::i;:::-;;5078:15;:13;;;:15;;:::i;:::-;5062:13;:31;;;;4946:154;;895:42638;;5426:90;5482:7;5426:90;:::o;895:42638::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:5:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;895:42638:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1309": {
									"entryPoint": 3874,
									"id": 1309,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1750": {
									"entryPoint": 3110,
									"id": 1750,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_649": {
									"entryPoint": 4199,
									"id": 649,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1296": {
									"entryPoint": 3785,
									"id": 1296,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1365": {
									"entryPoint": 3880,
									"id": 1365,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1018": {
									"entryPoint": 2978,
									"id": 1018,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1975": {
									"entryPoint": 4311,
									"id": 1975,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_1051": {
									"entryPoint": 3670,
									"id": 1051,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_1032": {
									"entryPoint": 3717,
									"id": 1032,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_2018": {
									"entryPoint": 3709,
									"id": 2018,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2008": {
									"entryPoint": 3791,
									"id": 2008,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_880": {
									"entryPoint": 3831,
									"id": 880,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_814": {
									"entryPoint": 3418,
									"id": 814,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revert_2036": {
									"entryPoint": 3100,
									"id": 2036,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_startTokenId_387": {
									"entryPoint": 3413,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_2028": {
									"entryPoint": 4222,
									"id": 2028,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_906": {
									"entryPoint": 1260,
									"id": 906,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_462": {
									"entryPoint": 2057,
									"id": 462,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_931": {
									"entryPoint": 1166,
									"id": 931,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_975": {
									"entryPoint": 2830,
									"id": 975,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_585": {
									"entryPoint": 1020,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_669": {
									"entryPoint": 2039,
									"id": 669,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1243": {
									"entryPoint": 2007,
									"id": 1243,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1283": {
									"entryPoint": 2622,
									"id": 1283,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_957": {
									"entryPoint": 2355,
									"id": 957,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_575": {
									"entryPoint": 874,
									"id": 575,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_595": {
									"entryPoint": 2209,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_640": {
									"entryPoint": 2704,
									"id": 640,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_412": {
									"entryPoint": 1276,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1224": {
									"entryPoint": 1299,
									"id": 1224,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5488,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 6238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5952,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6162,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4320,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 5473,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 4555,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 6035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 5988,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5795,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5301,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5291,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5296,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4335,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14156:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:5",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:5",
														"type": ""
													}
												],
												"src": "334:149:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:5"
															},
															"nodeType": "YulIf",
															"src": "541:62:5"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:5",
														"type": ""
													}
												],
												"src": "489:120:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:5"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:5",
														"type": ""
													}
												],
												"src": "615:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:5"
															},
															"nodeType": "YulIf",
															"src": "833:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:5",
														"type": ""
													}
												],
												"src": "758:327:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:5",
														"type": ""
													}
												],
												"src": "1091:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:5",
														"type": ""
													}
												],
												"src": "1187:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:5",
														"type": ""
													}
												],
												"src": "1302:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:5",
														"type": ""
													}
												],
												"src": "1518:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:5",
														"type": ""
													}
												],
												"src": "1623:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1847:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1857:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1866:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1861:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1926:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1951:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1956:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1947:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1947:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1970:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1975:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1966:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1966:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1960:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1940:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1940:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1887:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1884:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1884:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1898:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1900:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1909:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1905:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1905:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1900:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1880:3:5",
																"statements": []
															},
															"src": "1876:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2023:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2073:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2078:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2069:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2069:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2087:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2062:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2062:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2062:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2004:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2007:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2001:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:13:5"
															},
															"nodeType": "YulIf",
															"src": "1998:101:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1829:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1834:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1839:6:5",
														"type": ""
													}
												],
												"src": "1798:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2159:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2169:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2187:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2194:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2199:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2199:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2169:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2142:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2152:6:5",
														"type": ""
													}
												],
												"src": "2111:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2311:272:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2321:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2368:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2335:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2325:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2383:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2449:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2454:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2390:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2496:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2503:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2492:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2492:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2510:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2515:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2470:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2470:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2531:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2569:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2547:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2547:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2538:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2292:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2299:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2307:3:5",
														"type": ""
													}
												],
												"src": "2219:364:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:195:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2717:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2729:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2740:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2725:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2717:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2783:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2789:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2779:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2753:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2753:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2809:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2881:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2890:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2817:63:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2809:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2679:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2691:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2702:4:5",
														"type": ""
													}
												],
												"src": "2589:313:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2974:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2963:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2935:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2945:7:5",
														"type": ""
													}
												],
												"src": "2908:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3091:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3100:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3103:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3093:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3093:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3093:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3057:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3082:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3064:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3064:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3054:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:43:5"
															},
															"nodeType": "YulIf",
															"src": "3044:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3027:5:5",
														"type": ""
													}
												],
												"src": "2991:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3171:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3181:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3203:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3190:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3181:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3246:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3219:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3219:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3149:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3157:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3165:5:5",
														"type": ""
													}
												],
												"src": "3119:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3330:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3376:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3378:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3378:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3378:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3351:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3360:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3347:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3347:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3372:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3343:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:32:5"
															},
															"nodeType": "YulIf",
															"src": "3340:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3469:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3484:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3498:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3488:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3513:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3559:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3544:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3523:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3523:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3513:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3300:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3311:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3323:6:5",
														"type": ""
													}
												],
												"src": "3264:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3644:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3654:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3669:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3676:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3665:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3665:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3654:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3626:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3636:7:5",
														"type": ""
													}
												],
												"src": "3599:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3776:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3786:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3815:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3797:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3786:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3758:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3768:7:5",
														"type": ""
													}
												],
												"src": "3731:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3915:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3938:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3920:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3920:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3908:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3908:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3908:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3886:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3893:3:5",
														"type": ""
													}
												],
												"src": "3833:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4055:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4065:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4077:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4088:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4073:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4065:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4145:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4158:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4169:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4154:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4154:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4101:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4101:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4101:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4027:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4039:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4050:4:5",
														"type": ""
													}
												],
												"src": "3957:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4228:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4285:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4294:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4297:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4287:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4287:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4287:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4251:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4276:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4258:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4258:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4248:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4248:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:43:5"
															},
															"nodeType": "YulIf",
															"src": "4238:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4221:5:5",
														"type": ""
													}
												],
												"src": "4185:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4365:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4375:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4397:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4384:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4384:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4375:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4440:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4413:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4413:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4343:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4351:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4359:5:5",
														"type": ""
													}
												],
												"src": "4313:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4541:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4587:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4589:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4589:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4589:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4562:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4571:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4558:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4558:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4583:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4554:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4554:32:5"
															},
															"nodeType": "YulIf",
															"src": "4551:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "4680:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4695:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4699:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4724:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4759:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4770:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4755:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4755:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4779:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4734:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4734:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4724:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4807:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4822:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4836:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4826:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4852:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4887:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4898:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4883:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4883:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4907:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4862:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4862:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4852:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4503:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4514:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4526:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4534:6:5",
														"type": ""
													}
												],
												"src": "4458:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5003:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5020:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5043:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5025:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5025:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5013:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5013:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5013:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4991:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4998:3:5",
														"type": ""
													}
												],
												"src": "4938:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5160:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5170:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5182:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5193:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5178:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5178:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5170:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5250:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5263:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5274:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5259:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5259:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5206:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5206:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5206:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5132:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5144:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5155:4:5",
														"type": ""
													}
												],
												"src": "5062:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5390:519:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5436:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5438:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5438:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5438:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5411:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5420:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5407:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5407:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5432:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5403:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5403:32:5"
															},
															"nodeType": "YulIf",
															"src": "5400:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "5529:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5544:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5558:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5548:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5573:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5608:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5619:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5604:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5604:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5628:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5583:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5583:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5573:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5656:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5671:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5685:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5675:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5701:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5736:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5747:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5732:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5732:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5756:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5711:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5711:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5701:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5784:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5799:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5803:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5829:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5864:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5875:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5860:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5860:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5884:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5839:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5839:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5829:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5344:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5355:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5367:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5375:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5383:6:5",
														"type": ""
													}
												],
												"src": "5290:619:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5981:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6027:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6029:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6029:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6029:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6002:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6011:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5998:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5998:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6023:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5994:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:32:5"
															},
															"nodeType": "YulIf",
															"src": "5991:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "6120:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6135:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6149:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6139:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6164:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6199:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6210:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6195:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6195:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6219:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6174:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6174:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6164:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5951:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5962:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5974:6:5",
														"type": ""
													}
												],
												"src": "5915:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6290:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6344:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6353:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6356:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6346:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6346:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6346:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6313:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6335:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6320:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6320:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6310:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6310:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6303:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:40:5"
															},
															"nodeType": "YulIf",
															"src": "6300:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6283:5:5",
														"type": ""
													}
												],
												"src": "6250:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6421:84:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6431:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6453:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6440:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6431:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6493:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6469:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6469:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6469:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6399:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6407:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6415:5:5",
														"type": ""
													}
												],
												"src": "6372:133:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6591:388:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6637:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6639:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6639:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6639:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6612:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6621:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6608:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6633:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6604:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6604:32:5"
															},
															"nodeType": "YulIf",
															"src": "6601:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "6730:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6745:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6759:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6749:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6774:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6809:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6820:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6805:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6805:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6829:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6784:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6784:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6774:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6857:115:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6872:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6886:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6876:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6902:60:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6934:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6945:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6930:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6930:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6954:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6912:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6912:50:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6902:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6553:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6564:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6576:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6584:6:5",
														"type": ""
													}
												],
												"src": "6511:468:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7074:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7091:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7094:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7084:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6985:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7197:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7214:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7217:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7207:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7207:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7108:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7259:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7276:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7279:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7269:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7269:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7269:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7373:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7376:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7366:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7397:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7400:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7390:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7231:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7460:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7470:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7492:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7522:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7500:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7500:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7488:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7474:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7641:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7641:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7594:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7579:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7579:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7618:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7630:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7615:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7576:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7576:62:5"
															},
															"nodeType": "YulIf",
															"src": "7573:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7677:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7681:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7670:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7670:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7446:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7454:4:5",
														"type": ""
													}
												],
												"src": "7417:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7745:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7755:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7765:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7765:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7755:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7814:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7822:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7794:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7794:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7729:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7738:6:5",
														"type": ""
													}
												],
												"src": "7704:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7905:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8010:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8012:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8012:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8012:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7982:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7990:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7979:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7979:30:5"
															},
															"nodeType": "YulIf",
															"src": "7976:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8072:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8050:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8050:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8042:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8116:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8128:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8134:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8124:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8116:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7889:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7900:4:5",
														"type": ""
													}
												],
												"src": "7839:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8203:103:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8226:3:5"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8231:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8236:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8213:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8213:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8213:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8284:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8289:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8280:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8280:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8298:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8273:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8273:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8273:27:5"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8185:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8190:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8195:6:5",
														"type": ""
													}
												],
												"src": "8152:154:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8395:327:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8405:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8471:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8430:40:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8430:48:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8414:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:65:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8405:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8495:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8502:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8488:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8488:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8488:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8518:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8533:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8540:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8529:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8529:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8522:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8583:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8585:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8585:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8585:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8564:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8569:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8560:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8560:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8578:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8557:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8557:25:5"
															},
															"nodeType": "YulIf",
															"src": "8554:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8699:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8704:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8709:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8675:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8675:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8675:41:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8368:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8373:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8381:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8389:5:5",
														"type": ""
													}
												],
												"src": "8312:410:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8802:277:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8851:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8853:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8853:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8853:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8830:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8838:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8826:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8826:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8845:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8822:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8822:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8815:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8815:35:5"
															},
															"nodeType": "YulIf",
															"src": "8812:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8943:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8970:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8957:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8957:20:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8947:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8986:87:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9046:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9054:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9042:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9042:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9061:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9069:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8995:46:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8995:78:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8986:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8780:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8788:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8796:5:5",
														"type": ""
													}
												],
												"src": "8741:338:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9211:817:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9258:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9260:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9260:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9260:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9232:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9241:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9228:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9228:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9253:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9224:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:33:5"
															},
															"nodeType": "YulIf",
															"src": "9221:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "9351:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9366:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9380:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9370:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9395:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9430:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9441:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9426:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9426:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9450:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9405:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9405:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9395:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9478:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9493:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9507:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9497:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9523:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9558:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9569:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9554:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9554:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9578:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9533:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9533:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9523:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9606:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9621:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9635:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9625:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9651:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9686:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9697:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9682:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9682:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9706:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9661:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9661:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9651:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9734:287:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9749:46:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9780:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9791:2:5",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9776:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9776:18:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9763:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9763:32:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9753:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9842:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9844:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9844:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9844:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9814:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9822:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9811:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9811:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "9808:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9939:72:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9983:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9994:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9979:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9979:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10003:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9949:29:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9949:62:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9939:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9157:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9168:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9180:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9188:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9196:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9204:6:5",
														"type": ""
													}
												],
												"src": "9085:943:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10117:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10163:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10165:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10165:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10165:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10138:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10147:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10134:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10134:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10159:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10130:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10130:32:5"
															},
															"nodeType": "YulIf",
															"src": "10127:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "10256:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10271:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10285:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10275:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10300:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10335:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10346:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10331:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10331:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10355:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10310:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10310:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10300:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10383:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10398:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10412:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10402:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10428:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10463:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10474:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10459:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10459:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10483:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10438:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10438:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10428:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10079:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10090:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10102:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10110:6:5",
														"type": ""
													}
												],
												"src": "10034:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10542:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10559:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10562:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10552:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10552:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10552:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10656:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10659:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10649:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10683:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10673:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10673:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10673:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10514:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10751:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10761:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10775:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10781:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10771:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10771:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10761:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10792:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10822:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10828:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10818:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10818:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10796:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10869:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10883:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10897:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10905:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10893:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10893:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10883:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10849:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10842:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10842:26:5"
															},
															"nodeType": "YulIf",
															"src": "10839:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10972:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10986:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10986:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10986:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10936:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10959:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10967:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10956:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10956:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10933:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10933:38:5"
															},
															"nodeType": "YulIf",
															"src": "10930:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10735:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10744:6:5",
														"type": ""
													}
												],
												"src": "10700:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11140:34:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11150:18:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11165:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11150:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11112:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11117:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11128:11:5",
														"type": ""
													}
												],
												"src": "11026:148:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11290:267:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11300:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11347:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11314:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11314:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11304:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11362:96:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11446:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11451:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11369:76:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11369:89:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11362:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11493:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11500:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11489:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11489:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11507:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11512:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11467:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11467:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11467:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11528:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11539:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11544:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11535:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11535:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11528:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11271:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11278:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11286:3:5",
														"type": ""
													}
												],
												"src": "11180:377:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11747:251:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11758:102:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11847:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11856:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11765:81:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11765:95:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11758:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11870:102:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11959:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11968:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11877:81:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11877:95:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11870:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11982:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11989:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11982:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11718:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11724:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11732:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11743:3:5",
														"type": ""
													}
												],
												"src": "11563:435:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12032:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12049:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12052:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12042:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12042:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12042:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12146:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12149:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12139:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12139:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12139:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12170:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12173:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12163:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12163:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12163:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12004:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12233:128:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12243:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12270:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12252:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12252:24:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12243:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12304:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12306:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12306:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12306:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12291:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12298:4:5",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12288:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12288:15:5"
															},
															"nodeType": "YulIf",
															"src": "12285:41:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12335:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12346:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12353:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12342:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12342:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12335:3:5"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12219:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12229:3:5",
														"type": ""
													}
												],
												"src": "12190:171:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12425:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12436:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12452:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12446:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12446:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12436:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12408:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12418:6:5",
														"type": ""
													}
												],
												"src": "12367:98:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12566:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12583:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12588:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12576:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12576:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12576:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12604:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12623:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12628:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12619:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12619:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12604:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12538:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12543:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12554:11:5",
														"type": ""
													}
												],
												"src": "12471:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12735:270:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12745:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12791:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12759:31:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12759:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12749:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12806:77:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12871:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12876:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12813:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12813:70:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12806:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12918:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12925:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12914:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12914:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12932:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12937:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12892:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12892:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12892:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12953:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12964:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12991:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12969:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12969:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12960:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12960:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12953:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12716:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12723:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12731:3:5",
														"type": ""
													}
												],
												"src": "12645:360:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13211:440:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13221:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13233:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13244:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13229:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13229:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13221:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13302:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13315:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13326:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13311:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13311:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13258:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13258:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13258:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13383:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13396:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13407:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13392:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13392:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13339:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13339:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13339:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13465:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13478:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13489:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13474:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13474:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13421:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13421:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13421:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13514:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13525:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13510:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13510:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13534:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13540:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13530:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13530:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13503:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13503:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13503:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13560:84:5",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13630:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13639:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13568:61:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13568:76:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13560:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13159:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13171:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13179:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13187:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13195:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13206:4:5",
														"type": ""
													}
												],
												"src": "13011:640:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13719:79:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13729:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13744:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13738:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13738:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13729:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13786:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "13760:25:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13760:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13760:32:5"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13697:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13705:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13713:5:5",
														"type": ""
													}
												],
												"src": "13657:141:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13880:273:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13926:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13928:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13928:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13928:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13901:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13910:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13897:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13897:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13922:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13893:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13893:32:5"
															},
															"nodeType": "YulIf",
															"src": "13890:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "14019:127:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14034:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14048:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14038:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14063:73:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14108:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14119:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14104:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14104:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14128:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14073:30:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14073:63:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14063:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13850:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13861:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13873:6:5",
														"type": ""
													}
												],
												"src": "13804:349:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb465146102ab578063b88d4fde146102d4578063c87b56dd146102f0578063e985e9c51461032d576100dd565b80636352211e1461020657806370a082311461024357806395d89b4114610280576100dd565b8063095ea7b3116100bb578063095ea7b31461018757806318160ddd146101a357806323b872dd146101ce57806342842e0e146101ea576100dd565b806301ffc9a7146100e257806306fdde031461011f578063081812fc1461014a575b600080fd5b3480156100ee57600080fd5b506101096004803603810190610104919061114c565b61036a565b6040516101169190611194565b60405180910390f35b34801561012b57600080fd5b506101346103fc565b6040516101419190611248565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c91906112a0565b61048e565b60405161017e919061130e565b60405180910390f35b6101a1600480360381019061019c9190611355565b6104ec565b005b3480156101af57600080fd5b506101b86104fc565b6040516101c591906113a4565b60405180910390f35b6101e860048036038101906101e391906113bf565b610513565b005b61020460048036038101906101ff91906113bf565b6107d7565b005b34801561021257600080fd5b5061022d600480360381019061022891906112a0565b6107f7565b60405161023a919061130e565b60405180910390f35b34801561024f57600080fd5b5061026a60048036038101906102659190611412565b610809565b60405161027791906113a4565b60405180910390f35b34801561028c57600080fd5b506102956108a1565b6040516102a29190611248565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd919061146b565b610933565b005b6102ee60048036038101906102e991906115e0565b610a3e565b005b3480156102fc57600080fd5b50610317600480360381019061031291906112a0565b610a90565b6040516103249190611248565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f9190611663565b610b0e565b6040516103619190611194565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461040b906116d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610437906116d2565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b600061049982610ba2565b6104ae576104ad63cf4700e460e01b610c1c565b5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6104f882826001610c26565b5050565b6000610506610d55565b6001546000540303905090565b600061051e82610d5a565b905073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff161693508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105935761059263a114810060e01b610c1c565b5b60008061059f84610e56565b915091506105b581876105b0610e7d565b610e85565b6105e0576105ca866105c5610e7d565b610b0e565b6105df576105de6359c896be60e01b610c1c565b5b5b6105ed8686866001610ec9565b80156105f857600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506106c6856106a2888887610ecf565b7c020000000000000000000000000000000000000000000000000000000017610ef7565b600460008681526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008416141561074e57600060018501905060006004600083815260200190815260200160002054141561074c57600054811461074b578360046000838152602001908152602001600020819055505b5b505b600073ffffffffffffffffffffffffffffffffffffffff8673ffffffffffffffffffffffffffffffffffffffff161690508481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a460008114156107c1576107c063ea553b3460e01b610c1c565b5b6107ce8787876001610f22565b50505050505050565b6107f283838360405180602001604052806000815250610a3e565b505050565b600061080282610d5a565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108505761084f638f4eb60460e01b610c1c565b5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b6060600380546108b0906116d2565b80601f01602080910402602001604051908101604052809291908181526020018280546108dc906116d2565b80156109295780601f106108fe57610100808354040283529160200191610929565b820191906000526020600020905b81548152906001019060200180831161090c57829003601f168201915b5050505050905090565b8060076000610940610e7d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166109ed610e7d565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a329190611194565b60405180910390a35050565b610a49848484610513565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610a8a57610a7484848484610f28565b610a8957610a8863d1a57ed660e01b610c1c565b5b5b50505050565b6060610a9b82610ba2565b610ab057610aaf63a14c4b5060e01b610c1c565b5b6000610aba611067565b9050600081511415610adb5760405180602001604052806000815250610b06565b80610ae58461107e565b604051602001610af6929190611740565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610bad610d55565b11610c1757600054821015610c165760005b600060046000858152602001908152602001600020549150811415610bef5782610be890611793565b9250610bbf565b60007c01000000000000000000000000000000000000000000000000000000008216149150505b5b919050565b8060005260046000fd5b6000610c31836107f7565b9050818015610c7357508073ffffffffffffffffffffffffffffffffffffffff16610c5a610e7d565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610c9f57610c8981610c84610e7d565b610b0e565b610c9e57610c9d63cfb3b94260e01b610c1c565b5b5b836006600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a450505050565b600090565b600081610d65610d55565b11610e4057600460008381526020019081526020016000205490506000811415610e12576000548210610da357610da263df2d9b4260e01b610c1c565b5b5b60046000836001900393508381526020019081526020016000205490506000811415610dcf57610e0d565b60007c010000000000000000000000000000000000000000000000000000000082161415610dfc57610e51565b610e0c63df2d9b4260e01b610c1c565b5b610da4565b60007c010000000000000000000000000000000000000000000000000000000082161415610e3f57610e51565b5b610e5063df2d9b4260e01b610c1c565b5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610ee68686846110d7565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610f4e610e7d565b8786866040518563ffffffff1660e01b8152600401610f709493929190611812565b602060405180830381600087803b158015610f8a57600080fd5b505af1925050508015610fbb57506040513d601f19601f82011682018060405250810190610fb89190611873565b60015b611014573d8060008114610feb576040519150601f19603f3d011682016040523d82523d6000602084013e610ff0565b606091505b5060008151141561100c5761100b63d1a57ed660e01b610c1c565b5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b6001156110c257600184039350600a81066030018453600a81049050806110bd576110c2565b611097565b50828103602084039350808452505050919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611129816110f4565b811461113457600080fd5b50565b60008135905061114681611120565b92915050565b600060208284031215611162576111616110ea565b5b600061117084828501611137565b91505092915050565b60008115159050919050565b61118e81611179565b82525050565b60006020820190506111a96000830184611185565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111e95780820151818401526020810190506111ce565b838111156111f8576000848401525b50505050565b6000601f19601f8301169050919050565b600061121a826111af565b61122481856111ba565b93506112348185602086016111cb565b61123d816111fe565b840191505092915050565b60006020820190508181036000830152611262818461120f565b905092915050565b6000819050919050565b61127d8161126a565b811461128857600080fd5b50565b60008135905061129a81611274565b92915050565b6000602082840312156112b6576112b56110ea565b5b60006112c48482850161128b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112f8826112cd565b9050919050565b611308816112ed565b82525050565b600060208201905061132360008301846112ff565b92915050565b611332816112ed565b811461133d57600080fd5b50565b60008135905061134f81611329565b92915050565b6000806040838503121561136c5761136b6110ea565b5b600061137a85828601611340565b925050602061138b8582860161128b565b9150509250929050565b61139e8161126a565b82525050565b60006020820190506113b96000830184611395565b92915050565b6000806000606084860312156113d8576113d76110ea565b5b60006113e686828701611340565b93505060206113f786828701611340565b92505060406114088682870161128b565b9150509250925092565b600060208284031215611428576114276110ea565b5b600061143684828501611340565b91505092915050565b61144881611179565b811461145357600080fd5b50565b6000813590506114658161143f565b92915050565b60008060408385031215611482576114816110ea565b5b600061149085828601611340565b92505060206114a185828601611456565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114ed826111fe565b810181811067ffffffffffffffff8211171561150c5761150b6114b5565b5b80604052505050565b600061151f6110e0565b905061152b82826114e4565b919050565b600067ffffffffffffffff82111561154b5761154a6114b5565b5b611554826111fe565b9050602081019050919050565b82818337600083830152505050565b600061158361157e84611530565b611515565b90508281526020810184848401111561159f5761159e6114b0565b5b6115aa848285611561565b509392505050565b600082601f8301126115c7576115c66114ab565b5b81356115d7848260208601611570565b91505092915050565b600080600080608085870312156115fa576115f96110ea565b5b600061160887828801611340565b945050602061161987828801611340565b935050604061162a8782880161128b565b925050606085013567ffffffffffffffff81111561164b5761164a6110ef565b5b611657878288016115b2565b91505092959194509250565b6000806040838503121561167a576116796110ea565b5b600061168885828601611340565b925050602061169985828601611340565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116ea57607f821691505b602082108114156116fe576116fd6116a3565b5b50919050565b600081905092915050565b600061171a826111af565b6117248185611704565b93506117348185602086016111cb565b80840191505092915050565b600061174c828561170f565b9150611758828461170f565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061179e8261126a565b915060008214156117b2576117b1611764565b5b600182039050919050565b600081519050919050565b600082825260208201905092915050565b60006117e4826117bd565b6117ee81856117c8565b93506117fe8185602086016111cb565b611807816111fe565b840191505092915050565b600060808201905061182760008301876112ff565b61183460208301866112ff565b6118416040830185611395565b818103606083015261185381846117d9565b905095945050505050565b60008151905061186d81611120565b92915050565b600060208284031215611889576118886110ea565b5b60006118978482850161185e565b9150509291505056fea2646970667358221220d2d61f0203acf636a4b1060aaaa685106d1d2fb52d119e6452df59fc6ed2d2e664736f6c63430008080033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x32D JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x280 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EA JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x1663 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C5 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F5 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x16D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x484 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x467 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x4AE JUMPI PUSH2 0x4AD PUSH4 0xCF4700E4 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F8 DUP3 DUP3 PUSH1 0x1 PUSH2 0xC26 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E DUP3 PUSH2 0xD5A JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP4 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x593 JUMPI PUSH2 0x592 PUSH4 0xA1148100 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x59F DUP5 PUSH2 0xE56 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x5B5 DUP2 DUP8 PUSH2 0x5B0 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x5E0 JUMPI PUSH2 0x5CA DUP7 PUSH2 0x5C5 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0x5DF JUMPI PUSH2 0x5DE PUSH4 0x59C896BE PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x5ED DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xEC9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x6C6 DUP6 PUSH2 0x6A2 DUP9 DUP9 DUP8 PUSH2 0xECF JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND EQ ISZERO PUSH2 0x74E JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x74B JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP1 POP DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x7C1 JUMPI PUSH2 0x7C0 PUSH4 0xEA553B34 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST PUSH2 0x7CE DUP8 DUP8 DUP8 PUSH1 0x1 PUSH2 0xF22 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7F2 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA3E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x802 DUP3 PUSH2 0xD5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x850 JUMPI PUSH2 0x84F PUSH4 0x8F4EB604 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x8B0 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8DC SWAP1 PUSH2 0x16D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x929 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x929 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x940 PUSH2 0xE7D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9ED PUSH2 0xE7D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA32 SWAP2 SWAP1 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA49 DUP5 DUP5 DUP5 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xA8A JUMPI PUSH2 0xA74 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0xA89 JUMPI PUSH2 0xA88 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA9B DUP3 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0xAB0 JUMPI PUSH2 0xAAF PUSH4 0xA14C4B50 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xABA PUSH2 0x1067 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB06 JUMP JUMPDEST DUP1 PUSH2 0xAE5 DUP5 PUSH2 0x107E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAF6 SWAP3 SWAP2 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xBAD PUSH2 0xD55 JUMP JUMPDEST GT PUSH2 0xC17 JUMPI PUSH1 0x0 SLOAD DUP3 LT ISZERO PUSH2 0xC16 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP DUP2 EQ ISZERO PUSH2 0xBEF JUMPI DUP3 PUSH2 0xBE8 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP3 POP PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ SWAP2 POP POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC31 DUP4 PUSH2 0x7F7 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0xC73 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC5A PUSH2 0xE7D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xC9F JUMPI PUSH2 0xC89 DUP2 PUSH2 0xC84 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0xC9E JUMPI PUSH2 0xC9D PUSH4 0xCFB3B942 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST JUMPDEST DUP4 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xD65 PUSH2 0xD55 JUMP JUMPDEST GT PUSH2 0xE40 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xE12 JUMPI PUSH1 0x0 SLOAD DUP3 LT PUSH2 0xDA3 JUMPI PUSH2 0xDA2 PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xDCF JUMPI PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0xDFC JUMPI PUSH2 0xE51 JUMP JUMPDEST PUSH2 0xE0C PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0xE3F JUMPI PUSH2 0xE51 JUMP JUMPDEST JUMPDEST PUSH2 0xE50 PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xEE6 DUP7 DUP7 DUP5 PUSH2 0x10D7 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xF4E PUSH2 0xE7D JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF70 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFBB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB8 SWAP2 SWAP1 PUSH2 0x1873 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1014 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFEB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFF0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x100C JUMPI PUSH2 0x100B PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xC1C JUMP JUMPDEST JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x10C2 JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x10BD JUMPI PUSH2 0x10C2 JUMP JUMPDEST PUSH2 0x1097 JUMP JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1129 DUP2 PUSH2 0x10F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1146 DUP2 PUSH2 0x1120 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1162 JUMPI PUSH2 0x1161 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1170 DUP5 DUP3 DUP6 ADD PUSH2 0x1137 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x118E DUP2 PUSH2 0x1179 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1185 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11E9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11CE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x11F8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121A DUP3 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x1224 DUP2 DUP6 PUSH2 0x11BA JUMP JUMPDEST SWAP4 POP PUSH2 0x1234 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11CB JUMP JUMPDEST PUSH2 0x123D DUP2 PUSH2 0x11FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1262 DUP2 DUP5 PUSH2 0x120F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127D DUP2 PUSH2 0x126A JUMP JUMPDEST DUP2 EQ PUSH2 0x1288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x129A DUP2 PUSH2 0x1274 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B6 JUMPI PUSH2 0x12B5 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12C4 DUP5 DUP3 DUP6 ADD PUSH2 0x128B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F8 DUP3 PUSH2 0x12CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1308 DUP2 PUSH2 0x12ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1323 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1332 DUP2 PUSH2 0x12ED JUMP JUMPDEST DUP2 EQ PUSH2 0x133D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x134F DUP2 PUSH2 0x1329 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x136C JUMPI PUSH2 0x136B PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x137A DUP6 DUP3 DUP7 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x138B DUP6 DUP3 DUP7 ADD PUSH2 0x128B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x139E DUP2 PUSH2 0x126A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1395 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13D8 JUMPI PUSH2 0x13D7 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13E6 DUP7 DUP3 DUP8 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13F7 DUP7 DUP3 DUP8 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1408 DUP7 DUP3 DUP8 ADD PUSH2 0x128B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1428 JUMPI PUSH2 0x1427 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1436 DUP5 DUP3 DUP6 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1448 DUP2 PUSH2 0x1179 JUMP JUMPDEST DUP2 EQ PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1465 DUP2 PUSH2 0x143F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1481 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1490 DUP6 DUP3 DUP7 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A1 DUP6 DUP3 DUP7 ADD PUSH2 0x1456 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x14ED DUP3 PUSH2 0x11FE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x150C JUMPI PUSH2 0x150B PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x151F PUSH2 0x10E0 JUMP JUMPDEST SWAP1 POP PUSH2 0x152B DUP3 DUP3 PUSH2 0x14E4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x154B JUMPI PUSH2 0x154A PUSH2 0x14B5 JUMP JUMPDEST JUMPDEST PUSH2 0x1554 DUP3 PUSH2 0x11FE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1583 PUSH2 0x157E DUP5 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x1515 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x159F JUMPI PUSH2 0x159E PUSH2 0x14B0 JUMP JUMPDEST JUMPDEST PUSH2 0x15AA DUP5 DUP3 DUP6 PUSH2 0x1561 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15C7 JUMPI PUSH2 0x15C6 PUSH2 0x14AB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15D7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1570 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15FA JUMPI PUSH2 0x15F9 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1608 DUP8 DUP3 DUP9 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1619 DUP8 DUP3 DUP9 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x162A DUP8 DUP3 DUP9 ADD PUSH2 0x128B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x164B JUMPI PUSH2 0x164A PUSH2 0x10EF JUMP JUMPDEST JUMPDEST PUSH2 0x1657 DUP8 DUP3 DUP9 ADD PUSH2 0x15B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x167A JUMPI PUSH2 0x1679 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1688 DUP6 DUP3 DUP7 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1699 DUP6 DUP3 DUP7 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16EA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x16FE JUMPI PUSH2 0x16FD PUSH2 0x16A3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171A DUP3 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x1724 DUP2 DUP6 PUSH2 0x1704 JUMP JUMPDEST SWAP4 POP PUSH2 0x1734 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11CB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x174C DUP3 DUP6 PUSH2 0x170F JUMP JUMPDEST SWAP2 POP PUSH2 0x1758 DUP3 DUP5 PUSH2 0x170F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x179E DUP3 PUSH2 0x126A JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x17B2 JUMPI PUSH2 0x17B1 PUSH2 0x1764 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E4 DUP3 PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x17EE DUP2 DUP6 PUSH2 0x17C8 JUMP JUMPDEST SWAP4 POP PUSH2 0x17FE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11CB JUMP JUMPDEST PUSH2 0x1807 DUP2 PUSH2 0x11FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1827 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x12FF JUMP JUMPDEST PUSH2 0x1834 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x12FF JUMP JUMPDEST PUSH2 0x1841 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1395 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1853 DUP2 DUP5 PUSH2 0x17D9 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x186D DUP2 PUSH2 0x1120 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1889 JUMPI PUSH2 0x1888 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1897 DUP5 DUP3 DUP6 ADD PUSH2 0x185E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xD6 0x1F MUL SUB 0xAC 0xF6 CALLDATASIZE LOG4 0xB1 MOD EXP 0xAA 0xA6 DUP6 LT PUSH14 0x1D2FB52D119E6452DF59FC6ED2D2 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ",
							"sourceMap": "895:42638:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9164:630;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10048:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16911:223;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16639:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5894:317;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20546:3447;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24084:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11409:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7045:239;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10217:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17461:231;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24852:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10420:322;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17842:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9164:630;9249:4;9582:10;9567:25;;:11;:25;;;;:101;;;;9658:10;9643:25;;:11;:25;;;;9567:101;:177;;;;9734:10;9719:25;;:11;:25;;;;9567:177;9548:196;;9164:630;;;:::o;10048:98::-;10102:13;10134:5;10127:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10048:98;:::o;16911:223::-;16987:7;17011:16;17019:7;17011;:16::i;:::-;17006:73;;17029:50;17037:41;;;17029:7;:50::i;:::-;17006:73;17097:15;:24;17113:7;17097:24;;;;;;;;;;;:30;;;;;;;;;;;;17090:37;;16911:223;;;:::o;16639:122::-;16727:27;16736:2;16740:7;16749:4;16727:8;:27::i;:::-;16639:122;;:::o;5894:317::-;5955:7;6179:15;:13;:15::i;:::-;6164:12;;6148:13;;:28;:46;6141:53;;5894:317;:::o;20546:3447::-;20683:27;20713;20732:7;20713:18;:27::i;:::-;20683:57;;2785:14;20881:4;20865:22;;:41;20842:66;;20964:4;20923:45;;20939:19;20923:45;;;20919:95;;20970:44;20978:35;;;20970:7;:44::i;:::-;20919:95;21026:27;21055:23;21082:35;21109:7;21082:26;:35::i;:::-;21025:92;;;;21214:68;21239:15;21256:4;21262:19;:17;:19::i;:::-;21214:24;:68::i;:::-;21209:188;;21301:43;21318:4;21324:19;:17;:19::i;:::-;21301:16;:43::i;:::-;21296:101;;21346:51;21354:42;;;21346:7;:51::i;:::-;21296:101;21209:188;21408:43;21430:4;21436:2;21440:7;21449:1;21408:21;:43::i;:::-;21540:15;21537:157;;;21678:1;21657:19;21650:30;21537:157;22066:18;:24;22085:4;22066:24;;;;;;;;;;;;;;;;22064:26;;;;;;;;;;;;22134:18;:22;22153:2;22134:22;;;;;;;;;;;;;;;;22132:24;;;;;;;;;;;22449:143;22485:2;22533:45;22548:4;22554:2;22558:19;22533:14;:45::i;:::-;2392:8;22505:73;22449:18;:143::i;:::-;22420:17;:26;22438:7;22420:26;;;;;;;;;;;:172;;;;22760:1;2392:8;22709:19;:47;:52;22705:617;;;22781:19;22813:1;22803:7;:11;22781:33;;22968:1;22934:17;:30;22952:11;22934:30;;;;;;;;;;;;:35;22930:378;;;23070:13;;23055:11;:28;23051:239;;23248:19;23215:17;:30;23233:11;23215:30;;;;;;;;;;;:52;;;;23051:239;22930:378;22763:559;22705:617;23431:16;2785:14;23466:2;23450:20;;:39;23431:58;;23821:7;23786:8;23753:4;23696:25;23642:1;23586;23564:292;23891:1;23879:8;:13;23875:58;;;23894:39;23902:30;;;23894:7;:39::i;:::-;23875:58;23944:42;23965:4;23971:2;23975:7;23984:1;23944:20;:42::i;:::-;20673:3320;;;;20546:3447;;;:::o;24084:187::-;24225:39;24242:4;24248:2;24252:7;24225:39;;;;;;;;;;;;:16;:39::i;:::-;24084:187;;;:::o;11409:150::-;11481:7;11523:27;11542:7;11523:18;:27::i;:::-;11500:52;;11409:150;;;:::o;7045:239::-;7117:7;7157:1;7140:19;;:5;:19;;;7136:69;;;7161:44;7169:35;;;7161:7;:44::i;:::-;7136:69;1360:13;7222:18;:25;7241:5;7222:25;;;;;;;;;;;;;;;;:55;7215:62;;7045:239;;;:::o;10217:102::-;10273:13;10305:7;10298:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10217:102;:::o;17461:231::-;17607:8;17555:18;:39;17574:19;:17;:19::i;:::-;17555:39;;;;;;;;;;;;;;;:49;17595:8;17555:49;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;17666:8;17630:55;;17645:19;:17;:19::i;:::-;17630:55;;;17676:8;17630:55;;;;;;:::i;:::-;;;;;;;;17461:231;;:::o;24852:405::-;25021:31;25034:4;25040:2;25044:7;25021:12;:31::i;:::-;25084:1;25066:2;:14;;;:19;25062:189;;25104:56;25135:4;25141:2;25145:7;25154:5;25104:30;:56::i;:::-;25099:152;;25180:56;25188:47;;;25180:7;:56::i;:::-;25099:152;25062:189;24852:405;;;;:::o;10420:322::-;10493:13;10523:16;10531:7;10523;:16::i;:::-;10518:68;;10541:45;10549:36;;;10541:7;:45::i;:::-;10518:68;10597:21;10621:10;:8;:10::i;:::-;10597:34;;10673:1;10654:7;10648:21;:26;;:87;;;;;;;;;;;;;;;;;10701:7;10710:18;10720:7;10710:9;:18::i;:::-;10684:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10648:87;10641:94;;;10420:322;;;:::o;17842:162::-;17939:4;17962:18;:25;17981:5;17962:25;;;;;;;;;;;;;;;:35;17988:8;17962:35;;;;;;;;;;;;;;;;;;;;;;;;;17955:42;;17842:162;;;;:::o;18253:360::-;18318:11;18364:7;18345:15;:13;:15::i;:::-;:26;18341:266;;18401:13;;18391:7;:23;18387:210;;;18434:14;18466:60;18514:1;18483:17;:26;18501:7;18483:26;;;;;;;;;;;;18474:35;;;18473:42;18466:60;;;18517:9;;;;:::i;:::-;;;18466:60;;;18581:1;2118:8;18553:6;:24;:29;18544:38;;18416:181;18387:210;18341:266;18253:360;;;:::o;43371:160::-;43470:13;43464:4;43457:27;43510:4;43504;43497:18;35019:460;35143:13;35159:16;35167:7;35159;:16::i;:::-;35143:32;;35190:13;:45;;;;;35230:5;35207:28;;:19;:17;:19::i;:::-;:28;;;;35190:45;35186:198;;;35254:44;35271:5;35278:19;:17;:19::i;:::-;35254:16;:44::i;:::-;35249:135;;35318:51;35326:42;;;35318:7;:51::i;:::-;35249:135;35186:198;35427:2;35394:15;:24;35410:7;35394:24;;;;;;;;;;;:30;;;:35;;;;;;;;;;;;;;;;;;35464:7;35460:2;35444:28;;35453:5;35444:28;;;;;;;;;;;;35133:346;35019:460;;;:::o;5426:90::-;5482:7;5426:90;:::o;12850:1978::-;12917:14;12966:7;12947:15;:13;:15::i;:::-;:26;12943:1822;;12998:17;:26;13016:7;12998:26;;;;;;;;;;;;12989:35;;13132:1;13122:6;:11;13118:1270;;;13168:13;;13157:7;:24;13153:77;;13183:47;13191:38;;;13183:7;:47::i;:::-;13153:77;13777:597;13853:17;:28;13871:9;;;;;;;13853:28;;;;;;;;;;;;13844:37;;13939:1;13929:6;:11;13925:25;;;13942:8;;13925:25;14004:1;2118:8;13976:6;:24;:29;13972:48;;;14007:13;;13972:48;14308:47;14316:38;;;14308:7;:47::i;:::-;13777:597;;;13118:1270;14738:1;2118:8;14710:6;:24;:29;14706:48;;;14741:13;;14706:48;12943:1822;14774:47;14782:38;;;14774:7;:47::i;:::-;12850:1978;;;;:::o;19471:474::-;19570:27;19599:23;19638:38;19679:15;:24;19695:7;19679:24;;;;;;;;;;;19638:65;;19853:18;19830:41;;19909:19;19903:26;19884:45;;19816:123;19471:474;;;:::o;41401:103::-;41461:7;41487:10;41480:17;;41401:103;:::o;18717:646::-;18862:11;19024:16;19017:5;19013:28;19004:37;;19182:16;19171:9;19167:32;19154:45;;19330:15;19319:9;19316:30;19308:5;19297:9;19294:20;19291:56;19281:66;;18717:646;;;;;:::o;25901:154::-;;;;;:::o;40728:304::-;40859:7;40878:16;2513:3;40904:19;:41;;40878:68;;2513:3;40971:31;40982:4;40988:2;40992:9;40971:10;:31::i;:::-;40963:40;;:62;;40956:69;;;40728:304;;;;;:::o;15361:443::-;15441:14;15606:16;15599:5;15595:28;15586:37;;15781:5;15767:11;15742:23;15738:41;15735:52;15728:5;15725:63;15715:73;;15361:443;;;;:::o;26702:153::-;;;;;:::o;27283:673::-;27441:4;27486:2;27461:45;;;27507:19;:17;:19::i;:::-;27528:4;27534:7;27543:5;27461:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;27457:493;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27756:1;27739:6;:13;:18;27735:113;;;27777:56;27785:47;;;27777:7;:56::i;:::-;27735:113;27918:6;27912:13;27903:6;27899:2;27895:15;27888:38;27457:493;27627:54;;;27617:64;;;:6;:64;;;;27610:71;;;27283:673;;;;;;:::o;10987:92::-;11038:13;11063:9;;;;;;;;;;;;;;10987:92;:::o;41601:1708::-;41666:17;42094:4;42087;42081:11;42077:22;42184:1;42178:4;42171:15;42257:4;42254:1;42250:12;42243:19;;42337:1;42332:3;42325:14;42438:3;42672:5;42654:419;42680:1;42654:419;;;42719:1;42714:3;42710:11;42703:18;;42887:2;42881:4;42877:13;42873:2;42869:22;42864:3;42856:36;42979:2;42973:4;42969:13;42961:21;;43044:4;43034:25;;43052:5;;43034:25;42654:419;;;42658:21;43110:3;43105;43101:13;43223:4;43218:3;43214:14;43207:21;;43286:6;43281:3;43274:19;41704:1599;;;41601:1708;;;:::o;40439:143::-;40572:6;40439:143;;;;;:::o;7:75:5:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:118::-;5025:24;5043:5;5025:24;:::i;:::-;5020:3;5013:37;4938:118;;:::o;5062:222::-;5155:4;5193:2;5182:9;5178:18;5170:26;;5206:71;5274:1;5263:9;5259:17;5250:6;5206:71;:::i;:::-;5062:222;;;;:::o;5290:619::-;5367:6;5375;5383;5432:2;5420:9;5411:7;5407:23;5403:32;5400:119;;;5438:79;;:::i;:::-;5400:119;5558:1;5583:53;5628:7;5619:6;5608:9;5604:22;5583:53;:::i;:::-;5573:63;;5529:117;5685:2;5711:53;5756:7;5747:6;5736:9;5732:22;5711:53;:::i;:::-;5701:63;;5656:118;5813:2;5839:53;5884:7;5875:6;5864:9;5860:22;5839:53;:::i;:::-;5829:63;;5784:118;5290:619;;;;;:::o;5915:329::-;5974:6;6023:2;6011:9;6002:7;5998:23;5994:32;5991:119;;;6029:79;;:::i;:::-;5991:119;6149:1;6174:53;6219:7;6210:6;6199:9;6195:22;6174:53;:::i;:::-;6164:63;;6120:117;5915:329;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:148::-;11128:11;11165:3;11150:18;;11026:148;;;;:::o;11180:377::-;11286:3;11314:39;11347:5;11314:39;:::i;:::-;11369:89;11451:6;11446:3;11369:89;:::i;:::-;11362:96;;11467:52;11512:6;11507:3;11500:4;11493:5;11489:16;11467:52;:::i;:::-;11544:6;11539:3;11535:16;11528:23;;11290:267;11180:377;;;;:::o;11563:435::-;11743:3;11765:95;11856:3;11847:6;11765:95;:::i;:::-;11758:102;;11877:95;11968:3;11959:6;11877:95;:::i;:::-;11870:102;;11989:3;11982:10;;11563:435;;;;;:::o;12004:180::-;12052:77;12049:1;12042:88;12149:4;12146:1;12139:15;12173:4;12170:1;12163:15;12190:171;12229:3;12252:24;12270:5;12252:24;:::i;:::-;12243:33;;12298:4;12291:5;12288:15;12285:41;;;12306:18;;:::i;:::-;12285:41;12353:1;12346:5;12342:13;12335:20;;12190:171;;;:::o;12367:98::-;12418:6;12452:5;12446:12;12436:22;;12367:98;;;:::o;12471:168::-;12554:11;12588:6;12583:3;12576:19;12628:4;12623:3;12619:14;12604:29;;12471:168;;;;:::o;12645:360::-;12731:3;12759:38;12791:5;12759:38;:::i;:::-;12813:70;12876:6;12871:3;12813:70;:::i;:::-;12806:77;;12892:52;12937:6;12932:3;12925:4;12918:5;12914:16;12892:52;:::i;:::-;12969:29;12991:6;12969:29;:::i;:::-;12964:3;12960:39;12953:46;;12735:270;12645:360;;;;:::o;13011:640::-;13206:4;13244:3;13233:9;13229:19;13221:27;;13258:71;13326:1;13315:9;13311:17;13302:6;13258:71;:::i;:::-;13339:72;13407:2;13396:9;13392:18;13383:6;13339:72;:::i;:::-;13421;13489:2;13478:9;13474:18;13465:6;13421:72;:::i;:::-;13540:9;13534:4;13530:20;13525:2;13514:9;13510:18;13503:48;13568:76;13639:4;13630:6;13568:76;:::i;:::-;13560:84;;13011:640;;;;;;;:::o;13657:141::-;13713:5;13744:6;13738:13;13729:22;;13760:32;13786:5;13760:32;:::i;:::-;13657:141;;;;:::o;13804:349::-;13873:6;13922:2;13910:9;13901:7;13897:23;13893:32;13890:119;;;13928:79;;:::i;:::-;13890:119;14048:1;14073:63;14128:7;14119:6;14108:9;14104:22;14073:63;:::i;:::-;14063:73;;14019:127;13804:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1271600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2930",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "745",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4621",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_approve(address,uint256)": "infinite",
								"_approve(address,uint256,bool)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_extraData(address,address,uint24)": "24",
								"_getApprovedSlotAndAddress(uint256)": "2236",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "78",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "22",
								"_nextExtraData(address,address,uint256)": "114",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipIsInitialized(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "61",
								"_packedOwnershipOf(uint256)": "infinite",
								"_revert(bytes4)": "19",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "15",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5020,
									"end": 5025,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5017,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5045,
									"end": 5052,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5042,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5062,
									"end": 5075,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5482,
									"end": 5489,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1696,
									"end": 1709,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1787,
									"end": 1788,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1782,
									"end": 1785,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1778,
									"end": 1789,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1772,
									"end": 1790,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1768,
									"end": 1769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1759,
									"end": 1770,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1752,
									"end": 1791,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1724,
									"end": 1726,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1722,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1819,
									"end": 1825,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1816,
									"end": 1817,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1813,
									"end": 1826,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1881,
									"end": 1897,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1874,
									"end": 1901,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1659,
									"end": 1917,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 2095,
									"end": 2101,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "tag",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2119,
									"end": 2124,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2112,
									"end": 2133,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2162,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2202,
									"end": 2205,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2193,
									"end": 2199,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2188,
									"end": 2191,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2181,
									"end": 2206,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2326,
									"end": 2329,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2321,
									"end": 2324,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2018,
									"end": 2344,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2465,
									"end": 2471,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2457,
									"end": 2484,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2598,
									"end": 2604,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 2709,
									"end": 2712,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2701,
									"end": 2707,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2682,
									"end": 2699,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "tag",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2437,
									"end": 2719,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2824,
									"end": 2830,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2832,
									"end": 2838,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2881,
									"end": 2883,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2869,
									"end": 2878,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2860,
									"end": 2867,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2856,
									"end": 2879,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2852,
									"end": 2884,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "tag",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "tag",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3028,
									"end": 3029,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3017,
									"end": 3026,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3007,
									"end": 3031,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3058,
									"end": 3076,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3047,
									"end": 3077,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "tag",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "tag",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "77"
								},
								{
									"begin": 3251,
									"end": 3258,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3242,
									"end": 3248,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3231,
									"end": 3240,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3227,
									"end": 3249,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "tag",
									"source": 5,
									"value": "77"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2978,
									"end": 3269,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3329,
									"end": 3331,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3318,
									"end": 3327,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3314,
									"end": 3332,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3308,
									"end": 3333,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3360,
									"end": 3378,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3352,
									"end": 3358,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3349,
									"end": 3379,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "tag",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "tag",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 3553,
									"end": 3560,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3544,
									"end": 3550,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3533,
									"end": 3542,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3529,
									"end": 3551,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "tag",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3279,
									"end": 3571,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3632,
									"end": 3709,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3629,
									"end": 3630,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3710,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3729,
									"end": 3733,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 3726,
									"end": 3727,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 3719,
									"end": 3734,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3753,
									"end": 3757,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3750,
									"end": 3751,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3743,
									"end": 3758,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3845,
									"end": 3849,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3898,
									"end": 3899,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3892,
									"end": 3896,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3888,
									"end": 3900,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3919,
									"end": 3937,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3975,
									"end": 3979,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 3967,
									"end": 3973,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3963,
									"end": 3980,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "tag",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4037,
									"end": 4039,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4026,
									"end": 4040,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4003,
									"end": 4041,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "85"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "tag",
									"source": 5,
									"value": "85"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "tag",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3821,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 43533,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d2d61f0203acf636a4b1060aaaa685106d1d2fb52d119e6452df59fc6ed2d2e664736f6c63430008080033",
									".code": [
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "6352211E"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "A22CB465"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "A22CB465"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "B88D4FDE"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "C87B56DD"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "E985E9C5"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "6352211E"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "42842E0E"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "81812FC"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 43533,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9249,
											"end": 9253,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9582,
											"end": 9592,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9578,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9658,
											"end": 9668,
											"name": "PUSH",
											"source": 3,
											"value": "80AC58CD"
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 9643,
											"end": 9654,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9734,
											"end": 9744,
											"name": "PUSH",
											"source": 3,
											"value": "5B5E139F"
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 9719,
											"end": 9730,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 9744,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9548,
											"end": 9744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10102,
											"end": 10115,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 10134,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16987,
											"end": 16994,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17011,
											"end": 17027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 17019,
											"end": 17026,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17011,
											"end": 17018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 17011,
											"end": 17027,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17011,
											"end": 17027,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 17011,
											"end": 17027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17006,
											"end": 17079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 17006,
											"end": 17079,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17029,
											"end": 17079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 17037,
											"end": 17078,
											"name": "PUSH",
											"source": 3,
											"value": "CF4700E4"
										},
										{
											"begin": 17037,
											"end": 17078,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 17037,
											"end": 17078,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 17029,
											"end": 17036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 17029,
											"end": 17079,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17029,
											"end": 17079,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 17029,
											"end": 17079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17006,
											"end": 17079,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 17006,
											"end": 17079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17112,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17113,
											"end": 17120,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17097,
											"end": 17121,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17097,
											"end": 17127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17090,
											"end": 17127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17090,
											"end": 17127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17134,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16727,
											"end": 16754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 16736,
											"end": 16738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16740,
											"end": 16747,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16749,
											"end": 16753,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 16727,
											"end": 16735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 16727,
											"end": 16754,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16727,
											"end": 16754,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 16727,
											"end": 16754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16639,
											"end": 16761,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5955,
											"end": 5962,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 6179,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6148,
											"end": 6161,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6161,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6148,
											"end": 6176,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6148,
											"end": 6194,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20683,
											"end": 20710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20713,
											"end": 20740,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 20732,
											"end": 20739,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20713,
											"end": 20731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 20713,
											"end": 20740,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20713,
											"end": 20740,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 20713,
											"end": 20740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20683,
											"end": 20740,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20683,
											"end": 20740,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20881,
											"end": 20885,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 20865,
											"end": 20887,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20865,
											"end": 20887,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20865,
											"end": 20906,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20842,
											"end": 20908,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 20842,
											"end": 20908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20964,
											"end": 20968,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 20923,
											"end": 20968,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20923,
											"end": 20968,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20939,
											"end": 20958,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20923,
											"end": 20968,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20923,
											"end": 20968,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20923,
											"end": 20968,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 20919,
											"end": 21014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 20919,
											"end": 21014,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 20970,
											"end": 21014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 20978,
											"end": 21013,
											"name": "PUSH",
											"source": 3,
											"value": "A1148100"
										},
										{
											"begin": 20978,
											"end": 21013,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 20978,
											"end": 21013,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 20970,
											"end": 20977,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 20970,
											"end": 21014,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20970,
											"end": 21014,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 20970,
											"end": 21014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20919,
											"end": 21014,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 20919,
											"end": 21014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21026,
											"end": 21053,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21055,
											"end": 21078,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21082,
											"end": 21117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 21109,
											"end": 21116,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 21082,
											"end": 21108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 21082,
											"end": 21117,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21082,
											"end": 21117,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 21082,
											"end": 21117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 21214,
											"end": 21282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 21239,
											"end": 21254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21256,
											"end": 21260,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 21262,
											"end": 21281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 21262,
											"end": 21279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 21262,
											"end": 21281,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21262,
											"end": 21281,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 21262,
											"end": 21281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21214,
											"end": 21238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 21214,
											"end": 21282,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21214,
											"end": 21282,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 21214,
											"end": 21282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21209,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 21209,
											"end": 21397,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 21301,
											"end": 21344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 21318,
											"end": 21322,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 21324,
											"end": 21343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 21324,
											"end": 21341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 21324,
											"end": 21343,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21324,
											"end": 21343,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 21324,
											"end": 21343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21301,
											"end": 21317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 21301,
											"end": 21344,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21301,
											"end": 21344,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 21301,
											"end": 21344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21296,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 21296,
											"end": 21397,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 21346,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 21354,
											"end": 21396,
											"name": "PUSH",
											"source": 3,
											"value": "59C896BE"
										},
										{
											"begin": 21354,
											"end": 21396,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 21354,
											"end": 21396,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 21346,
											"end": 21353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 21346,
											"end": 21397,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21346,
											"end": 21397,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 21346,
											"end": 21397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21296,
											"end": 21397,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 21296,
											"end": 21397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21209,
											"end": 21397,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 21209,
											"end": 21397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21408,
											"end": 21451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 21430,
											"end": 21434,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 21436,
											"end": 21438,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 21440,
											"end": 21447,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 21449,
											"end": 21450,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 21408,
											"end": 21429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 21408,
											"end": 21451,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21408,
											"end": 21451,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 21408,
											"end": 21451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21540,
											"end": 21555,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21537,
											"end": 21694,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 21537,
											"end": 21694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 21537,
											"end": 21694,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 21678,
											"end": 21679,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21657,
											"end": 21676,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 21650,
											"end": 21680,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 21537,
											"end": 21694,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 21537,
											"end": 21694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22084,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22085,
											"end": 22089,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22066,
											"end": 22090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 22064,
											"end": 22090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22152,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22153,
											"end": 22155,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22134,
											"end": 22156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 22132,
											"end": 22156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22449,
											"end": 22592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 22485,
											"end": 22487,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 22548,
											"end": 22552,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 22554,
											"end": 22556,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 22558,
											"end": 22577,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 22533,
											"end": 22547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 22533,
											"end": 22578,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 22533,
											"end": 22578,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 22533,
											"end": 22578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 3,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22505,
											"end": 22578,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 22449,
											"end": 22467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 22449,
											"end": 22592,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 22449,
											"end": 22592,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 22449,
											"end": 22592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22437,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22438,
											"end": 22445,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22420,
											"end": 22446,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22592,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22592,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22592,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 22420,
											"end": 22592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22760,
											"end": 22761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 3,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22709,
											"end": 22728,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 22709,
											"end": 22756,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22709,
											"end": 22761,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 22705,
											"end": 23322,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 22705,
											"end": 23322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 22705,
											"end": 23322,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 22781,
											"end": 22800,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22813,
											"end": 22814,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 22803,
											"end": 22810,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 22803,
											"end": 22814,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22781,
											"end": 22814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22781,
											"end": 22814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22968,
											"end": 22969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22934,
											"end": 22951,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22952,
											"end": 22963,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22964,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22934,
											"end": 22969,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 22930,
											"end": 23308,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 22930,
											"end": 23308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 22930,
											"end": 23308,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 23070,
											"end": 23083,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23070,
											"end": 23083,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 23055,
											"end": 23066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23055,
											"end": 23083,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 23051,
											"end": 23290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 23051,
											"end": 23290,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 23248,
											"end": 23267,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23232,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23233,
											"end": 23244,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23215,
											"end": 23245,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23267,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23267,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23267,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 23215,
											"end": 23267,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23051,
											"end": 23290,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 23051,
											"end": 23290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22930,
											"end": 23308,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 22930,
											"end": 23308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22763,
											"end": 23322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22705,
											"end": 23322,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 22705,
											"end": 23322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23431,
											"end": 23447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23466,
											"end": 23468,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 23450,
											"end": 23470,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23450,
											"end": 23470,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23450,
											"end": 23489,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23431,
											"end": 23489,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23431,
											"end": 23489,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23821,
											"end": 23828,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 23786,
											"end": 23794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23753,
											"end": 23757,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 23696,
											"end": 23721,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 23642,
											"end": 23643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23586,
											"end": 23587,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23564,
											"end": 23856,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 23891,
											"end": 23892,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23879,
											"end": 23887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23879,
											"end": 23892,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 23875,
											"end": 23933,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 23875,
											"end": 23933,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 23875,
											"end": 23933,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 23894,
											"end": 23933,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 23902,
											"end": 23932,
											"name": "PUSH",
											"source": 3,
											"value": "EA553B34"
										},
										{
											"begin": 23902,
											"end": 23932,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 23902,
											"end": 23932,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 23894,
											"end": 23901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 23894,
											"end": 23933,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 23894,
											"end": 23933,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 23894,
											"end": 23933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23875,
											"end": 23933,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 23875,
											"end": 23933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23944,
											"end": 23986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 23965,
											"end": 23969,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 23971,
											"end": 23973,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 23975,
											"end": 23982,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 23984,
											"end": 23985,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 23944,
											"end": 23964,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 23944,
											"end": 23986,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 23944,
											"end": 23986,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 23944,
											"end": 23986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20673,
											"end": 23993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20673,
											"end": 23993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20673,
											"end": 23993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20673,
											"end": 23993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20546,
											"end": 23993,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 24242,
											"end": 24246,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 24248,
											"end": 24250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 24252,
											"end": 24259,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24225,
											"end": 24241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 24225,
											"end": 24264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24084,
											"end": 24271,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11481,
											"end": 11488,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 11542,
											"end": 11549,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 11523,
											"end": 11550,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11523,
											"end": 11550,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 11523,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11500,
											"end": 11552,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11500,
											"end": 11552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7117,
											"end": 7124,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7158,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7140,
											"end": 7145,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7161,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 7169,
											"end": 7204,
											"name": "PUSH",
											"source": 3,
											"value": "8F4EB604"
										},
										{
											"begin": 7169,
											"end": 7204,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 7169,
											"end": 7204,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 7161,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 7161,
											"end": 7205,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7161,
											"end": 7205,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 7161,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1373,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7222,
											"end": 7240,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7246,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7222,
											"end": 7277,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10273,
											"end": 10286,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 10305,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17607,
											"end": 17615,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17573,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17574,
											"end": 17593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 17574,
											"end": 17591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 17574,
											"end": 17593,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17574,
											"end": 17593,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 17574,
											"end": 17593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17555,
											"end": 17594,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17595,
											"end": 17603,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 17555,
											"end": 17615,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17666,
											"end": 17674,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17645,
											"end": 17664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 17645,
											"end": 17662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 17645,
											"end": 17664,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17645,
											"end": 17664,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 17645,
											"end": 17664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17676,
											"end": 17684,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17630,
											"end": 17685,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17461,
											"end": 17692,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25021,
											"end": 25052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 25034,
											"end": 25038,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 25040,
											"end": 25042,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 25044,
											"end": 25051,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 25021,
											"end": 25033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 25021,
											"end": 25052,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 25021,
											"end": 25052,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 25021,
											"end": 25052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25084,
											"end": 25085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 25066,
											"end": 25068,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 25066,
											"end": 25080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25066,
											"end": 25080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 25066,
											"end": 25080,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 25066,
											"end": 25085,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 25062,
											"end": 25251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 25062,
											"end": 25251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 25104,
											"end": 25160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 25135,
											"end": 25139,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 25141,
											"end": 25143,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 25145,
											"end": 25152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 25154,
											"end": 25159,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 25104,
											"end": 25134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 25104,
											"end": 25160,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 25104,
											"end": 25160,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 25104,
											"end": 25160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25099,
											"end": 25251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 25099,
											"end": 25251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 25180,
											"end": 25236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 25188,
											"end": 25235,
											"name": "PUSH",
											"source": 3,
											"value": "D1A57ED6"
										},
										{
											"begin": 25188,
											"end": 25235,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 25188,
											"end": 25235,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 25180,
											"end": 25187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 25180,
											"end": 25236,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 25180,
											"end": 25236,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 25180,
											"end": 25236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25099,
											"end": 25251,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 25099,
											"end": 25251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25062,
											"end": 25251,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 25062,
											"end": 25251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24852,
											"end": 25257,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10493,
											"end": 10506,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 10523,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 10531,
											"end": 10538,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10523,
											"end": 10530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 10523,
											"end": 10539,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10523,
											"end": 10539,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 10523,
											"end": 10539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10518,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 10518,
											"end": 10586,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 10549,
											"end": 10585,
											"name": "PUSH",
											"source": 3,
											"value": "A14C4B50"
										},
										{
											"begin": 10549,
											"end": 10585,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 10549,
											"end": 10585,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 10541,
											"end": 10586,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10541,
											"end": 10586,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 10541,
											"end": 10586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10518,
											"end": 10586,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 10518,
											"end": 10586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10597,
											"end": 10618,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10621,
											"end": 10631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 10621,
											"end": 10629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 10621,
											"end": 10631,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10621,
											"end": 10631,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 10621,
											"end": 10631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10597,
											"end": 10631,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10597,
											"end": 10631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10673,
											"end": 10674,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10654,
											"end": 10661,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10669,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10674,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10674,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10710,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10710,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 10710,
											"end": 10728,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10710,
											"end": 10728,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 10710,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10641,
											"end": 10735,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10641,
											"end": 10735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10641,
											"end": 10735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17939,
											"end": 17943,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17962,
											"end": 17980,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17981,
											"end": 17986,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17962,
											"end": 17987,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17988,
											"end": 17996,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 17962,
											"end": 17997,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17955,
											"end": 17997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17955,
											"end": 17997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17842,
											"end": 18004,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18318,
											"end": 18329,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18364,
											"end": 18371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18345,
											"end": 18360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 18345,
											"end": 18358,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 18345,
											"end": 18360,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 18345,
											"end": 18360,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 18345,
											"end": 18360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18345,
											"end": 18371,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 18341,
											"end": 18607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 18341,
											"end": 18607,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18401,
											"end": 18414,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18401,
											"end": 18414,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 18391,
											"end": 18398,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18391,
											"end": 18414,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 18387,
											"end": 18597,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18387,
											"end": 18597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 18387,
											"end": 18597,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18434,
											"end": 18448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18514,
											"end": 18515,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18483,
											"end": 18500,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18501,
											"end": 18508,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 18483,
											"end": 18509,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 18474,
											"end": 18509,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18474,
											"end": 18509,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18474,
											"end": 18509,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18473,
											"end": 18515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 18517,
											"end": 18526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 18466,
											"end": 18526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18581,
											"end": 18582,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 3,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18553,
											"end": 18559,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18553,
											"end": 18577,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18553,
											"end": 18582,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 18544,
											"end": 18582,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18544,
											"end": 18582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18416,
											"end": 18597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18387,
											"end": 18597,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 18387,
											"end": 18597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18341,
											"end": 18607,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 18341,
											"end": 18607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18253,
											"end": 18613,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 43371,
											"end": 43531,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 43371,
											"end": 43531,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 43470,
											"end": 43483,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 43464,
											"end": 43468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 43457,
											"end": 43484,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 43510,
											"end": 43514,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 43504,
											"end": 43508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 43497,
											"end": 43515,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35143,
											"end": 35156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 35159,
											"end": 35175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 35167,
											"end": 35174,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 35159,
											"end": 35166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 35159,
											"end": 35175,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 35159,
											"end": 35175,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 35159,
											"end": 35175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35143,
											"end": 35175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 35143,
											"end": 35175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 35190,
											"end": 35203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 35230,
											"end": 35235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 35207,
											"end": 35226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 35207,
											"end": 35224,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 35207,
											"end": 35226,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 35207,
											"end": 35226,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 35207,
											"end": 35226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 35207,
											"end": 35235,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 35190,
											"end": 35235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35186,
											"end": 35384,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 35186,
											"end": 35384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 35186,
											"end": 35384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 35254,
											"end": 35298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 35271,
											"end": 35276,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 35278,
											"end": 35297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 35278,
											"end": 35295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 35278,
											"end": 35297,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 35278,
											"end": 35297,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 35278,
											"end": 35297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35254,
											"end": 35270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 35254,
											"end": 35298,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 35254,
											"end": 35298,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 35254,
											"end": 35298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35249,
											"end": 35384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 35249,
											"end": 35384,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 35318,
											"end": 35369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 35326,
											"end": 35368,
											"name": "PUSH",
											"source": 3,
											"value": "CFB3B942"
										},
										{
											"begin": 35326,
											"end": 35368,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 35326,
											"end": 35368,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 35318,
											"end": 35325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 35318,
											"end": 35369,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 35318,
											"end": 35369,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 35318,
											"end": 35369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35249,
											"end": 35384,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 35249,
											"end": 35384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35186,
											"end": 35384,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 35186,
											"end": 35384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 35427,
											"end": 35429,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35409,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 35410,
											"end": 35417,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 35394,
											"end": 35418,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35424,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 35394,
											"end": 35424,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35424,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 35394,
											"end": 35429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 35464,
											"end": 35471,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 35460,
											"end": 35462,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 35453,
											"end": 35458,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 35444,
											"end": 35472,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 35133,
											"end": 35479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 35019,
											"end": 35479,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5482,
											"end": 5489,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12917,
											"end": 12931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12966,
											"end": 12973,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12947,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 12947,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 12947,
											"end": 12962,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12947,
											"end": 12962,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 12947,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12947,
											"end": 12973,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 12943,
											"end": 14765,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 12943,
											"end": 14765,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13015,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13016,
											"end": 13023,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13024,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 12989,
											"end": 13024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12989,
											"end": 13024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13132,
											"end": 13133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13122,
											"end": 13128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13122,
											"end": 13133,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13118,
											"end": 14388,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13118,
											"end": 14388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 13118,
											"end": 14388,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13168,
											"end": 13181,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13168,
											"end": 13181,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 13157,
											"end": 13164,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13157,
											"end": 13181,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 13153,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 13153,
											"end": 13230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13183,
											"end": 13230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 13191,
											"end": 13229,
											"name": "PUSH",
											"source": 3,
											"value": "DF2D9B42"
										},
										{
											"begin": 13191,
											"end": 13229,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 13191,
											"end": 13229,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 13183,
											"end": 13190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 13183,
											"end": 13230,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13183,
											"end": 13230,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 13183,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13153,
											"end": 13230,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 13153,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13870,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13871,
											"end": 13880,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 13853,
											"end": 13881,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 13844,
											"end": 13881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13844,
											"end": 13881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13939,
											"end": 13940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13929,
											"end": 13935,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13929,
											"end": 13940,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13925,
											"end": 13950,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13925,
											"end": 13950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 13925,
											"end": 13950,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13942,
											"end": 13950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 13942,
											"end": 13950,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13925,
											"end": 13950,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 13925,
											"end": 13950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14004,
											"end": 14005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 3,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13976,
											"end": 13982,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13976,
											"end": 14000,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13976,
											"end": 14005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13972,
											"end": 14020,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13972,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 13972,
											"end": 14020,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14007,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 14007,
											"end": 14020,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13972,
											"end": 14020,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 13972,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14308,
											"end": 14355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 14316,
											"end": 14354,
											"name": "PUSH",
											"source": 3,
											"value": "DF2D9B42"
										},
										{
											"begin": 14316,
											"end": 14354,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 14316,
											"end": 14354,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 14308,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 14308,
											"end": 14355,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14308,
											"end": 14355,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 14308,
											"end": 14355,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 13777,
											"end": 14374,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13118,
											"end": 14388,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 13118,
											"end": 14388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14738,
											"end": 14739,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 3,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14710,
											"end": 14716,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14710,
											"end": 14734,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14710,
											"end": 14739,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14706,
											"end": 14754,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14706,
											"end": 14754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 14706,
											"end": 14754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14741,
											"end": 14754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 14741,
											"end": 14754,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14706,
											"end": 14754,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 14706,
											"end": 14754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12943,
											"end": 14765,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 12943,
											"end": 14765,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14774,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 14782,
											"end": 14820,
											"name": "PUSH",
											"source": 3,
											"value": "DF2D9B42"
										},
										{
											"begin": 14782,
											"end": 14820,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 14782,
											"end": 14820,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 14774,
											"end": 14781,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 14774,
											"end": 14821,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14774,
											"end": 14821,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 14774,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12850,
											"end": 14828,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 19570,
											"end": 19597,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19599,
											"end": 19622,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19638,
											"end": 19676,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19679,
											"end": 19694,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19695,
											"end": 19702,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19679,
											"end": 19703,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 19638,
											"end": 19703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19638,
											"end": 19703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19853,
											"end": 19871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19830,
											"end": 19871,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 19830,
											"end": 19871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19909,
											"end": 19928,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19903,
											"end": 19929,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 19884,
											"end": 19929,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19884,
											"end": 19929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19816,
											"end": 19939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19471,
											"end": 19945,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 41401,
											"end": 41504,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 41401,
											"end": 41504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 41461,
											"end": 41468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 41487,
											"end": 41497,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 41480,
											"end": 41497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 41480,
											"end": 41497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 41401,
											"end": 41504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 41401,
											"end": 41504,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18862,
											"end": 18873,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19024,
											"end": 19040,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19017,
											"end": 19022,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19013,
											"end": 19041,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 19004,
											"end": 19041,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 19004,
											"end": 19041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19182,
											"end": 19198,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19171,
											"end": 19180,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19167,
											"end": 19199,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 19154,
											"end": 19199,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19154,
											"end": 19199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 19330,
											"end": 19345,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19319,
											"end": 19328,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19316,
											"end": 19346,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 19308,
											"end": 19313,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19297,
											"end": 19306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 19294,
											"end": 19314,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 19291,
											"end": 19347,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 19281,
											"end": 19347,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19281,
											"end": 19347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18717,
											"end": 19363,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 25901,
											"end": 26055,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 40859,
											"end": 40866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 40878,
											"end": 40894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2516,
											"name": "PUSH",
											"source": 3,
											"value": "E8"
										},
										{
											"begin": 40904,
											"end": 40923,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 40904,
											"end": 40945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 40904,
											"end": 40945,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 40878,
											"end": 40946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 40878,
											"end": 40946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2516,
											"name": "PUSH",
											"source": 3,
											"value": "E8"
										},
										{
											"begin": 40971,
											"end": 41002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 40982,
											"end": 40986,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 40988,
											"end": 40990,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 40992,
											"end": 41001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 40971,
											"end": 40981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 40971,
											"end": 41002,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 40971,
											"end": 41002,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 40971,
											"end": 41002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 40963,
											"end": 41003,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFF"
										},
										{
											"begin": 40963,
											"end": 41003,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 40963,
											"end": 41025,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 40963,
											"end": 41025,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 40956,
											"end": 41025,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 40956,
											"end": 41025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 40956,
											"end": 41025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 40728,
											"end": 41032,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15441,
											"end": 15455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15606,
											"end": 15622,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15599,
											"end": 15604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15595,
											"end": 15623,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15586,
											"end": 15623,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15586,
											"end": 15623,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15781,
											"end": 15786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15767,
											"end": 15778,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 15742,
											"end": 15765,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 15738,
											"end": 15779,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 15735,
											"end": 15787,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15728,
											"end": 15733,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15725,
											"end": 15788,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15715,
											"end": 15788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15715,
											"end": 15788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15361,
											"end": 15804,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26702,
											"end": 26855,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27441,
											"end": 27445,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 27486,
											"end": 27488,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27506,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27461,
											"end": 27506,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27506,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 27507,
											"end": 27526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 27507,
											"end": 27524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 27507,
											"end": 27526,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 27507,
											"end": 27526,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 27507,
											"end": 27526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27528,
											"end": 27532,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 27534,
											"end": 27541,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 27543,
											"end": 27548,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 27461,
											"end": 27549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27756,
											"end": 27757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 27739,
											"end": 27745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27739,
											"end": 27752,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 27739,
											"end": 27757,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 27735,
											"end": 27848,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 27735,
											"end": 27848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 27735,
											"end": 27848,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 27777,
											"end": 27833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 27785,
											"end": 27832,
											"name": "PUSH",
											"source": 3,
											"value": "D1A57ED6"
										},
										{
											"begin": 27785,
											"end": 27832,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 27785,
											"end": 27832,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 27777,
											"end": 27784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 27777,
											"end": 27833,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 27777,
											"end": 27833,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 27777,
											"end": 27833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27735,
											"end": 27848,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 27735,
											"end": 27848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27918,
											"end": 27924,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27912,
											"end": 27925,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 27903,
											"end": 27909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27899,
											"end": 27901,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 27895,
											"end": 27910,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27888,
											"end": 27926,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 27457,
											"end": 27950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27627,
											"end": 27681,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 27627,
											"end": 27681,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 27627,
											"end": 27681,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 27617,
											"end": 27623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 27617,
											"end": 27681,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 27610,
											"end": 27681,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 27610,
											"end": 27681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27610,
											"end": 27681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 27283,
											"end": 27956,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10987,
											"end": 11079,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 10987,
											"end": 11079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11038,
											"end": 11051,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10987,
											"end": 11079,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10987,
											"end": 11079,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 41666,
											"end": 41683,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 42094,
											"end": 42098,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 42087,
											"end": 42091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 42081,
											"end": 42092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 42077,
											"end": 42099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 42184,
											"end": 42185,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 42178,
											"end": 42182,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 42171,
											"end": 42186,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 42257,
											"end": 42261,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 42254,
											"end": 42255,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 42250,
											"end": 42262,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 42243,
											"end": 42262,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 42243,
											"end": 42262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 42337,
											"end": 42338,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 42332,
											"end": 42335,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 42325,
											"end": 42339,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 42438,
											"end": 42441,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 42672,
											"end": 42677,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 42680,
											"end": 42681,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 42719,
											"end": 42720,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 42714,
											"end": 42717,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 42710,
											"end": 42721,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 42703,
											"end": 42721,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 42703,
											"end": 42721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 42887,
											"end": 42889,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 42881,
											"end": 42885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 42877,
											"end": 42890,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 42873,
											"end": 42875,
											"name": "PUSH",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 42869,
											"end": 42891,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 42864,
											"end": 42867,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 42856,
											"end": 42892,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 42979,
											"end": 42981,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 42973,
											"end": 42977,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 42969,
											"end": 42982,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 42961,
											"end": 42982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 42961,
											"end": 42982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 43044,
											"end": 43048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 43034,
											"end": 43059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 43034,
											"end": 43059,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 43052,
											"end": 43057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 43052,
											"end": 43057,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 43034,
											"end": 43059,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 43034,
											"end": 43059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 42654,
											"end": 43073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 42658,
											"end": 42679,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 43110,
											"end": 43113,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 43105,
											"end": 43108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 43101,
											"end": 43114,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 43223,
											"end": 43227,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 43218,
											"end": 43221,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 43214,
											"end": 43228,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 43207,
											"end": 43228,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 43207,
											"end": 43228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 43286,
											"end": 43292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 43281,
											"end": 43284,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 43274,
											"end": 43293,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 41704,
											"end": 43303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 41704,
											"end": 43303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 41704,
											"end": 43303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 41601,
											"end": 43309,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 40572,
											"end": 40578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 40439,
											"end": 40582,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1867,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1888,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1973,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1979,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1905,
											"end": 1915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2013,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2014,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2076,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2089,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 2105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2187,
											"end": 2192,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2197,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2207,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 2368,
											"end": 2373,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2452,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2507,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2501,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2311,
											"end": 2583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2742,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2738,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2789,
											"end": 2798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2787,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2799,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2753,
											"end": 2800,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2979,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3062,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3210,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 3246,
											"end": 3251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 3369,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3351,
											"end": 3358,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3718,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3665,
											"end": 3719,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3775,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 3815,
											"end": 3820,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3915,
											"end": 3918,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3945,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4050,
											"end": 4054,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4090,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4077,
											"end": 4086,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4167,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4154,
											"end": 4171,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4145,
											"end": 4151,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 4276,
											"end": 4281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4248,
											"end": 4283,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4299,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4364,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4404,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 4440,
											"end": 4445,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4526,
											"end": 4532,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4540,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4585,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4580,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4558,
											"end": 4581,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4586,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 4779,
											"end": 4786,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4776,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4755,
											"end": 4777,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4838,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 4907,
											"end": 4914,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4904,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4887,
											"end": 4896,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4883,
											"end": 4905,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 5043,
											"end": 5048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5023,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5013,
											"end": 5050,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5155,
											"end": 5159,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5195,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5182,
											"end": 5191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5178,
											"end": 5196,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5170,
											"end": 5196,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5170,
											"end": 5196,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 5274,
											"end": 5275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5272,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5250,
											"end": 5256,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5367,
											"end": 5373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5375,
											"end": 5381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5434,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5420,
											"end": 5429,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5411,
											"end": 5418,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5430,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5403,
											"end": 5435,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 5628,
											"end": 5635,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5619,
											"end": 5625,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5608,
											"end": 5617,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5604,
											"end": 5626,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5636,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5529,
											"end": 5646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5685,
											"end": 5687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 5756,
											"end": 5763,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5747,
											"end": 5753,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5736,
											"end": 5745,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5732,
											"end": 5754,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5764,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5813,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 5884,
											"end": 5891,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5875,
											"end": 5881,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5864,
											"end": 5873,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5860,
											"end": 5882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5829,
											"end": 5892,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5829,
											"end": 5892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5974,
											"end": 5980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6025,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6011,
											"end": 6020,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6002,
											"end": 6009,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6021,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5994,
											"end": 6026,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6210,
											"end": 6216,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6208,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6195,
											"end": 6217,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6164,
											"end": 6227,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6164,
											"end": 6227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6120,
											"end": 6237,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6313,
											"end": 6318,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6310,
											"end": 6342,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6346,
											"end": 6358,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6440,
											"end": 6460,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 6493,
											"end": 6498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6582,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6635,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6621,
											"end": 6630,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6612,
											"end": 6619,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6636,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6759,
											"end": 6760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 6829,
											"end": 6836,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6809,
											"end": 6818,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6805,
											"end": 6827,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6886,
											"end": 6888,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 6954,
											"end": 6961,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6945,
											"end": 6951,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6934,
											"end": 6943,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 6952,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6857,
											"end": 6972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7091,
											"end": 7092,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7084,
											"end": 7096,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7217,
											"end": 7218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7215,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7207,
											"end": 7219,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7279,
											"end": 7356,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7357,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7376,
											"end": 7380,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7366,
											"end": 7381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7397,
											"end": 7398,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7390,
											"end": 7405,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 7522,
											"end": 7526,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7488,
											"end": 7528,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7618,
											"end": 7628,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7615,
											"end": 7637,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7594,
											"end": 7612,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7592,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7613,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7576,
											"end": 7638,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7681,
											"end": 7691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7460,
											"end": 7698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7744,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 7822,
											"end": 7826,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7900,
											"end": 7904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7979,
											"end": 8009,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8134,
											"end": 8138,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8128,
											"end": 8132,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8124,
											"end": 8139,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8236,
											"end": 8242,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8231,
											"end": 8234,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8226,
											"end": 8229,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8213,
											"end": 8243,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 8298,
											"end": 8299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8284,
											"end": 8287,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8280,
											"end": 8296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8273,
											"end": 8300,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8389,
											"end": 8394,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 8471,
											"end": 8477,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "tag",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "tag",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8502,
											"end": 8508,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8488,
											"end": 8509,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8533,
											"end": 8538,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8529,
											"end": 8545,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8578,
											"end": 8581,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8564,
											"end": 8567,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8560,
											"end": 8576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8557,
											"end": 8582,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "tag",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "tag",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 8709,
											"end": 8715,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8704,
											"end": 8707,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8699,
											"end": 8702,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "tag",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8395,
											"end": 8722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8848,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 8842,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 8830,
											"end": 8836,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 8843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8822,
											"end": 8849,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "tag",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "tag",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8970,
											"end": 8976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8957,
											"end": 8977,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 9069,
											"end": 9072,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9061,
											"end": 9067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9054,
											"end": 9058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9046,
											"end": 9052,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9042,
											"end": 9059,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "tag",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8802,
											"end": 9079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9180,
											"end": 9186,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9196,
											"end": 9202,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9253,
											"end": 9256,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 9241,
											"end": 9250,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9232,
											"end": 9239,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9228,
											"end": 9251,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9224,
											"end": 9257,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "tag",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "tag",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9380,
											"end": 9381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "398"
										},
										{
											"begin": 9450,
											"end": 9457,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9441,
											"end": 9447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9430,
											"end": 9439,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "tag",
											"source": 5,
											"value": "398"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9351,
											"end": 9468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9507,
											"end": 9509,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 9578,
											"end": 9585,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9569,
											"end": 9575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9567,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9554,
											"end": 9576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "tag",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9478,
											"end": 9596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9635,
											"end": 9637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 9706,
											"end": 9713,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9686,
											"end": 9695,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9682,
											"end": 9704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "tag",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9606,
											"end": 9724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9791,
											"end": 9793,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 9780,
											"end": 9789,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9776,
											"end": 9794,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9763,
											"end": 9795,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9814,
											"end": 9820,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9811,
											"end": 9841,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "tag",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "tag",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 10003,
											"end": 10010,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9983,
											"end": 9992,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9979,
											"end": 10001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "tag",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9734,
											"end": 10021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10102,
											"end": 10108,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10159,
											"end": 10161,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10147,
											"end": 10156,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10134,
											"end": 10157,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10130,
											"end": 10162,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "tag",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "tag",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10285,
											"end": 10286,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 10355,
											"end": 10362,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10346,
											"end": 10352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10335,
											"end": 10344,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10331,
											"end": 10353,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "tag",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10256,
											"end": 10373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10412,
											"end": 10414,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 10483,
											"end": 10490,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10474,
											"end": 10480,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10463,
											"end": 10472,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10459,
											"end": 10481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "tag",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10383,
											"end": 10501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10562,
											"end": 10639,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10559,
											"end": 10560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10552,
											"end": 10640,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10659,
											"end": 10663,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 10656,
											"end": 10657,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10649,
											"end": 10664,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10673,
											"end": 10688,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10744,
											"end": 10750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10782,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 10775,
											"end": 10779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10771,
											"end": 10783,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10828,
											"end": 10829,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10822,
											"end": 10826,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10818,
											"end": 10830,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10849,
											"end": 10867,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10905,
											"end": 10909,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 10897,
											"end": 10903,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10893,
											"end": 10910,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "tag",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10967,
											"end": 10969,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10959,
											"end": 10965,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10956,
											"end": 10970,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10933,
											"end": 10971,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "tag",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "tag",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10751,
											"end": 11020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11128,
											"end": 11139,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11165,
											"end": 11168,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11286,
											"end": 11289,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 11347,
											"end": 11352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "tag",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11446,
											"end": 11449,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "tag",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11362,
											"end": 11458,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11362,
											"end": 11458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 11512,
											"end": 11518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11507,
											"end": 11510,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11500,
											"end": 11504,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11493,
											"end": 11498,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11489,
											"end": 11505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "tag",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11544,
											"end": 11550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11539,
											"end": 11542,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11535,
											"end": 11551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11290,
											"end": 11557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11743,
											"end": 11746,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 11856,
											"end": 11859,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11847,
											"end": 11853,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11758,
											"end": 11860,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11758,
											"end": 11860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 11968,
											"end": 11971,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11959,
											"end": 11965,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "tag",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11870,
											"end": 11972,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11870,
											"end": 11972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11989,
											"end": 11992,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11982,
											"end": 11992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11982,
											"end": 11992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12004,
											"end": 12184,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 12004,
											"end": 12184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12052,
											"end": 12129,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12049,
											"end": 12050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12042,
											"end": 12130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12149,
											"end": 12153,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 12146,
											"end": 12147,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12139,
											"end": 12154,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12173,
											"end": 12177,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 12170,
											"end": 12171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12190,
											"end": 12361,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 12190,
											"end": 12361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12229,
											"end": 12232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12252,
											"end": 12276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 12270,
											"end": 12275,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12252,
											"end": 12276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 12252,
											"end": 12276,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12252,
											"end": 12276,
											"name": "tag",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 12252,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12243,
											"end": 12276,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12243,
											"end": 12276,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12298,
											"end": 12302,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12291,
											"end": 12296,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12285,
											"end": 12326,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12285,
											"end": 12326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 12285,
											"end": 12326,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12306,
											"end": 12324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 12306,
											"end": 12324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 12306,
											"end": 12324,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12306,
											"end": 12324,
											"name": "tag",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 12306,
											"end": 12324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12285,
											"end": 12326,
											"name": "tag",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 12285,
											"end": 12326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12353,
											"end": 12354,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 12346,
											"end": 12351,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12342,
											"end": 12355,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12335,
											"end": 12355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12335,
											"end": 12355,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12190,
											"end": 12361,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12190,
											"end": 12361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12190,
											"end": 12361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12190,
											"end": 12361,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12367,
											"end": 12465,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 12367,
											"end": 12465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12418,
											"end": 12424,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12452,
											"end": 12457,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12446,
											"end": 12458,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12436,
											"end": 12458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12436,
											"end": 12458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12367,
											"end": 12465,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12367,
											"end": 12465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12367,
											"end": 12465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12367,
											"end": 12465,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12471,
											"end": 12639,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 12471,
											"end": 12639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12554,
											"end": 12565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12588,
											"end": 12594,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12583,
											"end": 12586,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12576,
											"end": 12595,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12628,
											"end": 12632,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12623,
											"end": 12626,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12619,
											"end": 12633,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12604,
											"end": 12633,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12604,
											"end": 12633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12471,
											"end": 12639,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12471,
											"end": 12639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12471,
											"end": 12639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12471,
											"end": 12639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12471,
											"end": 12639,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12645,
											"end": 13005,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 12645,
											"end": 13005,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12731,
											"end": 12734,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12759,
											"end": 12797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 12791,
											"end": 12796,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12759,
											"end": 12797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 12759,
											"end": 12797,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12759,
											"end": 12797,
											"name": "tag",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 12759,
											"end": 12797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12813,
											"end": 12883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 12876,
											"end": 12882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12871,
											"end": 12874,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12813,
											"end": 12883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 12813,
											"end": 12883,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12813,
											"end": 12883,
											"name": "tag",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 12813,
											"end": 12883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12806,
											"end": 12883,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12806,
											"end": 12883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12892,
											"end": 12944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 12937,
											"end": 12943,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12932,
											"end": 12935,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12925,
											"end": 12929,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12918,
											"end": 12923,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 12914,
											"end": 12930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12892,
											"end": 12944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 12892,
											"end": 12944,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12892,
											"end": 12944,
											"name": "tag",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 12892,
											"end": 12944,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12969,
											"end": 12998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 12991,
											"end": 12997,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12969,
											"end": 12998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 12969,
											"end": 12998,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12969,
											"end": 12998,
											"name": "tag",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 12969,
											"end": 12998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12964,
											"end": 12967,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12960,
											"end": 12999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12953,
											"end": 12999,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12953,
											"end": 12999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12735,
											"end": 13005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12645,
											"end": 13005,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12645,
											"end": 13005,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12645,
											"end": 13005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12645,
											"end": 13005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12645,
											"end": 13005,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13011,
											"end": 13651,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 13011,
											"end": 13651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13206,
											"end": 13210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13244,
											"end": 13247,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 13233,
											"end": 13242,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13229,
											"end": 13248,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13221,
											"end": 13248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13221,
											"end": 13248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13258,
											"end": 13329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 13326,
											"end": 13327,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13315,
											"end": 13324,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13311,
											"end": 13328,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13302,
											"end": 13308,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 13258,
											"end": 13329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 13258,
											"end": 13329,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13258,
											"end": 13329,
											"name": "tag",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 13258,
											"end": 13329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13339,
											"end": 13411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 13407,
											"end": 13409,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13396,
											"end": 13405,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13392,
											"end": 13410,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13383,
											"end": 13389,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 13339,
											"end": 13411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 13339,
											"end": 13411,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13339,
											"end": 13411,
											"name": "tag",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 13339,
											"end": 13411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13421,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 13489,
											"end": 13491,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13478,
											"end": 13487,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13465,
											"end": 13471,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 13421,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 13421,
											"end": 13493,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13421,
											"end": 13493,
											"name": "tag",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 13421,
											"end": 13493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13540,
											"end": 13549,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13534,
											"end": 13538,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13530,
											"end": 13550,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13525,
											"end": 13527,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 13514,
											"end": 13523,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13510,
											"end": 13528,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13503,
											"end": 13551,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13568,
											"end": 13644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 13639,
											"end": 13643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13630,
											"end": 13636,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13568,
											"end": 13644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 13568,
											"end": 13644,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13568,
											"end": 13644,
											"name": "tag",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 13568,
											"end": 13644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13560,
											"end": 13644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13560,
											"end": 13644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13011,
											"end": 13651,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 13011,
											"end": 13651,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 13011,
											"end": 13651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13011,
											"end": 13651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13011,
											"end": 13651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13011,
											"end": 13651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13011,
											"end": 13651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13011,
											"end": 13651,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13657,
											"end": 13798,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 13657,
											"end": 13798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13713,
											"end": 13718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13744,
											"end": 13750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13738,
											"end": 13751,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13729,
											"end": 13751,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13729,
											"end": 13751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13760,
											"end": 13792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "440"
										},
										{
											"begin": 13786,
											"end": 13791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13760,
											"end": 13792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 13760,
											"end": 13792,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13760,
											"end": 13792,
											"name": "tag",
											"source": 5,
											"value": "440"
										},
										{
											"begin": 13760,
											"end": 13792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13657,
											"end": 13798,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13657,
											"end": 13798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13657,
											"end": 13798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13657,
											"end": 13798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13657,
											"end": 13798,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13804,
											"end": 14153,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 13804,
											"end": 14153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13873,
											"end": 13879,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13922,
											"end": 13924,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13910,
											"end": 13919,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13901,
											"end": 13908,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13897,
											"end": 13920,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13893,
											"end": 13925,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 13890,
											"end": 14009,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13890,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "442"
										},
										{
											"begin": 13890,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13928,
											"end": 14007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 13928,
											"end": 14007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 13928,
											"end": 14007,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13928,
											"end": 14007,
											"name": "tag",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 13928,
											"end": 14007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13890,
											"end": 14009,
											"name": "tag",
											"source": 5,
											"value": "442"
										},
										{
											"begin": 13890,
											"end": 14009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14048,
											"end": 14049,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14073,
											"end": 14136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 14128,
											"end": 14135,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14119,
											"end": 14125,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14108,
											"end": 14117,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 14104,
											"end": 14126,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14073,
											"end": 14136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 14073,
											"end": 14136,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14073,
											"end": 14136,
											"name": "tag",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 14073,
											"end": 14136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14063,
											"end": 14136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14063,
											"end": 14136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14019,
											"end": 14146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13804,
											"end": 14153,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13804,
											"end": 14153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13804,
											"end": 14153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13804,
											"end": 14153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13804,
											"end": 14153,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":{\"keccak256\":\"0x412e6281d70f9a223457a713988e2b3da768fc363627f70c368516e20253ead3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70ab28242e59f2f64510e6177a789d98af2ee413a73cf6d3b839e0cdd3924bcd\",\"dweb:/ipfs/QmfJo969CW8NWrmbz6J46Vxc7MqGdkXJDeqEZ5aUyqiMWJ\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 332,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 334,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 336,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 338,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 342,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 346,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 351,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)264_storage)"
							},
							{
								"astId": 357,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)264_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)264_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)264_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 263,
										"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":{\"keccak256\":\"0x412e6281d70f9a223457a713988e2b3da768fc363627f70c368516e20253ead3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70ab28242e59f2f64510e6177a789d98af2ee413a73cf6d3b839e0cdd3924bcd\",\"dweb:/ipfs/QmfJo969CW8NWrmbz6J46Vxc7MqGdkXJDeqEZ5aUyqiMWJ\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/kiazen/ERC721A.sol": {
				"ast": {
					"absolutePath": "contracts/kiazen/ERC721A.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"ERC721A": [
							2037
						],
						"ERC721A__IERC721Receiver": [
							258
						],
						"IERC721A": [
							2243
						],
						"KaiERC721": [
							240
						],
						"Ownable": [
							112
						]
					},
					"id": 241,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol",
							"file": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 241,
							"sourceUnit": 2038,
							"src": "60:79:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 241,
							"sourceUnit": 113,
							"src": "141:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 139,
										"name": "ERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2037,
										"src": "219:7:2"
									},
									"id": 140,
									"nodeType": "InheritanceSpecifier",
									"src": "219:7:2"
								},
								{
									"baseName": {
										"id": 141,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "228:7:2"
									},
									"id": 142,
									"nodeType": "InheritanceSpecifier",
									"src": "228:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 240,
							"linearizedBaseContracts": [
								240,
								112,
								134,
								2037,
								2243
							],
							"name": "KaiERC721",
							"nameLocation": "206:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "310:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 150,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "340:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "340:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 149,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "321:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "321:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "321:30:2"
											}
										]
									},
									"id": 155,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4b616947656e",
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "292:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_02aefc463685a517d330cf2b417715a420d165ea16b36f00799e719125dde027",
														"typeString": "literal_string \"KaiGen\""
													},
													"value": "KaiGen"
												},
												{
													"hexValue": "4b614745",
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "302:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_35a85d238ae258fcf7e4dafab60a49860064df89b6b516c34b17fcefbf1675e5",
														"typeString": "literal_string \"KaGE\""
													},
													"value": "KaGE"
												}
											],
											"id": 147,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 144,
												"name": "ERC721A",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2037,
												"src": "284:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "284:25:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:20:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "310:0:2"
									},
									"scope": 240,
									"src": "252:111:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										649
									],
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "440:70:2",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f626f7265646170657961636874636c75622e636f6d2f6170692f6d7574616e74732f",
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "458:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_db1f2b0395f8af81a252e25f3b1514283a1767cf693ada85de200c6148eac63d",
														"typeString": "literal_string \"https://boredapeyachtclub.com/api/mutants/\""
													},
													"value": "https://boredapeyachtclub.com/api/mutants/"
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "451:51:2"
											}
										]
									},
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "382:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "407:8:2"
									},
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "425:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "425:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:15:2"
									},
									"scope": 240,
									"src": "373:137:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "599:239:2",
										"statements": [
											{
												"condition": {
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "614:17:2",
													"subExpression": {
														"arguments": [
															{
																"id": 173,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "623:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 172,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "615:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "615:16:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 181,
												"nodeType": "IfStatement",
												"src": "610:68:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 177,
																	"name": "URIQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2073,
																	"src": "641:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "641:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 176,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "633:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "633:45:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 180,
													"nodeType": "ExpressionStatement",
													"src": "633:45:2"
												}
											},
											{
												"assignments": [
													183
												],
												"declarations": [
													{
														"constant": false,
														"id": 183,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "705:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 207,
														"src": "691:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 182,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "691:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 186,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 184,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															164
														],
														"referencedDeclaration": 164,
														"src": "715:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "715:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "691:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 189,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 183,
																		"src": "749:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "743:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 187,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "743:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "743:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "743:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "768:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "743:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "828:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "743:87:2",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 198,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 183,
																		"src": "796:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 200,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 166,
																				"src": "815:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 199,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2028,
																			"src": "805:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "805:18:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 196,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "779:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "779:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "779:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "772:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 194,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "772:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "772:53:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 171,
												"id": 206,
												"nodeType": "Return",
												"src": "736:94:2"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "527:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 168,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "566:8:2"
									},
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "544:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "536:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:17:2"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "584:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 169,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "584:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:15:2"
									},
									"scope": 240,
									"src": "518:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "931:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 218,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "947:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 219,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "951:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 217,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1484,
														"src": "941:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "941:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "941:19:2"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 215,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 214,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "922:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "922:9:2"
										}
									],
									"name": "mint",
									"nameLocation": "855:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "878:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "870:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "899:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "891:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:55:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "931:0:2"
									},
									"scope": 240,
									"src": "846:138:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1062:65:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 233,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "1079:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 232,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1762,
															1916
														],
														"referencedDeclaration": 1762,
														"src": "1073:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1073:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "1073:14:2"
											},
											{
												"expression": {
													"hexValue": "546f6b656e206275726e6564",
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1105:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f179cca78851df571f27eadc26224b7c780b47009e7de9d5b85753c4663b5c97",
														"typeString": "literal_string \"Token burned\""
													},
													"value": "Token burned"
												},
												"functionReturnParameters": 231,
												"id": 237,
												"nodeType": "Return",
												"src": "1098:21:2"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 228,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 227,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1028:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1028:9:2"
										}
									],
									"name": "burn",
									"nameLocation": "999:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:17:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1047:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 229,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1047:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:15:2"
									},
									"scope": 240,
									"src": "990:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 241,
							"src": "197:933:2",
							"usedErrors": [
								2043,
								2046,
								2049,
								2052,
								2055,
								2058,
								2061,
								2064,
								2067,
								2070,
								2073,
								2076,
								2079
							]
						}
					],
					"src": "33:1102:2"
				},
				"id": 2
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							2037
						],
						"ERC721A__IERC721Receiver": [
							258
						],
						"IERC721A": [
							2243
						]
					},
					"id": 2038,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 242,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:3"
						},
						{
							"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 243,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2038,
							"sourceUnit": 2244,
							"src": "109:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 244,
								"nodeType": "StructuredDocumentation",
								"src": "135:51:3",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 258,
							"linearizedBaseContracts": [
								258
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "197:24:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "237:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "271:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "263:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "297:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "289:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "319:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "311:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "351:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "336:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "336:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:108:3"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "380:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 254,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:3"
									},
									"scope": 258,
									"src": "228:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2038,
							"src": "187:203:3",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 260,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2243,
										"src": "915:8:3"
									},
									"id": 261,
									"nodeType": "InheritanceSpecifier",
									"src": "915:8:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 259,
								"nodeType": "StructuredDocumentation",
								"src": "392:502:3",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 2037,
							"linearizedBaseContracts": [
								2037,
								2243
							],
							"name": "ERC721A",
							"nameLocation": "904:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 264,
									"members": [
										{
											"constant": false,
											"id": 263,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1057:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 264,
											"src": "1049:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 262,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "1022:16:3",
									"nodeType": "StructDefinition",
									"scope": 2037,
									"src": "1015:54:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 272,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "1330:27:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "1305:68:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 265,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1305:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 271,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1361:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1366:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1361:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 269,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1360:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 270,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1372:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1360:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 275,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "1471:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "1446:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 273,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1446:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 274,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1495:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 278,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "1595:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "1570:52:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 276,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1570:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 277,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1619:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 281,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "1711:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "1686:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 279,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1686:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 280,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1725:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 289,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1841:23:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "1816:65:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 282,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1816:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 288,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1868:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1873:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1868:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 286,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1867:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 287,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1880:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1867:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 292,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "1978:23:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "1953:54:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 290,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1953:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 291,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2004:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 297,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "2100:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "2075:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 293,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2075:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 296,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 294,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2118:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 295,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2123:3:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "2118:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 300,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "2232:24:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "2207:55:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 298,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2207:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 299,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2259:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 305,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2364:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "2339:61:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 301,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2339:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 304,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 302,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2392:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 303,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2397:3:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2392:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 308,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "2492:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "2467:49:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 306,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2467:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 307,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2513:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 316,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2634:30:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "2609:72:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 309,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2609:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 315,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2668:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2673:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2668:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 313,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2667:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 314,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2680:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2667:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 324,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "2766:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "2741:58:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 317,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2741:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 323,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2786:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2791:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2786:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 321,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2785:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 322,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2798:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2785:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 327,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "3107:32:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "3082:64:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 325,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3082:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 326,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3142:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 330,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "3293:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "3268:127:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 328,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3268:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 329,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3329:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "3638:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "3622:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 331,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3622:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "3710:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "3694:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 333,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3694:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 336,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3762:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "3747:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 335,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3747:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 338,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3809:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "3794:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 337,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3794:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 342,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "4236:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "4200:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 341,
										"keyType": {
											"id": 339,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4208:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4200:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 340,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4219:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 346,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "4495:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "4459:54:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 345,
										"keyType": {
											"id": 343,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4467:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4459:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 344,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4478:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "4615:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "4570:60:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$264_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 350,
										"keyType": {
											"id": 347,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4578:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4570:36:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$264_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueType": {
											"id": 349,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 348,
												"name": "TokenApprovalRef",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 264,
												"src": "4589:16:3"
											},
											"referencedDeclaration": 264,
											"src": "4589:16:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$264_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 357,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "4738:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "4685:71:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 356,
										"keyType": {
											"id": 352,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4693:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4685:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 355,
											"keyType": {
												"id": 353,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4712:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4704:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 354,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4723:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "5002:98:3",
										"statements": [
											{
												"expression": {
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 364,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "5012:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 365,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "5020:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5012:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "5012:13:3"
											},
											{
												"expression": {
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 368,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "5035:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 369,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "5045:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5035:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "5035:17:3"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 372,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "5062:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 373,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "5078:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5078:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5062:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "5062:31:3"
											}
										]
									},
									"id": 378,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "4972:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "4958:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4958:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "4993:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "4979:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 360,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4979:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:44:3"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5002:0:3"
									},
									"scope": 2037,
									"src": "4946:154:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "5491:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5508:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 383,
												"id": 385,
												"nodeType": "Return",
												"src": "5501:8:3"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "5296:125:3",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "5435:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5448:2:3"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5482:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5482:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5481:9:3"
									},
									"scope": 2037,
									"src": "5426:90:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "5654:37:3",
										"statements": [
											{
												"expression": {
													"id": 393,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "5671:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 392,
												"id": 394,
												"nodeType": "Return",
												"src": "5664:20:3"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "5522:63:3",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "5599:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5611:2:3"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "5645:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:9:3"
									},
									"scope": 2037,
									"src": "5590:101:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2094
									],
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "5964:247:3",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "6117:88:3",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 403,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "6148:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 404,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "6164:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6148:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 406,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6179:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6148:46:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 402,
														"id": 409,
														"nodeType": "Return",
														"src": "6141:53:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "5697:192:3",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5903:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 399,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5937:8:3"
									},
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5914:2:3"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5955:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5954:9:3"
									},
									"scope": 2037,
									"src": "5894:317:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "6368:226:3",
										"statements": [
											{
												"id": 423,
												"nodeType": "UncheckedBlock",
												"src": "6515:73:3",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 418,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "6546:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 419,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6562:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6562:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6546:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 417,
														"id": 422,
														"nodeType": "Return",
														"src": "6539:38:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "6217:82:3",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "6313:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6325:2:3"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "6359:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:9:3"
									},
									"scope": 2037,
									"src": "6304:290:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "6735:36:3",
										"statements": [
											{
												"expression": {
													"id": 431,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "6752:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 430,
												"id": 432,
												"nodeType": "Return",
												"src": "6745:19:3"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "6600:66:3",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "6680:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6692:2:3"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "6726:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6726:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6725:9:3"
									},
									"scope": 2037,
									"src": "6671:100:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2137
									],
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "7126:158:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 443,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "7140:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7157:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7149:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 444,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7149:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7140:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "7136:69:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 450,
																	"name": "BalanceQueryForZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2049,
																	"src": "7169:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "7169:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 449,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "7161:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7161:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 453,
													"nodeType": "ExpressionStatement",
													"src": "7161:44:3"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 455,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "7222:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 457,
														"indexExpression": {
															"id": 456,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "7241:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7222:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 458,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "7250:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7222:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 442,
												"id": 460,
												"nodeType": "Return",
												"src": "7215:62:3"
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "6966:74:3",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7054:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 439,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7099:8:3"
									},
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7072:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "7064:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7064:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7063:15:3"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "7117:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7117:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7116:9:3"
									},
									"scope": 2037,
									"src": "7045:239:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "7431:106:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 470,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "7449:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 472,
																	"indexExpression": {
																		"id": 471,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "7468:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7449:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 473,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "7478:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7449:50:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 475,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7448:52:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 476,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "7503:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7448:82:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 469,
												"id": 478,
												"nodeType": "Return",
												"src": "7441:89:3"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "7290:66:3",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "7370:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7392:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "7384:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7384:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7383:15:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "7422:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7422:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7421:9:3"
									},
									"scope": 2037,
									"src": "7361:176:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "7700:106:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 488,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "7718:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 490,
																	"indexExpression": {
																		"id": 489,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "7737:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7718:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 491,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "7747:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7718:50:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 493,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7717:52:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 494,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "7772:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7717:82:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 487,
												"id": 496,
												"nodeType": "Return",
												"src": "7710:89:3"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "7543:82:3",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "7639:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7661:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "7653:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7653:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7652:15:3"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "7691:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7691:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7690:9:3"
									},
									"scope": 2037,
									"src": "7630:176:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "7982:72:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 508,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "8006:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 510,
																"indexExpression": {
																	"id": 509,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "8025:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8006:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 511,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "8035:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8006:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7999:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 506,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7999:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7999:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 505,
												"id": 514,
												"nodeType": "Return",
												"src": "7992:55:3"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "7812:102:3",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "7928:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7944:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "7936:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7936:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7935:15:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "7974:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 503,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7974:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7973:8:3"
									},
									"scope": 2037,
									"src": "7919:135:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "8297:334:3",
										"statements": [
											{
												"assignments": [
													525
												],
												"declarations": [
													{
														"constant": false,
														"id": 525,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "8315:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "8307:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 524,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8307:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 529,
												"initialValue": {
													"baseExpression": {
														"id": 526,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "8324:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 528,
													"indexExpression": {
														"id": 527,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "8343:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8324:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8307:42:3"
											},
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "8367:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "8359:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8359:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 532,
												"nodeType": "VariableDeclarationStatement",
												"src": "8359:17:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8459:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8473:16:3",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "8486:3:3"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "8473:9:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 521,
														"isOffset": false,
														"isSlot": false,
														"src": "8486:3:3",
														"valueSize": 1
													},
													{
														"declaration": 531,
														"isOffset": false,
														"isSlot": false,
														"src": "8473:9:3",
														"valueSize": 1
													}
												],
												"id": 533,
												"nodeType": "InlineAssembly",
												"src": "8450:49:3"
											},
											{
												"expression": {
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 534,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "8508:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 535,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 525,
																		"src": "8518:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 536,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "8527:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8518:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 538,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8517:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 539,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "8555:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 540,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "8568:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8555:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 542,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8554:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8517:63:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8508:72:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "8508:72:3"
											},
											{
												"expression": {
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 546,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "8590:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 548,
														"indexExpression": {
															"id": 547,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "8609:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8590:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 549,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "8618:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8590:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "8590:34:3"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "8060:171:3",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "8245:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8261:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "8253:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8253:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "8275:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "8268:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 520,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8268:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8252:27:3"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8297:0:3"
									},
									"scope": 2037,
									"src": "8236:395:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2102
									],
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "9255:539:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 562,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "9567:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9582:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "9567:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 565,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "9643:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9658:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "9643:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9567:101:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 569,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "9719:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9734:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "9719:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9567:177:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 561,
												"id": 573,
												"nodeType": "Return",
												"src": "9548:196:3"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "8818:341:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "9173:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 558,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9231:8:3"
									},
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "9198:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "9191:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 555,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "9191:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9190:20:3"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "9249:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 559,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9249:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9248:6:3"
									},
									"scope": 2037,
									"src": "9164:630:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2217
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "10117:29:3",
										"statements": [
											{
												"expression": {
													"id": 582,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 336,
													"src": "10134:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "10127:12:3"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "9985:58:3",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10057:4:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 578,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10084:8:3"
									},
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10061:2:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "10102:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10102:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10101:15:3"
									},
									"scope": 2037,
									"src": "10048:98:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2223
									],
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "10288:31:3",
										"statements": [
											{
												"expression": {
													"id": 592,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 338,
													"src": "10305:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 591,
												"id": 593,
												"nodeType": "Return",
												"src": "10298:14:3"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "10152:60:3",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10226:6:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 588,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10255:8:3"
									},
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10232:2:3"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "10273:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 589,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10273:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10272:15:3"
									},
									"scope": 2037,
									"src": "10217:102:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2231
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "10508:234:3",
										"statements": [
											{
												"condition": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10522:17:3",
													"subExpression": {
														"arguments": [
															{
																"id": 605,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "10531:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 604,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "10523:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10523:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "10518:68:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 609,
																	"name": "URIQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2073,
																	"src": "10549:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "10549:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 608,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "10541:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10541:45:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 612,
													"nodeType": "ExpressionStatement",
													"src": "10541:45:3"
												}
											},
											{
												"assignments": [
													615
												],
												"declarations": [
													{
														"constant": false,
														"id": 615,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "10611:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "10597:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 614,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10597:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 616,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "10621:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10621:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10597:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 621,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "10654:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10648:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 619,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10648:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10648:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10648:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10673:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10648:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10733:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10648:87:3",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 630,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "10701:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 632,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 598,
																				"src": "10720:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 631,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2028,
																			"src": "10710:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10710:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 628,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "10684:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "10684:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10684:45:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10677:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 626,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "10677:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10677:53:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 603,
												"id": 638,
												"nodeType": "Return",
												"src": "10641:94:3"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "10325:90:3",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "10429:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 600,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10475:8:3"
									},
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10446:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "10438:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10437:17:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "10493:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 601,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10493:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10492:15:3"
									},
									"scope": 2037,
									"src": "10420:322:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "11053:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11070:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 645,
												"id": 647,
												"nodeType": "Return",
												"src": "11063:9:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "10748:234:3",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "10996:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11004:2:3"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "11038:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 643,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11038:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11037:15:3"
									},
									"scope": 2037,
									"src": "10987:92:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2145
									],
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "11490:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 663,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 652,
																			"src": "11542:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 662,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "11523:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11523:27:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11515:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 660,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11515:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11515:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11507:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 658,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11507:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11507:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 657,
												"id": 667,
												"nodeType": "Return",
												"src": "11500:52:3"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "11273:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "11418:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 654,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11463:8:3"
									},
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11434:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "11426:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11426:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11425:17:3"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "11481:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11481:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11480:9:3"
									},
									"scope": 2037,
									"src": "11409:150:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "11835:71:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 680,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "11890:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 679,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "11871:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11871:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 678,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "11852:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$2088_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11852:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2088_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 677,
												"id": 683,
												"nodeType": "Return",
												"src": "11845:54:3"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "11565:172:3",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "11751:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11772:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "11764:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11764:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11763:17:3"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "11812:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2088_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 675,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 674,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2088,
														"src": "11812:14:3"
													},
													"referencedDeclaration": 2088,
													"src": "11812:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2088_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11811:23:3"
									},
									"scope": 2037,
									"src": "11742:164:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "12088:68:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 695,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "12124:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 697,
															"indexExpression": {
																"id": 696,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "12142:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12124:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "12105:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$2088_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12105:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2088_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 693,
												"id": 699,
												"nodeType": "Return",
												"src": "12098:51:3"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "11912:80:3",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "12006:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12027:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "12019:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12019:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12018:15:3"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "12065:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2088_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 691,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 690,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2088,
														"src": "12065:14:3"
													},
													"referencedDeclaration": 2088,
													"src": "12065:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2088_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12064:23:3"
									},
									"scope": 2037,
									"src": "11997:159:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "12420:53:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 709,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "12437:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 711,
														"indexExpression": {
															"id": 710,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "12455:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12437:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12465:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12437:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 708,
												"id": 714,
												"nodeType": "Return",
												"src": "12430:36:3"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "12162:168:3",
										"text": " @dev Returns whether the ownership slot at `index` is initialized.\n An uninitialized slot does not necessarily mean that the slot has no owner."
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipIsInitialized",
									"nameLocation": "12344:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12376:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "12368:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12368:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12367:15:3"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "12414:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 706,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12414:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12413:6:3"
									},
									"scope": 2037,
									"src": "12335:138:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "12645:128:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 722,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "12659:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 724,
														"indexExpression": {
															"id": 723,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "12677:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12659:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12687:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12659:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 736,
												"nodeType": "IfStatement",
												"src": "12655:112:3",
												"trueBody": {
													"id": 735,
													"nodeType": "Block",
													"src": "12690:77:3",
													"statements": [
														{
															"expression": {
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 727,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "12704:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 729,
																	"indexExpression": {
																		"id": 728,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "12722:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12704:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 731,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "12750:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 730,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "12731:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12731:25:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12704:52:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 734,
															"nodeType": "ExpressionStatement",
															"src": "12704:52:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "12479:97:3",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "12590:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12621:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "12613:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12613:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12612:15:3"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12645:0:3"
									},
									"scope": 2037,
									"src": "12581:192:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "12933:1895:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 746,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "12947:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12947:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 748,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "12966:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12947:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 807,
												"nodeType": "IfStatement",
												"src": "12943:1822:3",
												"trueBody": {
													"id": 806,
													"nodeType": "Block",
													"src": "12975:1790:3",
													"statements": [
														{
															"expression": {
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 750,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "12989:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 751,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "12998:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 753,
																	"indexExpression": {
																		"id": 752,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "13016:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12998:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12989:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 755,
															"nodeType": "ExpressionStatement",
															"src": "12989:35:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 756,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "13122:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13132:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13122:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 797,
															"nodeType": "IfStatement",
															"src": "13118:1270:3",
															"trueBody": {
																"id": 796,
																"nodeType": "Block",
																"src": "13135:1253:3",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 759,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 741,
																				"src": "13157:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 760,
																				"name": "_currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 332,
																				"src": "13168:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13157:24:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 767,
																		"nodeType": "IfStatement",
																		"src": "13153:77:3",
																		"trueBody": {
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 763,
																							"name": "OwnerQueryForNonexistentToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2058,
																							"src": "13191:29:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 764,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "13191:38:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					],
																					"id": 762,
																					"name": "_revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2036,
																					"src": "13183:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																						"typeString": "function (bytes4) pure"
																					}
																				},
																				"id": 765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13183:47:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 766,
																			"nodeType": "ExpressionStatement",
																			"src": "13183:47:3"
																		}
																	},
																	{
																		"body": {
																			"id": 794,
																			"nodeType": "Block",
																			"src": "13786:588:3",
																			"statements": [
																				{
																					"id": 775,
																					"nodeType": "UncheckedBlock",
																					"src": "13808:96:3",
																					"statements": [
																						{
																							"expression": {
																								"id": 773,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 768,
																									"name": "packed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 744,
																									"src": "13844:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 769,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 342,
																										"src": "13853:17:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 772,
																									"indexExpression": {
																										"id": 771,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "--",
																										"prefix": true,
																										"src": "13871:9:3",
																										"subExpression": {
																											"id": 770,
																											"name": "tokenId",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 741,
																											"src": "13873:7:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "13853:28:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "13844:37:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 774,
																							"nodeType": "ExpressionStatement",
																							"src": "13844:37:3"
																						}
																					]
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 778,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 776,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 744,
																							"src": "13929:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 777,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13939:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "13929:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 780,
																					"nodeType": "IfStatement",
																					"src": "13925:25:3",
																					"trueBody": {
																						"id": 779,
																						"nodeType": "Continue",
																						"src": "13942:8:3"
																					}
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 785,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 783,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 781,
																								"name": "packed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 744,
																								"src": "13976:6:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "&",
																							"rightExpression": {
																								"id": 782,
																								"name": "_BITMASK_BURNED",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 297,
																								"src": "13985:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "13976:24:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 784,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14004:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "13976:29:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 788,
																					"nodeType": "IfStatement",
																					"src": "13972:48:3",
																					"trueBody": {
																						"expression": {
																							"id": 786,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 744,
																							"src": "14014:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 745,
																						"id": 787,
																						"nodeType": "Return",
																						"src": "14007:13:3"
																					}
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 790,
																									"name": "OwnerQueryForNonexistentToken",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2058,
																									"src": "14316:29:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 791,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "selector",
																								"nodeType": "MemberAccess",
																								"src": "14316:38:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							],
																							"id": 789,
																							"name": "_revert",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2036,
																							"src": "14308:7:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																								"typeString": "function (bytes4) pure"
																							}
																						},
																						"id": 792,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "14308:47:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 793,
																					"nodeType": "ExpressionStatement",
																					"src": "14308:47:3"
																				}
																			]
																		},
																		"id": 795,
																		"nodeType": "ForStatement",
																		"src": "13777:597:3"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 798,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 744,
																		"src": "14710:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 799,
																		"name": "_BITMASK_BURNED",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 297,
																		"src": "14719:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14710:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14738:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14710:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 805,
															"nodeType": "IfStatement",
															"src": "14706:48:3",
															"trueBody": {
																"expression": {
																	"id": 803,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "14748:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 745,
																"id": 804,
																"nodeType": "Return",
																"src": "14741:13:3"
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 809,
																"name": "OwnerQueryForNonexistentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "14782:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "14782:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 808,
														"name": "_revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2036,
														"src": "14774:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4) pure"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14774:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "14774:47:3"
											}
										]
									},
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "12779:66:3",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "12859:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12886:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "12878:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12878:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12877:17:3"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "12925:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "12917:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12917:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12916:16:3"
									},
									"scope": 2037,
									"src": "12850:1978:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "15021:262:3",
										"statements": [
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 823,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "15031:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2088_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2081,
														"src": "15031:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 830,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "15064:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15056:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 828,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "15056:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15056:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15048:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 826,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15048:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15048:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15031:41:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "15031:41:3"
											},
											{
												"expression": {
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 835,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "15082:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2088_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2083,
														"src": "15082:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 840,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "15116:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 841,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "15126:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15116:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15109:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 838,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "15109:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15109:41:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "15082:68:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "15082:68:3"
											},
											{
												"expression": {
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 846,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "15160:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2088_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2085,
														"src": "15160:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 849,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "15179:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 850,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "15188:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15179:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15207:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "15179:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15160:48:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "15160:48:3"
											},
											{
												"expression": {
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 856,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "15218:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2088_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2087,
														"src": "15218:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 861,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "15247:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 862,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "15257:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15247:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15240:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 859,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "15240:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15240:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15218:58:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "15218:58:3"
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "14834:83:3",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "14931:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "14958:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "14950:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14950:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14949:16:3"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "15010:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "14988:31:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2088_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 820,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 819,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2088,
														"src": "14988:14:3"
													},
													"referencedDeclaration": 2088,
													"src": "14988:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2088_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14987:33:3"
									},
									"scope": 2037,
									"src": "14922:361:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "15457:347:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15476:322:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15586:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "15599:5:3"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "15606:16:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15595:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15595:28:3"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "15586:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15715:73:3",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "15728:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "15742:23:3"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "15767:9:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15767:11:3"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "15738:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15738:41:3"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "15781:5:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "15735:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15735:52:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15725:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15725:63:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15715:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 324,
														"isOffset": false,
														"isSlot": false,
														"src": "15606:16:3",
														"valueSize": 1
													},
													{
														"declaration": 292,
														"isOffset": false,
														"isSlot": false,
														"src": "15742:23:3",
														"valueSize": 1
													},
													{
														"declaration": 873,
														"isOffset": false,
														"isSlot": false,
														"src": "15781:5:3",
														"valueSize": 1
													},
													{
														"declaration": 871,
														"isOffset": false,
														"isSlot": false,
														"src": "15586:5:3",
														"valueSize": 1
													},
													{
														"declaration": 871,
														"isOffset": false,
														"isSlot": false,
														"src": "15599:5:3",
														"valueSize": 1
													},
													{
														"declaration": 871,
														"isOffset": false,
														"isSlot": false,
														"src": "15728:5:3",
														"valueSize": 1
													},
													{
														"declaration": 876,
														"isOffset": false,
														"isSlot": false,
														"src": "15715:6:3",
														"valueSize": 1
													}
												],
												"id": 878,
												"nodeType": "InlineAssembly",
												"src": "15467:331:3"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "15289:67:3",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "15370:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15397:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "15389:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15389:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "15412:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "15404:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15404:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15388:30:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "15449:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "15441:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15441:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15440:16:3"
									},
									"scope": 2037,
									"src": "15361:443:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "15987:232:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "16071:142:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16147:56:3",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "16161:24:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "16190:8:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16200:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16187:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16187:15:3"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "16157:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16157:46:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "16147:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 300,
														"isOffset": false,
														"isSlot": false,
														"src": "16161:24:3",
														"valueSize": 1
													},
													{
														"declaration": 883,
														"isOffset": false,
														"isSlot": false,
														"src": "16190:8:3",
														"valueSize": 1
													},
													{
														"declaration": 886,
														"isOffset": false,
														"isSlot": false,
														"src": "16147:6:3",
														"valueSize": 1
													}
												],
												"id": 888,
												"nodeType": "InlineAssembly",
												"src": "16062:151:3"
											}
										]
									},
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "15810:86:3",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "15910:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15939:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "15931:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15931:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15930:18:3"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "15979:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "15971:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15970:16:3"
									},
									"scope": 2037,
									"src": "15901:318:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2185
									],
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "16717:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 900,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "16736:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 901,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "16740:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16749:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 899,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1700,
															1750
														],
														"referencedDeclaration": 1750,
														"src": "16727:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16727:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "16727:27:3"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "16412:222:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n Requirements:\n - The caller must own the token or be an approved operator."
									},
									"functionSelector": "095ea7b3",
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "16648:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 897,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16708:8:3"
									},
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16664:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "16656:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16656:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "16668:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16655:29:3"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16717:0:3"
									},
									"scope": 2037,
									"src": "16639:122:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2201
									],
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "16996:138:3",
										"statements": [
											{
												"condition": {
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "17010:17:3",
													"subExpression": {
														"arguments": [
															{
																"id": 916,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "17019:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 915,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "17011:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17011:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 924,
												"nodeType": "IfStatement",
												"src": "17006:73:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 920,
																	"name": "ApprovalQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "17037:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "17037:41:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 919,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "17029:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17029:50:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 923,
													"nodeType": "ExpressionStatement",
													"src": "17029:50:3"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 925,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "17097:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$264_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 927,
														"indexExpression": {
															"id": 926,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "17113:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17097:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$264_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 263,
													"src": "17097:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 914,
												"id": 929,
												"nodeType": "Return",
												"src": "17090:37:3"
											}
										]
									},
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "16767:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "16920:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 911,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16969:8:3"
									},
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "16932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16932:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16931:17:3"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "16987:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16987:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16986:9:3"
									},
									"scope": 2037,
									"src": "16911:223:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2193
									],
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "17545:147:3",
										"statements": [
											{
												"expression": {
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 940,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "17555:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 944,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 941,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2018,
																	"src": "17574:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17574:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17555:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 945,
														"indexExpression": {
															"id": 943,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "17595:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17555:49:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 946,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "17607:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17555:60:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "17555:60:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 950,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2018,
																"src": "17645:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17645:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "17666:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 953,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "17676:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 949,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2129,
														"src": "17630:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17630:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 955,
												"nodeType": "EmitStatement",
												"src": "17625:60:3"
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "17140:316:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "17470:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 938,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17536:8:3"
									},
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17496:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "17488:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17511:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "17506:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17506:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17487:33:3"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17545:0:3"
									},
									"scope": 2037,
									"src": "17461:231:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2211
									],
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "17945:59:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 968,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "17962:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 970,
														"indexExpression": {
															"id": 969,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "17981:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17962:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 972,
													"indexExpression": {
														"id": 971,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "17988:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17962:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 967,
												"id": 973,
												"nodeType": "Return",
												"src": "17955:42:3"
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "17698:139:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17851:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 964,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17921:8:3"
									},
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17876:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "17868:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17868:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17891:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "17883:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17883:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17867:33:3"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "17939:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 965,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17939:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17938:6:3"
									},
									"scope": 2037,
									"src": "17842:162:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "18331:282:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 983,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "18345:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18345:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 985,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "18364:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18345:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1016,
												"nodeType": "IfStatement",
												"src": "18341:266:3",
												"trueBody": {
													"id": 1015,
													"nodeType": "Block",
													"src": "18373:234:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 987,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "18391:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 988,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "18401:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18391:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1014,
															"nodeType": "IfStatement",
															"src": "18387:210:3",
															"trueBody": {
																"id": 1013,
																"nodeType": "Block",
																"src": "18416:181:3",
																"statements": [
																	{
																		"assignments": [
																			991
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 991,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "18442:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1013,
																				"src": "18434:14:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 990,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "18434:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 992,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "18434:14:3"
																	},
																	{
																		"body": {
																			"expression": {
																				"id": 1002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "--",
																				"prefix": true,
																				"src": "18517:9:3",
																				"subExpression": {
																					"id": 1001,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 978,
																					"src": "18519:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1003,
																			"nodeType": "ExpressionStatement",
																			"src": "18517:9:3"
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"id": 997,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 993,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 991,
																							"src": "18474:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 994,
																								"name": "_packedOwnerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 342,
																								"src": "18483:17:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																									"typeString": "mapping(uint256 => uint256)"
																								}
																							},
																							"id": 996,
																							"indexExpression": {
																								"id": 995,
																								"name": "tokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 978,
																								"src": "18501:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "18483:26:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "18474:35:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 998,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "18473:37:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 999,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18514:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "18473:42:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1004,
																		"nodeType": "WhileStatement",
																		"src": "18466:60:3"
																	},
																	{
																		"expression": {
																			"id": 1011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1005,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 981,
																				"src": "18544:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1008,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1006,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 991,
																						"src": "18553:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&",
																					"rightExpression": {
																						"id": 1007,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 297,
																						"src": "18562:15:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "18553:24:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1009,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "18581:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "18553:29:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "18544:38:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1012,
																		"nodeType": "ExpressionStatement",
																		"src": "18544:38:3"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "18010:238:3",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "18262:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18278:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "18270:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18270:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18269:17:3"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "18323:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "18318:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 980,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18318:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18317:13:3"
									},
									"scope": 2037,
									"src": "18253:360:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "18875:488:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18894:463:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19004:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "19017:5:3"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "19024:16:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19013:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "19013:28:3"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "19004:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19154:45:3",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "19171:9:3"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "19182:16:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19167:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "19167:32:3"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "19154:9:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19281:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "19297:9:3"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "19308:5:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19294:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19294:20:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "19319:9:3"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "19330:15:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19316:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19316:30:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19291:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "19291:56:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "19281:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 324,
														"isOffset": false,
														"isSlot": false,
														"src": "19024:16:3",
														"valueSize": 1
													},
													{
														"declaration": 324,
														"isOffset": false,
														"isSlot": false,
														"src": "19182:16:3",
														"valueSize": 1
													},
													{
														"declaration": 1021,
														"isOffset": false,
														"isSlot": false,
														"src": "19330:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1025,
														"isOffset": false,
														"isSlot": false,
														"src": "19154:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1025,
														"isOffset": false,
														"isSlot": false,
														"src": "19171:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1025,
														"isOffset": false,
														"isSlot": false,
														"src": "19297:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1025,
														"isOffset": false,
														"isSlot": false,
														"src": "19319:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1023,
														"isOffset": false,
														"isSlot": false,
														"src": "19004:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1023,
														"isOffset": false,
														"isSlot": false,
														"src": "19017:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1023,
														"isOffset": false,
														"isSlot": false,
														"src": "19308:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1028,
														"isOffset": false,
														"isSlot": false,
														"src": "19281:6:3",
														"valueSize": 1
													}
												],
												"id": 1030,
												"nodeType": "InlineAssembly",
												"src": "18885:472:3"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "18619:93:3",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "18726:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18768:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "18760:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18760:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18801:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "18793:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18793:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "18824:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "18816:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18816:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18750:89:3"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "18867:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "18862:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1027,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18862:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18861:13:3"
									},
									"scope": 2037,
									"src": "18717:646:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "19628:317:3",
										"statements": [
											{
												"assignments": [
													1044
												],
												"declarations": [
													{
														"constant": false,
														"id": 1044,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "19663:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1050,
														"src": "19638:38:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$264_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 1043,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1042,
																"name": "TokenApprovalRef",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 264,
																"src": "19638:16:3"
															},
															"referencedDeclaration": 264,
															"src": "19638:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$264_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1048,
												"initialValue": {
													"baseExpression": {
														"id": 1045,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "19679:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$264_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 1047,
													"indexExpression": {
														"id": 1046,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "19695:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19679:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$264_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19638:65:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19816:123:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19830:41:3",
															"value": {
																"name": "tokenApproval.slot",
																"nodeType": "YulIdentifier",
																"src": "19853:18:3"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "19830:19:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19884:45:3",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "19909:19:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "19903:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "19903:26:3"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "19884:15:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1040,
														"isOffset": false,
														"isSlot": false,
														"src": "19884:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1038,
														"isOffset": false,
														"isSlot": false,
														"src": "19830:19:3",
														"valueSize": 1
													},
													{
														"declaration": 1038,
														"isOffset": false,
														"isSlot": false,
														"src": "19909:19:3",
														"valueSize": 1
													},
													{
														"declaration": 1044,
														"isOffset": false,
														"isSlot": true,
														"src": "19853:18:3",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1049,
												"nodeType": "InlineAssembly",
												"src": "19807:132:3"
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "19369:97:3",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "19480:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19515:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "19507:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19506:17:3"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "19578:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "19570:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19570:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "19607:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "19599:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19599:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19569:54:3"
									},
									"scope": 2037,
									"src": "19471:474:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2177
									],
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "20673:3320:3",
										"statements": [
											{
												"assignments": [
													1063
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "20691:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 1223,
														"src": "20683:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1062,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20683:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1067,
												"initialValue": {
													"arguments": [
														{
															"id": 1065,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "20732:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "20713:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20713:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20683:57:3"
											},
											{
												"expression": {
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1068,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "20842:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1077,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1054,
																							"src": "20881:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1076,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "20873:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 1075,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "20873:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1078,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20873:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 1074,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "20865:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1073,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "20865:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20865:22:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"id": 1080,
																			"name": "_BITMASK_ADDRESS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 324,
																			"src": "20890:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20865:41:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20857:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1071,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20857:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20857:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20849:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1069,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20849:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20849:59:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20842:66:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "20842:66:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1090,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "20939:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20931:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1088,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20931:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20931:28:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20923:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1086,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20923:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20923:37:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1093,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "20964:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20923:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1100,
												"nodeType": "IfStatement",
												"src": "20919:95:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1096,
																	"name": "TransferFromIncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2064,
																	"src": "20978:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "20978:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1095,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "20970:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20970:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1099,
													"nodeType": "ExpressionStatement",
													"src": "20970:44:3"
												}
											},
											{
												"assignments": [
													1102,
													1104
												],
												"declarations": [
													{
														"constant": false,
														"id": 1102,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "21034:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 1223,
														"src": "21026:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1101,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21026:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1104,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "21063:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 1223,
														"src": "21055:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1103,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "21055:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1108,
												"initialValue": {
													"arguments": [
														{
															"id": 1106,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "21109:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1105,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "21082:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21082:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21025:92:3"
											},
											{
												"condition": {
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "21213:69:3",
													"subExpression": {
														"arguments": [
															{
																"id": 1110,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "21239:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1111,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "21256:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1112,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2018,
																	"src": "21262:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21262:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1109,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "21214:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21214:68:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "21209:188:3",
												"trueBody": {
													"condition": {
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "21300:44:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 1117,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "21318:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1118,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2018,
																		"src": "21324:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21324:19:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1116,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "21301:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21301:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1127,
													"nodeType": "IfStatement",
													"src": "21296:101:3",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1123,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2061,
																		"src": "21354:33:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "21354:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 1122,
																"name": "_revert",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2036,
																"src": "21346:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																	"typeString": "function (bytes4) pure"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21346:51:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1126,
														"nodeType": "ExpressionStatement",
														"src": "21346:51:3"
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "21430:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "21436:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "21440:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21449:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1129,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "21408:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21408:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "21408:43:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21523:181:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21556:138:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "21657:19:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21678:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "21650:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21650:30:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21650:30:3"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "21540:15:3"
															},
															"nodeType": "YulIf",
															"src": "21537:157:3"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1104,
														"isOffset": false,
														"isSlot": false,
														"src": "21540:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1102,
														"isOffset": false,
														"isSlot": false,
														"src": "21657:19:3",
														"valueSize": 1
													}
												],
												"id": 1136,
												"nodeType": "InlineAssembly",
												"src": "21514:190:3"
											},
											{
												"id": 1193,
												"nodeType": "UncheckedBlock",
												"src": "21971:1361:3",
												"statements": [
													{
														"expression": {
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "22064:26:3",
															"subExpression": {
																"baseExpression": {
																	"id": 1137,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "22066:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1139,
																"indexExpression": {
																	"id": 1138,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "22085:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "22066:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1141,
														"nodeType": "ExpressionStatement",
														"src": "22064:26:3"
													},
													{
														"expression": {
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "22132:24:3",
															"subExpression": {
																"baseExpression": {
																	"id": 1142,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "22134:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1144,
																"indexExpression": {
																	"id": 1143,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "22153:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "22134:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1146,
														"nodeType": "ExpressionStatement",
														"src": "22132:24:3"
													},
													{
														"expression": {
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1147,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "22420:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1149,
																"indexExpression": {
																	"id": 1148,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "22438:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "22420:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1151,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "22485:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1152,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 305,
																			"src": "22505:25:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1154,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1054,
																					"src": "22548:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1155,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1056,
																					"src": "22554:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1156,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1063,
																					"src": "22558:19:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1153,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2008,
																				"src": "22533:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22533:45:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22505:73:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1150,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "22449:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22449:143:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22420:172:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1161,
														"nodeType": "ExpressionStatement",
														"src": "22420:172:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1162,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "22709:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1163,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "22731:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22709:47:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22760:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22709:52:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1192,
														"nodeType": "IfStatement",
														"src": "22705:617:3",
														"trueBody": {
															"id": 1191,
															"nodeType": "Block",
															"src": "22763:559:3",
															"statements": [
																{
																	"assignments": [
																		1168
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1168,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "22789:11:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 1191,
																			"src": "22781:19:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1167,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22781:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1172,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1169,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "22803:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22813:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22803:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22781:33:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1173,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 342,
																				"src": "22934:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1175,
																			"indexExpression": {
																				"id": 1174,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1168,
																				"src": "22952:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22934:30:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22968:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "22934:35:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1190,
																	"nodeType": "IfStatement",
																	"src": "22930:378:3",
																	"trueBody": {
																		"id": 1189,
																		"nodeType": "Block",
																		"src": "22971:337:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1180,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1178,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1168,
																						"src": "23055:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1179,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 332,
																						"src": "23070:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "23055:28:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1188,
																				"nodeType": "IfStatement",
																				"src": "23051:239:3",
																				"trueBody": {
																					"id": 1187,
																					"nodeType": "Block",
																					"src": "23085:205:3",
																					"statements": [
																						{
																							"expression": {
																								"id": 1185,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1181,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 342,
																										"src": "23215:17:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1183,
																									"indexExpression": {
																										"id": 1182,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1168,
																										"src": "23233:11:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "23215:30:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1184,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1063,
																									"src": "23248:19:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "23215:52:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1186,
																							"nodeType": "ExpressionStatement",
																							"src": "23215:52:3"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"assignments": [
													1195
												],
												"declarations": [
													{
														"constant": false,
														"id": 1195,
														"mutability": "mutable",
														"name": "toMasked",
														"nameLocation": "23439:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 1223,
														"src": "23431:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1194,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23431:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1205,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1200,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "23466:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23458:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1198,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "23458:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23458:11:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23450:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1196,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "23450:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23450:20:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1203,
														"name": "_BITMASK_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "23473:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23450:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23431:58:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "23508:358:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23586:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23642:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "23696:25:3"
																	},
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "23753:4:3"
																	},
																	{
																		"name": "toMasked",
																		"nodeType": "YulIdentifier",
																		"src": "23786:8:3"
																	},
																	{
																		"name": "tokenId",
																		"nodeType": "YulIdentifier",
																		"src": "23821:7:3"
																	}
																],
																"functionName": {
																	"name": "log4",
																	"nodeType": "YulIdentifier",
																	"src": "23564:4:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "23564:292:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23564:292:3"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 330,
														"isOffset": false,
														"isSlot": false,
														"src": "23696:25:3",
														"valueSize": 1
													},
													{
														"declaration": 1054,
														"isOffset": false,
														"isSlot": false,
														"src": "23753:4:3",
														"valueSize": 1
													},
													{
														"declaration": 1195,
														"isOffset": false,
														"isSlot": false,
														"src": "23786:8:3",
														"valueSize": 1
													},
													{
														"declaration": 1058,
														"isOffset": false,
														"isSlot": false,
														"src": "23821:7:3",
														"valueSize": 1
													}
												],
												"id": 1206,
												"nodeType": "InlineAssembly",
												"src": "23499:367:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1207,
														"name": "toMasked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "23879:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23891:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "23879:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "23875:58:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1211,
																	"name": "TransferToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2070,
																	"src": "23902:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "23902:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1210,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "23894:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23894:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1214,
													"nodeType": "ExpressionStatement",
													"src": "23894:39:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1217,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "23965:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1218,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "23971:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1219,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "23975:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23984:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1216,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "23944:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23944:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "23944:42:3"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "20138:403:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "20555:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1060,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20664:8:3"
									},
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20585:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "20577:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20577:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20607:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "20599:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20599:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20627:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "20619:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20619:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20567:73:3"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20673:0:3"
									},
									"scope": 2037,
									"src": "20546:3447:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2167
									],
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "24215:56:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1236,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "24242:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1237,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "24248:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1238,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "24252:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24261:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1235,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1243,
															1283
														],
														"referencedDeclaration": 1283,
														"src": "24225:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24225:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "24225:39:3"
											}
										]
									},
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "23999:80:3",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24093:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1233,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24206:8:3"
									},
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24127:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "24119:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24119:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24149:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "24141:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24141:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24169:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "24161:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24161:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24109:73:3"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24215:0:3"
									},
									"scope": 2037,
									"src": "24084:187:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2157
									],
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "25011:246:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1257,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "25034:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1258,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "25040:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1259,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "25044:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1256,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "25021:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25021:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "25021:31:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1262,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "25066:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "25066:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "25066:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25084:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25066:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1281,
												"nodeType": "IfStatement",
												"src": "25062:189:3",
												"trueBody": {
													"condition": {
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "25103:57:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 1268,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "25135:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1269,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "25141:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1270,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "25145:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1271,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "25154:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1267,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "25104:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25104:56:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1280,
													"nodeType": "IfStatement",
													"src": "25099:152:3",
													"trueBody": {
														"id": 1279,
														"nodeType": "Block",
														"src": "25162:89:3",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1275,
																				"name": "TransferToNonERC721ReceiverImplementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2067,
																				"src": "25188:38:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "25188:47:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1274,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2036,
																		"src": "25180:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25180:56:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1278,
																"nodeType": "ExpressionStatement",
																"src": "25180:56:3"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "24277:570:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24861:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1254,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25002:8:3"
									},
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24895:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "24887:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24887:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24917:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "24909:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24909:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24937:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "24929:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24929:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "24967:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "24954:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24954:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24877:101:3"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25011:0:3"
									},
									"scope": 2037,
									"src": "24852:405:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "26053:2:3",
										"statements": []
									},
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "25263:633:3",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "25910:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25949:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "25941:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25941:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25971:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "25963:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25963:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "25991:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "25983:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25983:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "26021:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "26013:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26013:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25931:104:3"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26053:0:3"
									},
									"scope": 2037,
									"src": "25901:154:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "26853:2:3",
										"statements": []
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "26061:636:3",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "26711:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26749:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "26741:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26741:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26771:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "26763:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26763:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "26791:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "26783:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26783:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "26821:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "26813:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26731:104:3"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26853:0:3"
									},
									"scope": 2037,
									"src": "26702:153:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "27447:509:3",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1344,
															"nodeType": "Block",
															"src": "27596:96:3",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1336,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1334,
																			"src": "27617:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1338,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1314,
																							"src": "27652:2:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1337,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 258,
																						"src": "27627:24:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$258_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1339,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27627:28:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$258",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1340,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 257,
																				"src": "27627:45:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "27627:54:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "27617:64:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1322,
																	"id": 1343,
																	"nodeType": "Return",
																	"src": "27610:71:3"
																}
															]
														},
														"errorName": "",
														"id": 1345,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1335,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1334,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "27579:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1345,
																	"src": "27572:13:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1333,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "27572:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "27558:37:3"
														},
														"src": "27550:142:3"
													},
													{
														"block": {
															"id": 1361,
															"nodeType": "Block",
															"src": "27721:229:3",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1349,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1347,
																				"src": "27739:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "27739:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27756:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "27739:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1359,
																	"nodeType": "IfStatement",
																	"src": "27735:113:3",
																	"trueBody": {
																		"id": 1358,
																		"nodeType": "Block",
																		"src": "27759:89:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1354,
																								"name": "TransferToNonERC721ReceiverImplementer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2067,
																								"src": "27785:38:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_error_pure$__$returns$__$",
																									"typeString": "function () pure"
																								}
																							},
																							"id": 1355,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "selector",
																							"nodeType": "MemberAccess",
																							"src": "27785:47:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						],
																						"id": 1353,
																						"name": "_revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2036,
																						"src": "27777:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																							"typeString": "function (bytes4) pure"
																						}
																					},
																					"id": 1356,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27777:56:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1357,
																				"nodeType": "ExpressionStatement",
																				"src": "27777:56:3"
																			}
																		]
																	}
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "27870:70:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "27899:2:3",
																									"type": "",
																									"value": "32"
																								},
																								{
																									"name": "reason",
																									"nodeType": "YulIdentifier",
																									"src": "27903:6:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "27895:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27895:15:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "reason",
																									"nodeType": "YulIdentifier",
																									"src": "27918:6:3"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "27912:5:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27912:13:3"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "27888:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27888:38:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "27888:38:3"
																			}
																		]
																	},
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 1347,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "27903:6:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1347,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "27918:6:3",
																			"valueSize": 1
																		}
																	],
																	"id": 1360,
																	"nodeType": "InlineAssembly",
																	"src": "27861:79:3"
																}
															]
														},
														"errorName": "",
														"id": 1362,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1348,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1347,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "27713:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1362,
																	"src": "27700:19:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1346,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "27700:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "27699:21:3"
														},
														"src": "27693:257:3"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1327,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2018,
																"src": "27507:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27507:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1329,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "27528:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1330,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "27534:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1331,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "27543:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1324,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1314,
																	"src": "27486:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1323,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "27461:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$258_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27461:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$258",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "27461:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27461:88:3",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1363,
												"nodeType": "TryStatement",
												"src": "27457:493:3"
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "26861:417:3",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "27292:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27340:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "27332:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27362:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "27354:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27354:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27382:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "27374:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27374:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "27412:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "27399:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27399:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27322:101:3"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "27441:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27441:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27440:6:3"
									},
									"scope": 2037,
									"src": "27283:673:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "28464:2189:3",
										"statements": [
											{
												"assignments": [
													1374
												],
												"declarations": [
													{
														"constant": false,
														"id": 1374,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "28482:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 1483,
														"src": "28474:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1373,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28474:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1376,
												"initialValue": {
													"id": 1375,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "28497:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28474:36:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1377,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "28524:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28536:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "28524:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1385,
												"nodeType": "IfStatement",
												"src": "28520:53:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1381,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2055,
																	"src": "28547:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "28547:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1380,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "28539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28539:34:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1384,
													"nodeType": "ExpressionStatement",
													"src": "28539:34:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28614:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28606:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1387,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28606:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28606:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1391,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "28618:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1392,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "28622:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1393,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "28636:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1386,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "28584:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28584:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "28584:61:3"
											},
											{
												"id": 1472,
												"nodeType": "UncheckedBlock",
												"src": "28828:1749:3",
												"statements": [
													{
														"expression": {
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1396,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "29073:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1398,
																"indexExpression": {
																	"id": 1397,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "29091:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "29073:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1400,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "29143:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1402,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1370,
																					"src": "29184:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1401,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 890,
																				"src": "29163:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "29163:30:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1407,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "29219:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1406,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "29211:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1405,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "29211:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29211:10:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1409,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1368,
																					"src": "29223:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1410,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "29227:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1404,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2008,
																				"src": "29196:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "29196:33:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "29163:66:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1399,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "29107:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29107:136:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29073:170:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1415,
														"nodeType": "ExpressionStatement",
														"src": "29073:170:3"
													},
													{
														"expression": {
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1416,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "29454:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1418,
																"indexExpression": {
																	"id": 1417,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1368,
																	"src": "29473:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "29454:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1419,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "29480:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1422,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1420,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "29493:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1421,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 275,
																							"src": "29498:21:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "29493:26:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1423,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "29492:28:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29523:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "29492:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1426,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "29491:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29480:45:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29454:71:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1429,
														"nodeType": "ExpressionStatement",
														"src": "29454:71:3"
													},
													{
														"assignments": [
															1431
														],
														"declarations": [
															{
																"constant": false,
																"id": 1431,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "29641:8:3",
																"nodeType": "VariableDeclaration",
																"scope": 1472,
																"src": "29633:16:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1430,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29633:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1441,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1436,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1368,
																				"src": "29668:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "29660:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			},
																			"typeName": {
																				"id": 1434,
																				"name": "uint160",
																				"nodeType": "ElementaryTypeName",
																				"src": "29660:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29660:11:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29652:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1432,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29652:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29652:20:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1439,
																"name": "_BITMASK_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "29675:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29652:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29633:58:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1442,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "29710:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29722:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29710:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1450,
														"nodeType": "IfStatement",
														"src": "29706:54:3",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1446,
																			"name": "MintToZeroAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2052,
																			"src": "29733:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "29733:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 1445,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2036,
																	"src": "29725:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29725:35:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1449,
															"nodeType": "ExpressionStatement",
															"src": "29725:35:3"
														}
													},
													{
														"assignments": [
															1452
														],
														"declarations": [
															{
																"constant": false,
																"id": 1452,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "29783:3:3",
																"nodeType": "VariableDeclaration",
																"scope": 1472,
																"src": "29775:11:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1451,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29775:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1456,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1453,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "29789:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1454,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1370,
																"src": "29804:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29789:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29775:37:3"
													},
													{
														"assignments": [
															1458
														],
														"declarations": [
															{
																"constant": false,
																"id": 1458,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "29834:7:3",
																"nodeType": "VariableDeclaration",
																"scope": 1472,
																"src": "29826:15:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1457,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29826:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1460,
														"initialValue": {
															"id": 1459,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "29844:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29826:30:3"
													},
													{
														"body": {
															"id": 1462,
															"nodeType": "Block",
															"src": "29874:633:3",
															"statements": [
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "29901:441:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30003:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30067:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nodeType": "YulIdentifier",
																							"src": "30129:25:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30194:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nodeType": "YulIdentifier",
																							"src": "30238:8:3"
																						},
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30281:7:3"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nodeType": "YulIdentifier",
																						"src": "29973:4:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29973:351:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "29973:351:3"
																			}
																		]
																	},
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 330,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "30129:25:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1431,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "30238:8:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1458,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "30281:7:3",
																			"valueSize": 1
																		}
																	],
																	"id": 1461,
																	"nodeType": "InlineAssembly",
																	"src": "29892:450:3"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "30515:9:3",
																"subExpression": {
																	"id": 1463,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1458,
																	"src": "30517:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1465,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "30528:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30515:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1467,
														"nodeType": "DoWhileStatement",
														"src": "29871:662:3"
													},
													{
														"expression": {
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1468,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "30547:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1469,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "30563:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30547:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1471,
														"nodeType": "ExpressionStatement",
														"src": "30547:19:3"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30615:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30607:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1474,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30607:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30607:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1478,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "30619:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1479,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "30623:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1480,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "30637:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1473,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "30586:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30586:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "30586:60:3"
											}
										]
									},
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "28147:250:3",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "28411:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28425:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "28417:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28417:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "28437:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "28429:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28429:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28416:30:3"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28464:0:3"
									},
									"scope": 2037,
									"src": "28402:2251:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "31562:1401:3",
										"statements": [
											{
												"assignments": [
													1493
												],
												"declarations": [
													{
														"constant": false,
														"id": 1493,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "31580:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 1601,
														"src": "31572:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1492,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31572:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1495,
												"initialValue": {
													"id": 1494,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "31595:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31572:36:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1496,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "31622:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31636:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31628:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1497,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "31628:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31628:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31622:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1507,
												"nodeType": "IfStatement",
												"src": "31618:57:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1503,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2052,
																	"src": "31648:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "31648:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1502,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "31640:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31640:35:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1506,
													"nodeType": "ExpressionStatement",
													"src": "31640:35:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1508,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "31689:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31701:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31689:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1516,
												"nodeType": "IfStatement",
												"src": "31685:53:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1512,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2055,
																	"src": "31712:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "31712:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1511,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "31704:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31704:34:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1515,
													"nodeType": "ExpressionStatement",
													"src": "31704:34:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1517,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "31752:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1518,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "31763:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31752:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1525,
												"nodeType": "IfStatement",
												"src": "31748:98:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1521,
																	"name": "MintERC2309QuantityExceedsLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "31805:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "31805:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1520,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "31797:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31797:49:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1524,
													"nodeType": "ExpressionStatement",
													"src": "31797:49:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31887:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31879:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1527,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31879:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31879:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1531,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "31891:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1532,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "31895:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1533,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "31909:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1526,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "31857:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31857:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "31857:61:3"
											},
											{
												"id": 1590,
												"nodeType": "UncheckedBlock",
												"src": "32027:860:3",
												"statements": [
													{
														"expression": {
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1536,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "32247:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1538,
																"indexExpression": {
																	"id": 1537,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1487,
																	"src": "32266:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32247:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1539,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1489,
																	"src": "32273:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1542,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1540,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32286:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1541,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 275,
																							"src": "32291:21:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "32286:26:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1543,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "32285:28:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1544,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32316:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "32285:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1546,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32284:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32273:45:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32247:71:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1549,
														"nodeType": "ExpressionStatement",
														"src": "32247:71:3"
													},
													{
														"expression": {
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1550,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "32554:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1552,
																"indexExpression": {
																	"id": 1551,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "32572:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32554:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1554,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1487,
																		"src": "32624:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1556,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1489,
																					"src": "32665:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1555,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 890,
																				"src": "32644:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32644:30:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1561,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32700:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1560,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "32692:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1559,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "32692:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1562,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "32692:10:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1563,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1487,
																					"src": "32704:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1564,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "32708:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1558,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2008,
																				"src": "32677:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32677:33:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32644:66:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1553,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "32588:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32588:136:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32554:170:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1569,
														"nodeType": "ExpressionStatement",
														"src": "32554:170:3"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1571,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "32764:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1572,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1493,
																			"src": "32778:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1573,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1489,
																			"src": "32793:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32778:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32804:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "32778:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32815:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32807:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1577,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "32807:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32807:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1581,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1487,
																	"src": "32819:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1570,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2242,
																"src": "32744:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32744:78:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1583,
														"nodeType": "EmitStatement",
														"src": "32739:83:3"
													},
													{
														"expression": {
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1584,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "32837:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1585,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "32853:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1586,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1489,
																	"src": "32868:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32853:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32837:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1589,
														"nodeType": "ExpressionStatement",
														"src": "32837:39:3"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32925:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32917:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1592,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32917:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32917:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1596,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "32929:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1597,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "32933:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1598,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "32947:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1591,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "32896:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32896:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "32896:60:3"
											}
										]
									},
									"documentation": {
										"id": 1485,
										"nodeType": "StructuredDocumentation",
										"src": "30659:829:3",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "31502:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31523:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "31515:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31515:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "31535:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "31527:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31527:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31514:30:3"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31562:0:3"
									},
									"scope": 2037,
									"src": "31493:1470:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "33478:572:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1613,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "33494:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1614,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "33498:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1612,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1484,
														"src": "33488:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33488:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "33488:19:3"
											},
											{
												"id": 1668,
												"nodeType": "UncheckedBlock",
												"src": "33518:526:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1617,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1605,
																		"src": "33546:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "33546:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "33546:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33564:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33546:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1667,
														"nodeType": "IfStatement",
														"src": "33542:492:3",
														"trueBody": {
															"id": 1666,
															"nodeType": "Block",
															"src": "33567:467:3",
															"statements": [
																{
																	"assignments": [
																		1623
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1623,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "33593:3:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 1666,
																			"src": "33585:11:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1622,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33585:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1625,
																	"initialValue": {
																		"id": 1624,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "33599:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33585:27:3"
																},
																{
																	"assignments": [
																		1627
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1627,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "33638:5:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 1666,
																			"src": "33630:13:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1626,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33630:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1631,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1628,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1623,
																			"src": "33646:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1629,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1607,
																			"src": "33652:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33646:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33630:30:3"
																},
																{
																	"body": {
																		"id": 1650,
																		"nodeType": "Block",
																		"src": "33681:214:3",
																		"statements": [
																			{
																				"condition": {
																					"id": 1642,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "33707:63:3",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1635,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "33747:1:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1634,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "33739:7:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1633,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "33739:7:3",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1636,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33739:10:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1637,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1605,
																								"src": "33751:2:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1639,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "33755:7:3",
																								"subExpression": {
																									"id": 1638,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1627,
																									"src": "33755:5:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1640,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1609,
																								"src": "33764:5:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1632,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1365,
																							"src": "33708:30:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1641,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "33708:62:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1649,
																				"nodeType": "IfStatement",
																				"src": "33703:174:3",
																				"trueBody": {
																					"id": 1648,
																					"nodeType": "Block",
																					"src": "33772:105:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1644,
																											"name": "TransferToNonERC721ReceiverImplementer",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2067,
																											"src": "33806:38:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_error_pure$__$returns$__$",
																												"typeString": "function () pure"
																											}
																										},
																										"id": 1645,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "selector",
																										"nodeType": "MemberAccess",
																										"src": "33806:47:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									],
																									"id": 1643,
																									"name": "_revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2036,
																									"src": "33798:7:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																										"typeString": "function (bytes4) pure"
																									}
																								},
																								"id": 1646,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33798:56:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1647,
																							"nodeType": "ExpressionStatement",
																							"src": "33798:56:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1651,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "33903:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1652,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1623,
																			"src": "33911:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33903:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1654,
																	"nodeType": "DoWhileStatement",
																	"src": "33678:238:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1655,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 332,
																			"src": "33979:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1656,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1623,
																			"src": "33996:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33979:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1665,
																	"nodeType": "IfStatement",
																	"src": "33975:44:3",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1661,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "34016:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1660,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "34009:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes4_$",
																							"typeString": "type(bytes4)"
																						},
																						"typeName": {
																							"id": 1659,
																							"name": "bytes4",
																							"nodeType": "ElementaryTypeName",
																							"src": "34009:6:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1662,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "34009:9:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				],
																				"id": 1658,
																				"name": "_revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2036,
																				"src": "34001:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																					"typeString": "function (bytes4) pure"
																				}
																			},
																			"id": 1663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34001:18:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1664,
																		"nodeType": "ExpressionStatement",
																		"src": "34001:18:3"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "32969:388:3",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "33371:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33398:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "33390:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33390:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33418:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "33410:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33410:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "33449:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "33436:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1608,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33436:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33380:80:3"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33478:0:3"
									},
									"scope": 2037,
									"src": "33362:688:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "34195:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1679,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "34215:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1680,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "34219:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34229:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1678,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1670,
															1685
														],
														"referencedDeclaration": 1670,
														"src": "34205:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34205:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "34205:27:3"
											}
										]
									},
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "34056:68:3",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "34138:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34156:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "34148:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34148:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "34168:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "34160:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34160:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34147:30:3"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34195:0:3"
									},
									"scope": 2037,
									"src": "34129:110:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "34571:45:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1694,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "34590:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1695,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "34594:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34603:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1693,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1700,
															1750
														],
														"referencedDeclaration": 1750,
														"src": "34581:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34581:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "34581:28:3"
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "34433:69:3",
										"text": " @dev Equivalent to `_approve(to, tokenId, false)`."
									},
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "34516:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34533:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "34525:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34525:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34545:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "34537:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34524:29:3"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34571:0:3"
									},
									"scope": 2037,
									"src": "34507:109:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1749,
										"nodeType": "Block",
										"src": "35133:346:3",
										"statements": [
											{
												"assignments": [
													1711
												],
												"declarations": [
													{
														"constant": false,
														"id": 1711,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "35151:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1749,
														"src": "35143:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1710,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35143:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1715,
												"initialValue": {
													"arguments": [
														{
															"id": 1713,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "35167:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1712,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "35159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35159:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35143:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1716,
														"name": "approvalCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "35190:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1717,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2018,
																"src": "35207:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35207:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1719,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "35230:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "35207:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "35190:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1735,
												"nodeType": "IfStatement",
												"src": "35186:198:3",
												"trueBody": {
													"condition": {
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "35253:45:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 1723,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1711,
																	"src": "35271:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1724,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2018,
																		"src": "35278:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35278:19:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1722,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "35254:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35254:44:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1734,
													"nodeType": "IfStatement",
													"src": "35249:135:3",
													"trueBody": {
														"id": 1733,
														"nodeType": "Block",
														"src": "35300:84:3",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1729,
																				"name": "ApprovalCallerNotOwnerNorApproved",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2043,
																				"src": "35326:33:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "35326:42:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1728,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2036,
																		"src": "35318:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35318:51:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1732,
																"nodeType": "ExpressionStatement",
																"src": "35318:51:3"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1736,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "35394:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$264_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 1738,
															"indexExpression": {
																"id": 1737,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "35410:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "35394:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$264_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 263,
														"src": "35394:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1740,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "35427:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "35394:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "35394:35:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1744,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "35453:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1745,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "35460:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1746,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "35464:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1743,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2120,
														"src": "35444:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35444:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1748,
												"nodeType": "EmitStatement",
												"src": "35439:33:3"
											}
										]
									},
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "34622:392:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"id": 1750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "35028:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35054:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "35046:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35046:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35074:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "35066:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35066:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "35096:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "35091:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1706,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35091:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35036:79:3"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35133:0:3"
									},
									"scope": 2037,
									"src": "35019:460:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "35786:38:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1757,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "35802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35811:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1756,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1762,
															1916
														],
														"referencedDeclaration": 1916,
														"src": "35796:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35796:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1760,
												"nodeType": "ExpressionStatement",
												"src": "35796:21:3"
											}
										]
									},
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "35670:62:3",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "35746:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35760:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "35752:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35752:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35751:17:3"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35786:0:3"
									},
									"scope": 2037,
									"src": "35737:87:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1915,
										"nodeType": "Block",
										"src": "36110:2955:3",
										"statements": [
											{
												"assignments": [
													1771
												],
												"declarations": [
													{
														"constant": false,
														"id": 1771,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "36128:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 1915,
														"src": "36120:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "36120:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1775,
												"initialValue": {
													"arguments": [
														{
															"id": 1773,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "36169:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1772,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "36150:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36150:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36120:57:3"
											},
											{
												"assignments": [
													1777
												],
												"declarations": [
													{
														"constant": false,
														"id": 1777,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "36196:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 1915,
														"src": "36188:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1776,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36188:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1785,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1782,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1771,
																	"src": "36219:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36211:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1780,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "36211:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36211:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "36203:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1778,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36203:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36203:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36188:52:3"
											},
											{
												"assignments": [
													1787,
													1789
												],
												"declarations": [
													{
														"constant": false,
														"id": 1787,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "36260:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 1915,
														"src": "36252:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1786,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "36252:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1789,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "36289:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 1915,
														"src": "36281:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1788,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36281:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1793,
												"initialValue": {
													"arguments": [
														{
															"id": 1791,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "36335:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1790,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "36308:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36308:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36251:92:3"
											},
											{
												"condition": {
													"id": 1794,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1767,
													"src": "36358:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1816,
												"nodeType": "IfStatement",
												"src": "36354:321:3",
												"trueBody": {
													"id": 1815,
													"nodeType": "Block",
													"src": "36373:302:3",
													"statements": [
														{
															"condition": {
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "36476:69:3",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1796,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1789,
																			"src": "36502:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1797,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1777,
																			"src": "36519:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1798,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2018,
																				"src": "36525:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36525:19:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1795,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1032,
																		"src": "36477:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36477:68:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1814,
															"nodeType": "IfStatement",
															"src": "36472:192:3",
															"trueBody": {
																"condition": {
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "36567:44:3",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1803,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1777,
																				"src": "36585:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1804,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2018,
																					"src": "36591:17:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "36591:19:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1802,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 975,
																			"src": "36568:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36568:43:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1813,
																"nodeType": "IfStatement",
																"src": "36563:101:3",
																"trueBody": {
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1809,
																					"name": "TransferCallerNotOwnerNorApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2061,
																					"src": "36621:33:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 1810,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "36621:42:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"id": 1808,
																			"name": "_revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2036,
																			"src": "36613:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																				"typeString": "function (bytes4) pure"
																			}
																		},
																		"id": 1811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36613:51:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1812,
																	"nodeType": "ExpressionStatement",
																	"src": "36613:51:3"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1818,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "36707:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36721:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36713:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1819,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36713:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36713:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1823,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "36725:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36734:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1817,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "36685:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36685:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1826,
												"nodeType": "ExpressionStatement",
												"src": "36685:51:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "36808:181:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "36841:138:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "36942:19:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "36963:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "36935:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "36935:30:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "36935:30:3"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "36825:15:3"
															},
															"nodeType": "YulIf",
															"src": "36822:157:3"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1789,
														"isOffset": false,
														"isSlot": false,
														"src": "36825:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1787,
														"isOffset": false,
														"isSlot": false,
														"src": "36942:19:3",
														"valueSize": 1
													}
												],
												"id": 1827,
												"nodeType": "InlineAssembly",
												"src": "36799:190:3"
											},
											{
												"id": 1891,
												"nodeType": "UncheckedBlock",
												"src": "37256:1545:3",
												"statements": [
													{
														"expression": {
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1828,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "37568:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1830,
																"indexExpression": {
																	"id": 1829,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "37587:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "37568:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "37597:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1832,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 278,
																				"src": "37602:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "37597:26:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1834,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "37596:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37627:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "37596:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37568:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1838,
														"nodeType": "ExpressionStatement",
														"src": "37568:60:3"
													},
													{
														"expression": {
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1839,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "37859:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1841,
																"indexExpression": {
																	"id": 1840,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1765,
																	"src": "37877:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "37859:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1843,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "37924:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1846,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1844,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 297,
																						"src": "37947:15:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1845,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 305,
																						"src": "37965:25:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "37947:43:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1847,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "37946:45:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1849,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1777,
																					"src": "38009:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1852,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "38023:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1851,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "38015:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1850,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "38015:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1853,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "38015:10:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1854,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1771,
																					"src": "38027:19:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1848,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2008,
																				"src": "37994:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37994:53:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "37946:101:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1842,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "37888:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37888:173:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37859:202:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1859,
														"nodeType": "ExpressionStatement",
														"src": "37859:202:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1860,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1771,
																	"src": "38178:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1861,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "38200:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "38178:47:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38229:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "38178:52:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1890,
														"nodeType": "IfStatement",
														"src": "38174:617:3",
														"trueBody": {
															"id": 1889,
															"nodeType": "Block",
															"src": "38232:559:3",
															"statements": [
																{
																	"assignments": [
																		1866
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1866,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "38258:11:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 1889,
																			"src": "38250:19:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1865,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "38250:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1870,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1867,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1765,
																			"src": "38272:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "38282:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "38272:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "38250:33:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1871,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 342,
																				"src": "38403:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1873,
																			"indexExpression": {
																				"id": 1872,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1866,
																				"src": "38421:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "38403:30:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "38437:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "38403:35:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1888,
																	"nodeType": "IfStatement",
																	"src": "38399:378:3",
																	"trueBody": {
																		"id": 1887,
																		"nodeType": "Block",
																		"src": "38440:337:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1878,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1876,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1866,
																						"src": "38524:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1877,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 332,
																						"src": "38539:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "38524:28:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1886,
																				"nodeType": "IfStatement",
																				"src": "38520:239:3",
																				"trueBody": {
																					"id": 1885,
																					"nodeType": "Block",
																					"src": "38554:205:3",
																					"statements": [
																						{
																							"expression": {
																								"id": 1883,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1879,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 342,
																										"src": "38684:17:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1881,
																									"indexExpression": {
																										"id": 1880,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1866,
																										"src": "38702:11:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "38684:30:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1882,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1771,
																									"src": "38717:19:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "38684:52:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1884,
																							"nodeType": "ExpressionStatement",
																							"src": "38684:52:3"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1893,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "38825:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38839:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38831:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1894,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38831:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38831:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1898,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "38843:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1892,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2111,
														"src": "38816:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38816:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1900,
												"nodeType": "EmitStatement",
												"src": "38811:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1902,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "38882:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38888:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1903,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38888:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38888:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1907,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "38900:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38909:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1901,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "38861:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38861:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1910,
												"nodeType": "ExpressionStatement",
												"src": "38861:50:3"
											},
											{
												"id": 1914,
												"nodeType": "UncheckedBlock",
												"src": "39010:49:3",
												"statements": [
													{
														"expression": {
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "39034:14:3",
															"subExpression": {
																"id": 1911,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "39034:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1913,
														"nodeType": "ExpressionStatement",
														"src": "39034:14:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "35830:206:3",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "36050:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36064:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "36056:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36056:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "36078:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "36073:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1766,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36073:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36055:37:3"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36110:0:3"
									},
									"scope": 2037,
									"src": "36041:3024:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1961,
										"nodeType": "Block",
										"src": "39423:456:3",
										"statements": [
											{
												"assignments": [
													1925
												],
												"declarations": [
													{
														"constant": false,
														"id": 1925,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "39441:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1961,
														"src": "39433:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1924,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "39433:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1929,
												"initialValue": {
													"baseExpression": {
														"id": 1926,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "39450:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1928,
													"indexExpression": {
														"id": 1927,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1919,
														"src": "39468:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "39450:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39433:41:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1930,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1925,
														"src": "39488:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39498:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "39488:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1938,
												"nodeType": "IfStatement",
												"src": "39484:70:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1934,
																	"name": "OwnershipNotInitializedForExtraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2079,
																	"src": "39509:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "39509:44:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1933,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "39501:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39501:53:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1937,
													"nodeType": "ExpressionStatement",
													"src": "39501:53:3"
												}
											},
											{
												"assignments": [
													1940
												],
												"declarations": [
													{
														"constant": false,
														"id": 1940,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "39572:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 1961,
														"src": "39564:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1939,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "39564:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1941,
												"nodeType": "VariableDeclarationStatement",
												"src": "39564:23:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "39676:52:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "39690:28:3",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "39709:9:3"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "39690:15:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1921,
														"isOffset": false,
														"isSlot": false,
														"src": "39709:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1940,
														"isOffset": false,
														"isSlot": false,
														"src": "39690:15:3",
														"valueSize": 1
													}
												],
												"id": 1942,
												"nodeType": "InlineAssembly",
												"src": "39667:61:3"
											},
											{
												"expression": {
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1943,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1925,
														"src": "39737:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1944,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "39747:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1945,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "39756:30:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "39747:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1947,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "39746:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1948,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1940,
																		"src": "39791:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1949,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "39810:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "39791:37:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1951,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "39790:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "39746:83:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39737:92:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1954,
												"nodeType": "ExpressionStatement",
												"src": "39737:92:3"
											},
											{
												"expression": {
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1955,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "39839:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1957,
														"indexExpression": {
															"id": 1956,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "39857:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "39839:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1958,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1925,
														"src": "39866:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39839:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1960,
												"nodeType": "ExpressionStatement",
												"src": "39839:33:3"
											}
										]
									},
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "39259:84:3",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "39357:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "39381:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "39373:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39373:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "39395:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "39388:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1920,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39388:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39372:33:3"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39423:0:3"
									},
									"scope": 2037,
									"src": "39348:531:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1974,
										"nodeType": "Block",
										"src": "40580:2:3",
										"statements": []
									},
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "39885:549:3",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "40448:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "40476:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "40468:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40468:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40498:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "40490:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40490:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "40517:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "40510:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1968,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "40510:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40458:82:3"
									},
									"returnParameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "40572:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1971,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "40572:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40571:8:3"
									},
									"scope": 2037,
									"src": "40439:143:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "40868:164:3",
										"statements": [
											{
												"assignments": [
													1988
												],
												"declarations": [
													{
														"constant": false,
														"id": 1988,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "40885:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 2007,
														"src": "40878:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1987,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "40878:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1995,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1991,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1982,
																"src": "40904:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1992,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "40927:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40904:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "40897:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1989,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "40897:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40897:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40878:68:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1999,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1978,
																		"src": "40982:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2000,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1980,
																		"src": "40988:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2001,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1988,
																		"src": "40992:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1998,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1975,
																	"src": "40971:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40971:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40963:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1996,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "40963:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40963:40:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 2004,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "41007:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40963:62:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1986,
												"id": 2006,
												"nodeType": "Return",
												"src": "40956:69:3"
											}
										]
									},
									"documentation": {
										"id": 1976,
										"nodeType": "StructuredDocumentation",
										"src": "40588:135:3",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "40737:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "40769:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "40761:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40761:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40791:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "40783:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40783:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "40811:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "40803:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40803:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40751:85:3"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "40859:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40859:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40858:9:3"
									},
									"scope": 2037,
									"src": "40728:304:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2017,
										"nodeType": "Block",
										"src": "41470:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2014,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "41487:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "41487:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2013,
												"id": 2016,
												"nodeType": "Return",
												"src": "41480:17:3"
											}
										]
									},
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "41223:173:3",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 2018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "41410:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41427:2:3"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "41461:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41461:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41460:9:3"
									},
									"scope": 2037,
									"src": "41401:103:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "41685:1624:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "41704:1599:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "42068:31:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "42087:4:3",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "42081:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "42081:11:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42094:4:3",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "42077:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "42077:22:3"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "42072:1:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42178:4:3",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "42184:1:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "42171:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "42171:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "42171:15:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "42243:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "42254:1:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42257:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "42250:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "42250:12:3"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "42243:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42332:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42337:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "42325:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "42325:14:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "42325:14:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "42427:14:3",
															"value": {
																"name": "str",
																"nodeType": "YulIdentifier",
																"src": "42438:3:3"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "42431:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "42685:388:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "42703:18:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "42714:3:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42719:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "42710:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42710:11:3"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "42703:3:3"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "42864:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "42873:2:3",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "42881:4:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "42887:2:3",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "42877:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "42877:13:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "42869:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "42869:22:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "42856:7:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42856:36:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "42856:36:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "42961:21:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "42973:4:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42979:2:3",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "42969:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42969:13:3"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "42961:4:3"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "43050:9:3",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "43052:5:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "43044:4:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "43037:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "43037:12:3"
																		},
																		"nodeType": "YulIf",
																		"src": "43034:25:3"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "42680:1:3",
																"type": "",
																"value": "1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "42682:2:3",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "42658:21:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "42660:17:3",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "42672:5:3"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "42664:4:3",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "42654:419:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "43087:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "43105:3:3"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "43110:3:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "43101:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "43101:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "43091:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "43207:21:3",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "43218:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "43223:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "43214:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "43214:14:3"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "43207:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "43281:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "43286:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "43274:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "43274:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "43274:19:3"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2024,
														"isOffset": false,
														"isSlot": false,
														"src": "42243:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2024,
														"isOffset": false,
														"isSlot": false,
														"src": "42332:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2024,
														"isOffset": false,
														"isSlot": false,
														"src": "42438:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2024,
														"isOffset": false,
														"isSlot": false,
														"src": "42703:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2024,
														"isOffset": false,
														"isSlot": false,
														"src": "42714:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2024,
														"isOffset": false,
														"isSlot": false,
														"src": "42864:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2024,
														"isOffset": false,
														"isSlot": false,
														"src": "43110:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2024,
														"isOffset": false,
														"isSlot": false,
														"src": "43207:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2024,
														"isOffset": false,
														"isSlot": false,
														"src": "43218:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2024,
														"isOffset": false,
														"isSlot": false,
														"src": "43281:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2021,
														"isOffset": false,
														"isSlot": false,
														"src": "42672:5:3",
														"valueSize": 1
													}
												],
												"id": 2026,
												"nodeType": "InlineAssembly",
												"src": "41695:1608:3"
											}
										]
									},
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "41510:86:3",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "41610:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "41628:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "41620:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41620:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41619:15:3"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "41680:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "41666:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2023,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41666:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41665:19:3"
									},
									"scope": 2037,
									"src": "41601:1708:3",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "43424:107:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "43443:82:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "43464:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "errorSelector",
																		"nodeType": "YulIdentifier",
																		"src": "43470:13:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "43457:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "43457:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "43457:27:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "43504:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "43510:4:3",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "43497:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "43497:18:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "43497:18:3"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2031,
														"isOffset": false,
														"isSlot": false,
														"src": "43470:13:3",
														"valueSize": 1
													}
												],
												"id": 2034,
												"nodeType": "InlineAssembly",
												"src": "43434:91:3"
											}
										]
									},
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "43315:51:3",
										"text": " @dev For more efficient reverts."
									},
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "43380:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "errorSelector",
												"nameLocation": "43395:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "43388:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2030,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "43388:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43387:22:3"
									},
									"returnParameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43424:0:3"
									},
									"scope": 2037,
									"src": "43371:160:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2038,
							"src": "895:42638:3",
							"usedErrors": [
								2043,
								2046,
								2049,
								2052,
								2055,
								2058,
								2061,
								2064,
								2067,
								2070,
								2073,
								2076,
								2079
							]
						}
					],
					"src": "84:43450:3"
				},
				"id": 3
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							2243
						]
					},
					"id": 2244,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2039,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2040,
								"nodeType": "StructuredDocumentation",
								"src": "109:37:4",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 2243,
							"linearizedBaseContracts": [
								2243
							],
							"name": "IERC721A",
							"nameLocation": "157:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2041,
										"nodeType": "StructuredDocumentation",
										"src": "172:76:4",
										"text": " The caller must own the token or be an approved operator."
									},
									"id": 2043,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "259:33:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:4"
									},
									"src": "253:42:4"
								},
								{
									"documentation": {
										"id": 2044,
										"nodeType": "StructuredDocumentation",
										"src": "301:44:4",
										"text": " The token does not exist."
									},
									"id": 2046,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "356:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:4"
									},
									"src": "350:41:4"
								},
								{
									"documentation": {
										"id": 2047,
										"nodeType": "StructuredDocumentation",
										"src": "397:65:4",
										"text": " Cannot query the balance for the zero address."
									},
									"id": 2049,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "473:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:4"
									},
									"src": "467:35:4"
								},
								{
									"documentation": {
										"id": 2050,
										"nodeType": "StructuredDocumentation",
										"src": "508:51:4",
										"text": " Cannot mint to the zero address."
									},
									"id": 2052,
									"name": "MintToZeroAddress",
									"nameLocation": "570:17:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:4"
									},
									"src": "564:26:4"
								},
								{
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "596:72:4",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"id": 2055,
									"name": "MintZeroQuantity",
									"nameLocation": "679:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:2:4"
									},
									"src": "673:25:4"
								},
								{
									"documentation": {
										"id": 2056,
										"nodeType": "StructuredDocumentation",
										"src": "704:44:4",
										"text": " The token does not exist."
									},
									"id": 2058,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "759:29:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:4"
									},
									"src": "753:38:4"
								},
								{
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "797:76:4",
										"text": " The caller must own the token or be an approved operator."
									},
									"id": 2061,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "884:33:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:2:4"
									},
									"src": "878:42:4"
								},
								{
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "926:53:4",
										"text": " The token must be owned by `from`."
									},
									"id": 2064,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "990:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:2:4"
									},
									"src": "984:35:4"
								},
								{
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "1025:116:4",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"id": 2067,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1152:38:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:2:4"
									},
									"src": "1146:47:4"
								},
								{
									"documentation": {
										"id": 2068,
										"nodeType": "StructuredDocumentation",
										"src": "1199:55:4",
										"text": " Cannot transfer to the zero address."
									},
									"id": 2070,
									"name": "TransferToZeroAddress",
									"nameLocation": "1265:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:2:4"
									},
									"src": "1259:30:4"
								},
								{
									"documentation": {
										"id": 2071,
										"nodeType": "StructuredDocumentation",
										"src": "1295:44:4",
										"text": " The token does not exist."
									},
									"id": 2073,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1350:27:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:2:4"
									},
									"src": "1344:36:4"
								},
								{
									"documentation": {
										"id": 2074,
										"nodeType": "StructuredDocumentation",
										"src": "1386:79:4",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"id": 2076,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1476:31:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:2:4"
									},
									"src": "1470:40:4"
								},
								{
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "1516:83:4",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"id": 2079,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1610:35:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:2:4"
									},
									"src": "1604:44:4"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 2088,
									"members": [
										{
											"constant": false,
											"id": 2081,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1912:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 2088,
											"src": "1904:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2080,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1904:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2083,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2017:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 2088,
											"src": "2010:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2082,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2010:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2085,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2092:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 2088,
											"src": "2087:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2084,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2087:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2087,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2203:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 2088,
											"src": "2196:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2086,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2196:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1842:14:4",
									"nodeType": "StructDefinition",
									"scope": 2243,
									"src": "1835:384:4",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2089,
										"nodeType": "StructuredDocumentation",
										"src": "2410:192:4",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 2094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2616:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2627:2:4"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "2653:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:9:4"
									},
									"scope": 2243,
									"src": "2607:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "2849:341:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3204:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3229:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "3222:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2096,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3222:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3221:20:4"
									},
									"returnParameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "3265:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2099,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3265:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:6:4"
									},
									"scope": 2243,
									"src": "3195:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2103,
										"nodeType": "StructuredDocumentation",
										"src": "3458:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 2111,
									"name": "Transfer",
									"nameLocation": "3557:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3582:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "3566:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3604:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "3588:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3588:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2109,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3624:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "3608:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3565:67:4"
									},
									"src": "3551:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2112,
										"nodeType": "StructuredDocumentation",
										"src": "3639:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 2120,
									"name": "Approval",
									"nameLocation": "3744:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3769:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "3753:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3792:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "3776:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3818:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "3802:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:74:4"
									},
									"src": "3738:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2121,
										"nodeType": "StructuredDocumentation",
										"src": "3833:124:4",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"id": 2129,
									"name": "ApprovalForAll",
									"nameLocation": "3968:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2123,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3999:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "3983:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4022:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "4006:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4037:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "4032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4032:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:64:4"
									},
									"src": "3962:85:4"
								},
								{
									"documentation": {
										"id": 2130,
										"nodeType": "StructuredDocumentation",
										"src": "4053:74:4",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 2137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4141:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4159:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4151:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4151:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4150:15:4"
									},
									"returnParameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4197:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4189:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4189:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:17:4"
									},
									"scope": 2243,
									"src": "4132:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2138,
										"nodeType": "StructuredDocumentation",
										"src": "4212:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 2145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4357:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4373:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "4365:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4365:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4364:17:4"
									},
									"returnParameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4413:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "4405:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4404:15:4"
									},
									"scope": 2243,
									"src": "4348:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2146,
										"nodeType": "StructuredDocumentation",
										"src": "4426:711:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 2157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5151:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5185:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "5177:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5177:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5207:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "5199:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5199:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5227:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "5219:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5219:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5259:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "5244:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2153,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5244:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5167:102:4"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5286:0:4"
									},
									"scope": 2243,
									"src": "5142:145:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2158,
										"nodeType": "StructuredDocumentation",
										"src": "5293:80:4",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 2167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5387:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "5413:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5413:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "5435:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5435:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "5455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5455:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5403:73:4"
									},
									"returnParameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5493:0:4"
									},
									"scope": 2243,
									"src": "5378:116:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2168,
										"nodeType": "StructuredDocumentation",
										"src": "5500:512:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6026:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6056:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "6048:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6048:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6078:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "6070:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6070:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6098:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "6090:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6090:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6038:73:4"
									},
									"returnParameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6128:0:4"
									},
									"scope": 2243,
									"src": "6017:112:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2178,
										"nodeType": "StructuredDocumentation",
										"src": "6135:459:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6608:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6624:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "6616:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6616:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6636:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "6628:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6628:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6615:29:4"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6661:0:4"
									},
									"scope": 2243,
									"src": "6599:63:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2186,
										"nodeType": "StructuredDocumentation",
										"src": "6668:316:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 2193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "6998:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7024:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "7016:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7016:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7039:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "7034:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7034:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7015:34:4"
									},
									"returnParameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7058:0:4"
									},
									"scope": 2243,
									"src": "6989:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2194,
										"nodeType": "StructuredDocumentation",
										"src": "7065:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 2201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7218:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7238:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "7230:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7230:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7229:17:4"
									},
									"returnParameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7278:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "7270:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7270:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7269:18:4"
									},
									"scope": 2243,
									"src": "7209:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2202,
										"nodeType": "StructuredDocumentation",
										"src": "7294:139:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7447:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7472:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "7464:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7464:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7487:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "7479:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7479:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7463:33:4"
									},
									"returnParameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "7520:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7520:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7519:6:4"
									},
									"scope": 2243,
									"src": "7438:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2212,
										"nodeType": "StructuredDocumentation",
										"src": "7717:58:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7789:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7793:2:4"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "7819:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7819:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7818:15:4"
									},
									"scope": 2243,
									"src": "7780:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2218,
										"nodeType": "StructuredDocumentation",
										"src": "7840:60:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7914:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7920:2:4"
									},
									"returnParameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "7946:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2220,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7946:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7945:15:4"
									},
									"scope": 2243,
									"src": "7905:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2224,
										"nodeType": "StructuredDocumentation",
										"src": "7967:90:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8071:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8088:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "8080:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8080:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8079:17:4"
									},
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "8120:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2228,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8120:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8119:15:4"
									},
									"scope": 2243,
									"src": "8062:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2232,
										"nodeType": "StructuredDocumentation",
										"src": "8322:267:4",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"id": 2242,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8600:19:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8636:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "8620:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8620:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8657:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "8649:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8649:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8684:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "8668:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8706:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "8690:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8690:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8619:90:4"
									},
									"src": "8594:116:4"
								}
							],
							"scope": 2244,
							"src": "147:8565:4",
							"usedErrors": [
								2043,
								2046,
								2049,
								2052,
								2055,
								2058,
								2061,
								2064,
								2067,
								2070,
								2073,
								2076,
								2079
							]
						}
					],
					"src": "84:8629:4"
				},
				"id": 4
			}
		}
	}
}